{"meta": {"ram": true, "ram_size": 4096, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 8388608 --connection-addr '127.0.0.1:17449'`\n 2024-07-15T23:10:48.883Z INFO  dietmc_ram > verifier mode\n 2024-07-15T23:10:48.883Z INFO  dietmc_ram > addr: \"127.0.0.1:17449\"\n 2024-07-15T23:10:48.883Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T23:10:48.883Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T23:10:48.883Z INFO  dietmc_ram > connection received\n 2024-07-15T23:10:49.086Z INFO  dietmc_ram > init time: 203.591306ms\n 2024-07-15T23:10:49.086Z INFO  dietmc_ram > run 0/1\n 2024-07-15T23:10:51.197Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.110375063s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:10:53.166Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T23:10:56.099Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.958871343s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:10:57.328Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T23:10:59.177Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T23:11:01.265Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.996817427s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:11:03.360Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T23:11:06.318Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.933403696s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:11:07.644Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T23:11:07.701Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T23:11:07.725Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.748Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.772Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.795Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.819Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.842Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.866Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.889Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.913Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.937Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.960Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.984Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.007Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.031Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.055Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.078Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.102Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.126Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.149Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.172Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.618Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:2058813     czero:0          \n 2024-07-15T23:11:08.778Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:4558813     czero:0          \n 2024-07-15T23:11:10.966Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.999123093s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:11:11.305Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:7058813     czero:0          \n 2024-07-15T23:11:11.453Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:9558812     czero:0          \n 2024-07-15T23:11:11.614Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:12058812    czero:0          \n 2024-07-15T23:11:11.774Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:14558812    czero:0          \n 2024-07-15T23:11:13.995Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.023129467s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > nb inst:      16781316\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > nb addc:      16785408\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > nb add:       50356224\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > nb multc:     50356224\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > nb mult:      16785406\n 2024-07-15T23:11:14.357Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T23:11:14.357Z INFO  dietmc_ram                   > ram-size 4096\n 2024-07-15T23:11:14.357Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T23:11:14.357Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T23:11:14.357Z INFO  dietmc_ram                   > time ram exec: 25.270584232s\n 2024-07-15T23:11:14.357Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T23:11:14.357Z INFO  dietmc_ram                   > bytes recv: 412335784\n 2024-07-15T23:11:14.357Z INFO  dietmc_ram                   > bytes total: 423593032\n 2024-07-15T23:11:14.357Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 8388608 --connection-addr '127.0.0.1:17449' --prover`\n 2024-07-15T23:10:48.866Z INFO  dietmc_ram > prover mode\n 2024-07-15T23:10:48.866Z INFO  dietmc_ram > addr: \"127.0.0.1:17449\"\n 2024-07-15T23:10:48.866Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T23:10:48.866Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T23:10:49.090Z INFO  dietmc_ram > init time: 207.508573ms\n 2024-07-15T23:10:49.090Z INFO  dietmc_ram > run 0/1\n 2024-07-15T23:10:59.174Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T23:11:07.699Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T23:11:07.699Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 4096\n 2024-07-15T23:11:07.713Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.747Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.780Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.814Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.847Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.881Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.915Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.948Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:07.982Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.015Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.049Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.082Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.116Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.149Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.183Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.218Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.253Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.287Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.320Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.354Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:11:08.492Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:449471      czero:0          \n 2024-07-15T23:11:08.654Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2949471     czero:0          \n 2024-07-15T23:11:08.810Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5449471     czero:0          \n 2024-07-15T23:11:11.330Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7949471     czero:0          \n 2024-07-15T23:11:11.481Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10449470    czero:0          \n 2024-07-15T23:11:11.651Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12949470    czero:0          \n 2024-07-15T23:11:11.811Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15449470    czero:0          \n 2024-07-15T23:11:14.318Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > nb addc:      16785408\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > nb add:       50356224\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > nb multc:     50356224\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > nb mult:      16785406\n 2024-07-15T23:11:14.341Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                       > time ram exec: 25.251154494s\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                       > ram-size 4096\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                       > bytes sent: 412335784\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                       > bytes total: 423593032\n 2024-07-15T23:11:14.341Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.022 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.040 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.031 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.044 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.036 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4074ms\nrtt min/avg/max/mdev = 0.022/0.034/0.044/0.007 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 56190 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  2.78 GBytes  23.9 Gbits/sec    0    959 KBytes       \n[  5]   1.00-2.00   sec  3.47 GBytes  29.8 Gbits/sec    0    959 KBytes       \n[  5]   2.00-3.00   sec  4.16 GBytes  35.7 Gbits/sec    0   1.44 MBytes       \n[  5]   3.00-4.00   sec  2.61 GBytes  22.4 Gbits/sec    0   1.44 MBytes       \n[  5]   4.00-5.00   sec  3.49 GBytes  30.0 Gbits/sec    0   1.44 MBytes       \n[  5]   5.00-6.00   sec  3.28 GBytes  28.2 Gbits/sec    0   1.44 MBytes       \n[  5]   6.00-7.00   sec  3.11 GBytes  26.7 Gbits/sec    0   1.44 MBytes       \n[  5]   7.00-8.00   sec  3.19 GBytes  27.4 Gbits/sec    0   1.44 MBytes       \n[  5]   8.00-9.00   sec  3.18 GBytes  27.3 Gbits/sec    0   1.44 MBytes       \n[  5]   9.00-10.00  sec  3.17 GBytes  27.3 Gbits/sec    0   1.44 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  33.2 GBytes  28.5 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  33.2 GBytes  28.5 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.018 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.052 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.040 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.061 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.055 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4086ms\nrtt min/avg/max/mdev = 0.018/0.045/0.061/0.015 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 50132 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec   118 MBytes   993 Mbits/sec    0   1.31 MBytes       \n[  5]   1.00-2.00   sec   117 MBytes   980 Mbits/sec    0   1.31 MBytes       \n[  5]   2.00-3.00   sec   116 MBytes   970 Mbits/sec    0   1.31 MBytes       \n[  5]   3.00-4.00   sec   116 MBytes   973 Mbits/sec    0   1.31 MBytes       \n[  5]   4.00-5.00   sec   118 MBytes   986 Mbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec   117 MBytes   985 Mbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec   118 MBytes   986 Mbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec   116 MBytes   973 Mbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec   119 MBytes   997 Mbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec   119 MBytes   997 Mbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  1.15 GBytes   984 Mbits/sec    0             sender\n[  5]   0.00-10.00  sec  1.14 GBytes   982 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 0, "mbits": 1000}}