{"meta": {"ram": true, "ram_size": 1024, "ram_steps": 4194304}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:32529'`\n 2024-07-15T10:16:37.506Z INFO  dietmc_ram > verifier mode\n 2024-07-15T10:16:37.506Z INFO  dietmc_ram > addr: \"127.0.0.1:32529\"\n 2024-07-15T10:16:37.506Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T10:16:37.506Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T10:16:37.519Z INFO  dietmc_ram > connection received\n 2024-07-15T10:16:38.433Z INFO  dietmc_ram > init time: 914.261104ms\n 2024-07-15T10:16:38.433Z INFO  dietmc_ram > run 0/1\n 2024-07-15T10:16:40.662Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.22849279s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T10:16:49.853Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T10:16:56.138Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.00262996s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T10:17:00.771Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T10:17:05.187Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T10:17:05.205Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.227Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.241Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.255Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.270Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.284Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.298Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.312Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.326Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.339Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:06.841Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:1036061     czero:0          \n 2024-07-15T10:17:11.635Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.979367855s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T10:17:12.398Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:3536061     czero:0          \n 2024-07-15T10:17:15.601Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:6036060     czero:0          \n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > nb inst:       8389636\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > nb addc:       8390656\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > nb add:       25171968\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > nb multc:     25171968\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > nb mult:       8390654\n 2024-07-15T10:17:18.660Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T10:17:18.660Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-15T10:17:18.660Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-15T10:17:18.660Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T10:17:18.660Z INFO  dietmc_ram                   > time ram exec: 40.226802981s\n 2024-07-15T10:17:18.660Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-15T10:17:18.660Z INFO  dietmc_ram                   > bytes recv: 208137232\n 2024-07-15T10:17:18.660Z INFO  dietmc_ram                   > bytes total: 214031968\n 2024-07-15T10:17:18.660Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.19s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:32529' --prover`\n 2024-07-15T10:16:37.519Z INFO  dietmc_ram > prover mode\n 2024-07-15T10:16:37.519Z INFO  dietmc_ram > addr: \"127.0.0.1:32529\"\n 2024-07-15T10:16:37.519Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T10:16:37.519Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T10:16:38.433Z INFO  dietmc_ram > init time: 914.163195ms\n 2024-07-15T10:16:38.433Z INFO  dietmc_ram > run 0/1\n 2024-07-15T10:17:04.633Z INFO  dietmc_ram > finalizing ram\n 2024-07-15T10:17:04.633Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 1024\n 2024-07-15T10:17:05.196Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.223Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.250Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.276Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.301Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.329Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.356Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.381Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.405Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.428Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T10:17:05.500Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:230879      czero:0          \n 2024-07-15T10:17:08.536Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2730879     czero:0          \n 2024-07-15T10:17:14.184Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5230878     czero:0          \n 2024-07-15T10:17:17.215Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7730878     czero:0          \n 2024-07-15T10:17:18.238Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > nb addc:       8390656\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > nb add:       25171968\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > nb multc:     25171968\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > nb mult:       8390654\n 2024-07-15T10:17:18.633Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                       > time ram exec: 40.200055934s\n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                       > bytes sent: 208137232\n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                       > bytes total: 214031968\n 2024-07-15T10:17:18.633Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.024 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.035 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.075 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.041 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4129ms\nrtt min/avg/max/mdev = 0.024/0.044/0.075/0.017 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 34256 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.67 GBytes  31.5 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  2.51 GBytes  21.5 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  1.29 GBytes  11.1 Gbits/sec    0   1.69 MBytes       \n[  5]   3.00-4.00   sec   459 MBytes  3.85 Gbits/sec    0   1.81 MBytes       \n[  5]   4.00-5.00   sec  3.78 GBytes  32.5 Gbits/sec    0   1.81 MBytes       \n[  5]   5.00-6.00   sec  2.90 GBytes  24.9 Gbits/sec    0   2.75 MBytes       \n[  5]   6.00-7.00   sec  1.56 GBytes  13.4 Gbits/sec    0   2.75 MBytes       \n[  5]   7.00-8.00   sec  1.93 GBytes  16.6 Gbits/sec    0   2.75 MBytes       \n[  5]   8.00-9.00   sec  3.85 GBytes  33.1 Gbits/sec    0   2.75 MBytes       \n[  5]   9.00-10.00  sec  3.76 GBytes  32.3 Gbits/sec    0   2.75 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  27.8 GBytes  23.9 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  27.8 GBytes  23.9 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.037 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.058 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.056 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.057 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4120ms\nrtt min/avg/max/mdev = 0.037/0.051/0.058/0.007 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 33322 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  9.38 MBytes  78.6 Mbits/sec    1   1.50 MBytes       \n[  5]   1.00-2.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   2.00-3.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   3.00-4.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   4.00-5.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   5.00-6.00   sec  7.00 MBytes  58.7 Mbits/sec    0   1.50 MBytes       \n[  5]   6.00-7.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   7.00-8.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   8.00-9.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   9.00-10.00  sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  61.8 MBytes  51.8 Mbits/sec    1             sender\n[  5]   0.00-10.03  sec  59.2 MBytes  49.6 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 0, "mbits": 50}}