{"meta": {"ram": true, "ram_size": 1024, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:43692'`\n 2024-07-14T23:40:26.036Z INFO  dietmc_ram > verifier mode\n 2024-07-14T23:40:26.036Z INFO  dietmc_ram > addr: \"127.0.0.1:43692\"\n 2024-07-14T23:40:26.036Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T23:40:26.036Z INFO  dietmc_ram > time reading ins/wit/rel: 41ns\n 2024-07-14T23:40:26.072Z INFO  dietmc_ram > connection received\n 2024-07-14T23:40:27.219Z INFO  dietmc_ram > init time: 1.147156223s\n 2024-07-14T23:40:27.219Z INFO  dietmc_ram > run 0/1\n 2024-07-14T23:40:29.529Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.309536461s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:40:34.268Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-14T23:40:38.656Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.17259262s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:40:41.225Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-14T23:40:45.641Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-14T23:40:47.837Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.188471735s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:40:52.559Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-14T23:40:57.047Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.154724871s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:40:59.597Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-14T23:40:59.737Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-14T23:40:59.774Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.793Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.812Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.831Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.849Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.868Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.887Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.905Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.924Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.942Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.961Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.979Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.997Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.016Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.035Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.054Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.073Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.092Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.111Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.129Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:01.845Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:2078781     czero:0          \n 2024-07-14T23:41:03.489Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:4578781     czero:0          \n 2024-07-14T23:41:06.941Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.202909979s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:41:07.740Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:7078781     czero:0          \n 2024-07-14T23:41:09.389Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:9578780     czero:0          \n 2024-07-14T23:41:11.044Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:12078780    czero:0          \n 2024-07-14T23:41:12.698Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:14578780    czero:0          \n 2024-07-14T23:41:16.211Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.22156828s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:41:16.812Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > nb inst:      16778244\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > nb addc:      16779264\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > nb add:       50337792\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > nb multc:     50337792\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > nb mult:      16779262\n 2024-07-14T23:41:16.860Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-14T23:41:16.860Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-14T23:41:16.860Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-14T23:41:16.860Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-14T23:41:16.860Z INFO  dietmc_ram                   > time ram exec: 49.641201326s\n 2024-07-14T23:41:16.860Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-14T23:41:16.860Z INFO  dietmc_ram                   > bytes recv: 412212904\n 2024-07-14T23:41:16.860Z INFO  dietmc_ram                   > bytes total: 423470152\n 2024-07-14T23:41:16.860Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:43692' --prover`\n 2024-07-14T23:40:26.022Z INFO  dietmc_ram > prover mode\n 2024-07-14T23:40:26.022Z INFO  dietmc_ram > addr: \"127.0.0.1:43692\"\n 2024-07-14T23:40:26.022Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T23:40:26.022Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-14T23:40:27.230Z INFO  dietmc_ram > init time: 1.168651058s\n 2024-07-14T23:40:27.230Z INFO  dietmc_ram > run 0/1\n 2024-07-14T23:40:45.526Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-14T23:40:59.632Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-14T23:40:59.632Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 1024\n 2024-07-14T23:40:59.781Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.825Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.854Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.883Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.912Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.941Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.970Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:40:59.999Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.028Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.058Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.087Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.117Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.148Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.179Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.209Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.238Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.267Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.295Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.324Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.353Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:41:00.485Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:467903      czero:0          \n 2024-07-14T23:41:02.170Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2967903     czero:0          \n 2024-07-14T23:41:03.874Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5467903     czero:0          \n 2024-07-14T23:41:08.071Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7967903     czero:0          \n 2024-07-14T23:41:09.766Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10467902    czero:0          \n 2024-07-14T23:41:11.475Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12967902    czero:0          \n 2024-07-14T23:41:13.177Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15467902    czero:0          \n 2024-07-14T23:41:16.603Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > nb addc:      16779264\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > nb add:       50337792\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > nb multc:     50337792\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > nb mult:      16779262\n 2024-07-14T23:41:16.823Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-14T23:41:16.823Z INFO  dietmc_ram                       > time ram exec: 49.592206315s\n 2024-07-14T23:41:16.823Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-14T23:41:16.823Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-14T23:41:16.823Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-14T23:41:16.823Z INFO  dietmc_ram                       > bytes sent: 412212904\n 2024-07-14T23:41:16.823Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-14T23:41:16.823Z INFO  dietmc_ram                       > bytes total: 423470152\n 2024-07-14T23:41:16.823Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.061 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.043 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.042 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.037 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4088ms\nrtt min/avg/max/mdev = 0.037/0.044/0.061/0.008 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 38706 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.20 GBytes  27.4 Gbits/sec    0    895 KBytes       \n[  5]   1.00-2.00   sec  3.27 GBytes  28.1 Gbits/sec    0   1.31 MBytes       \n[  5]   2.00-3.00   sec  1.89 GBytes  16.2 Gbits/sec    0   1.31 MBytes       \n[  5]   3.00-4.00   sec  3.26 GBytes  28.0 Gbits/sec    0   1.31 MBytes       \n[  5]   4.00-5.00   sec  2.88 GBytes  24.7 Gbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec  2.87 GBytes  24.6 Gbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec  3.15 GBytes  27.1 Gbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec  2.44 GBytes  21.0 Gbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec  3.19 GBytes  27.4 Gbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec  3.50 GBytes  30.1 Gbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  32.3 GBytes  27.7 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  32.3 GBytes  27.7 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.1 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.052/20.127/20.174/0.040 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42470 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  12.8 MBytes   107 Mbits/sec    0   2.25 MBytes       \n[  5]   1.00-2.00   sec  11.6 MBytes  97.5 Mbits/sec    0   2.87 MBytes       \n[  5]   2.00-3.00   sec  13.0 MBytes   109 Mbits/sec    0   3.43 MBytes       \n[  5]   3.00-4.00   sec  11.1 MBytes  93.3 Mbits/sec    0   4.00 MBytes       \n[  5]   4.00-5.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   5.00-6.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   6.00-7.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   7.00-8.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   8.00-9.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   9.00-10.00  sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   118 MBytes  99.2 Mbits/sec    0             sender\n[  5]   0.00-10.28  sec   118 MBytes  96.5 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 10, "mbits": 100}}