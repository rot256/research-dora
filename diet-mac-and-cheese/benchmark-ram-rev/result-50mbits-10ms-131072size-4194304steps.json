{"meta": {"ram": true, "ram_size": 131072, "ram_steps": 4194304}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 4194304 --connection-addr '127.0.0.1:16384'`\n 2024-07-14T23:19:09.680Z INFO  dietmc_ram > verifier mode\n 2024-07-14T23:19:09.680Z INFO  dietmc_ram > addr: \"127.0.0.1:16384\"\n 2024-07-14T23:19:09.680Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T23:19:09.680Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-14T23:19:09.715Z INFO  dietmc_ram > connection received\n 2024-07-14T23:19:11.289Z INFO  dietmc_ram > init time: 1.574276052s\n 2024-07-14T23:19:11.289Z INFO  dietmc_ram > run 0/1\n 2024-07-14T23:19:13.856Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.566713724s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:19:22.874Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-14T23:19:29.602Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.361973692s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:19:34.295Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-14T23:19:38.813Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-14T23:19:39.339Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.367Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.386Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.405Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.423Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.441Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.460Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.479Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.498Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.516Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.971Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:190749      czero:0          \n 2024-07-14T23:19:43.237Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:2690749     czero:0          \n 2024-07-14T23:19:45.823Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.39709626s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:19:49.246Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:5190748     czero:0          \n 2024-07-14T23:19:52.499Z INFO  diet_mac_and_cheese::backend > inp:8519684     witn:4194304     mul:7690748     czero:0          \n 2024-07-14T23:19:53.779Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > nb inst:       8519684\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > nb addc:       8650752\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > nb add:       25952256\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > nb multc:     25952256\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > nb mult:       8650750\n 2024-07-14T23:19:53.826Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-14T23:19:53.826Z INFO  dietmc_ram                   > ram-size 131072\n 2024-07-14T23:19:53.826Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-14T23:19:53.826Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-14T23:19:53.826Z INFO  dietmc_ram                   > time ram exec: 42.53690553s\n 2024-07-14T23:19:53.826Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-14T23:19:53.826Z INFO  dietmc_ram                   > bytes recv: 213339152\n 2024-07-14T23:19:53.826Z INFO  dietmc_ram                   > bytes total: 219233888\n 2024-07-14T23:19:53.826Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 4194304 --connection-addr '127.0.0.1:16384' --prover`\n 2024-07-14T23:19:09.664Z INFO  dietmc_ram > prover mode\n 2024-07-14T23:19:09.664Z INFO  dietmc_ram > addr: \"127.0.0.1:16384\"\n 2024-07-14T23:19:09.664Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T23:19:09.664Z INFO  dietmc_ram > time reading ins/wit/rel: 31ns\n 2024-07-14T23:19:11.317Z INFO  dietmc_ram > init time: 1.612021437s\n 2024-07-14T23:19:11.317Z INFO  dietmc_ram > run 0/1\n 2024-07-14T23:19:38.731Z INFO  dietmc_ram > finalizing ram\n 2024-07-14T23:19:38.731Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 131072\n 2024-07-14T23:19:39.347Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.398Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.427Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.457Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.486Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.514Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.543Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.573Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.603Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.632Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:39.661Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:19:41.781Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:1950591     czero:0          \n 2024-07-14T23:19:48.270Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:4450590     czero:0          \n 2024-07-14T23:19:50.984Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:6950590     czero:0          \n 2024-07-14T23:19:53.672Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > nb addc:       8650752\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > nb add:       25952256\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > nb multc:     25952256\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > nb mult:       8650750\n 2024-07-14T23:19:53.789Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-14T23:19:53.789Z INFO  dietmc_ram                       > time ram exec: 42.472323113s\n 2024-07-14T23:19:53.789Z INFO  dietmc_ram                       > ram-size 131072\n 2024-07-14T23:19:53.789Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-14T23:19:53.789Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-14T23:19:53.789Z INFO  dietmc_ram                       > bytes sent: 213339152\n 2024-07-14T23:19:53.789Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-14T23:19:53.789Z INFO  dietmc_ram                       > bytes total: 219233888\n 2024-07-14T23:19:53.789Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.022 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.029 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.031 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.032 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.029 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4085ms\nrtt min/avg/max/mdev = 0.022/0.028/0.032/0.003 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 47358 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.12 GBytes  26.7 Gbits/sec    0   1.25 MBytes       \n[  5]   1.00-2.00   sec  3.60 GBytes  30.9 Gbits/sec    0   1.25 MBytes       \n[  5]   2.00-3.00   sec  3.97 GBytes  34.1 Gbits/sec    0   1.25 MBytes       \n[  5]   3.00-4.00   sec  4.14 GBytes  35.6 Gbits/sec    0   1.25 MBytes       \n[  5]   4.00-5.00   sec  3.93 GBytes  33.7 Gbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec  3.99 GBytes  34.3 Gbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec  4.13 GBytes  35.5 Gbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec  4.08 GBytes  35.0 Gbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec  4.03 GBytes  34.6 Gbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec  4.14 GBytes  35.6 Gbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  39.8 GBytes  34.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  39.8 GBytes  34.2 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.1 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.053/20.109/20.126/0.028 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 54444 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  7.25 MBytes  60.8 Mbits/sec    0   1.94 MBytes       \n[  5]   1.00-2.00   sec  5.75 MBytes  48.2 Mbits/sec    0   2.25 MBytes       \n[  5]   2.00-3.00   sec  6.12 MBytes  51.4 Mbits/sec    0   2.56 MBytes       \n[  5]   3.00-4.00   sec  6.38 MBytes  53.5 Mbits/sec    0   2.87 MBytes       \n[  5]   4.00-5.00   sec  5.38 MBytes  45.1 Mbits/sec    0   3.75 MBytes       \n[  5]   5.00-6.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.81 MBytes       \n[  5]   6.00-7.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.81 MBytes       \n[  5]   7.00-8.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.81 MBytes       \n[  5]   8.00-9.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.81 MBytes       \n[  5]   9.00-10.00  sec  4.00 MBytes  33.5 Mbits/sec    0   4.81 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  58.9 MBytes  49.4 Mbits/sec    0             sender\n[  5]   0.00-10.12  sec  58.9 MBytes  48.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 10, "mbits": 50}}