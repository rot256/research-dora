{"meta": {"ram": true, "ram_size": 1024, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:20645'`\n 2024-07-15T00:48:57.252Z INFO  dietmc_ram > verifier mode\n 2024-07-15T00:48:57.252Z INFO  dietmc_ram > addr: \"127.0.0.1:20645\"\n 2024-07-15T00:48:57.252Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T00:48:57.252Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T00:48:57.537Z INFO  dietmc_ram > connection received\n 2024-07-15T00:49:16.118Z INFO  dietmc_ram > init time: 18.580285256s\n 2024-07-15T00:49:16.118Z INFO  dietmc_ram > run 0/1\n 2024-07-15T00:49:19.518Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.400384873s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:49:23.463Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T00:49:28.150Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.958936206s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:49:30.523Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T00:49:33.756Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T00:49:36.802Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.953645935s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:49:40.719Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T00:49:45.439Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.974138442s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:49:47.838Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T00:49:47.890Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T00:49:48.018Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.041Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.063Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.084Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.104Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.126Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.146Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.167Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.188Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.209Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.230Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.251Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.272Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.293Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.314Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.335Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.356Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.377Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.397Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.418Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:49.764Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:2078781     czero:0          \n 2024-07-15T00:49:50.816Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:4578781     czero:0          \n 2024-07-15T00:49:54.714Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.965320049s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:49:55.825Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:7078781     czero:0          \n 2024-07-15T00:49:56.875Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:9578780     czero:0          \n 2024-07-15T00:49:57.926Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:12078780    czero:0          \n 2024-07-15T00:49:58.976Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:14578780    czero:0          \n 2024-07-15T00:50:03.080Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.177394936s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:50:04.038Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > nb inst:      16778244\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > nb addc:      16779264\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > nb add:       50337792\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > nb multc:     50337792\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > nb mult:      16779262\n 2024-07-15T00:50:04.259Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T00:50:04.259Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-15T00:50:04.259Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T00:50:04.259Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T00:50:04.259Z INFO  dietmc_ram                   > time ram exec: 48.140967366s\n 2024-07-15T00:50:04.259Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T00:50:04.259Z INFO  dietmc_ram                   > bytes recv: 412212904\n 2024-07-15T00:50:04.259Z INFO  dietmc_ram                   > bytes total: 423470152\n 2024-07-15T00:50:04.259Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:20645' --prover`\n 2024-07-15T00:48:57.237Z INFO  dietmc_ram > prover mode\n 2024-07-15T00:48:57.237Z INFO  dietmc_ram > addr: \"127.0.0.1:20645\"\n 2024-07-15T00:48:57.237Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T00:48:57.237Z INFO  dietmc_ram > time reading ins/wit/rel: 71ns\n 2024-07-15T00:49:16.218Z INFO  dietmc_ram > init time: 18.780701439s\n 2024-07-15T00:49:16.218Z INFO  dietmc_ram > run 0/1\n 2024-07-15T00:49:33.654Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T00:49:47.779Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T00:49:47.779Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 1024\n 2024-07-15T00:49:48.100Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.131Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.162Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.194Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.225Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.257Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.288Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.319Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.351Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.382Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.413Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.445Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.477Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.509Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.540Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.572Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.603Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.635Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.666Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.698Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:49:48.823Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:467903      czero:0          \n 2024-07-15T00:49:50.071Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2967903     czero:0          \n 2024-07-15T00:49:51.124Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5467903     czero:0          \n 2024-07-15T00:49:55.949Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7967903     czero:0          \n 2024-07-15T00:49:57.185Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10467902    czero:0          \n 2024-07-15T00:49:58.232Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12967902    czero:0          \n 2024-07-15T00:49:59.280Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15467902    czero:0          \n 2024-07-15T00:50:03.548Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > nb addc:      16779264\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > nb add:       50337792\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > nb multc:     50337792\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > nb mult:      16779262\n 2024-07-15T00:50:04.139Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T00:50:04.139Z INFO  dietmc_ram                       > time ram exec: 47.920722568s\n 2024-07-15T00:50:04.139Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-15T00:50:04.139Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T00:50:04.139Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T00:50:04.139Z INFO  dietmc_ram                       > bytes sent: 412212904\n 2024-07-15T00:50:04.139Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T00:50:04.139Z INFO  dietmc_ram                       > bytes total: 423470152\n 2024-07-15T00:50:04.139Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.021 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.034 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.034 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.042 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.036 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4099ms\nrtt min/avg/max/mdev = 0.021/0.033/0.042/0.006 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42886 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  4.16 GBytes  35.7 Gbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  4.19 GBytes  36.0 Gbits/sec    0   1.37 MBytes       \n[  5]   2.00-3.00   sec  4.14 GBytes  35.6 Gbits/sec    0   1.37 MBytes       \n[  5]   3.00-4.00   sec  4.10 GBytes  35.2 Gbits/sec    0   1.37 MBytes       \n[  5]   4.00-5.00   sec  4.20 GBytes  36.1 Gbits/sec    0   1.37 MBytes       \n[  5]   5.00-6.00   sec  4.03 GBytes  34.6 Gbits/sec    0   1.44 MBytes       \n[  5]   6.00-7.00   sec  4.22 GBytes  36.2 Gbits/sec    0   1.44 MBytes       \n[  5]   7.00-8.00   sec  4.22 GBytes  36.2 Gbits/sec    0   1.44 MBytes       \n[  5]   8.00-9.00   sec  3.47 GBytes  29.8 Gbits/sec    0   1.44 MBytes       \n[  5]   9.00-10.00  sec  4.29 GBytes  36.8 Gbits/sec    0   1.44 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  42.2 GBytes  36.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  42.2 GBytes  36.3 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4000ms\nrtt min/avg/max/mdev = 200.141/200.160/200.177/0.012 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 44420 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  2.38 MBytes  19.9 Mbits/sec    0    703 KBytes       \n[  5]   1.00-2.00   sec  5.38 MBytes  45.1 Mbits/sec    0   12.2 MBytes       \n[  5]   2.00-3.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   3.00-4.00   sec  14.0 MBytes   117 Mbits/sec    0   12.4 MBytes       \n[  5]   4.00-5.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   5.00-6.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   6.00-7.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   7.00-8.00   sec  14.0 MBytes   117 Mbits/sec    0   12.4 MBytes       \n[  5]   8.00-9.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   9.00-10.00  sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   119 MBytes  99.8 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec   119 MBytes  97.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 100, "mbits": 1000}}