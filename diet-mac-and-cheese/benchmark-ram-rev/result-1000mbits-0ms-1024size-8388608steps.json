{"meta": {"ram": true, "ram_size": 1024, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:18844'`\n 2024-07-15T00:13:35.074Z INFO  dietmc_ram > verifier mode\n 2024-07-15T00:13:35.074Z INFO  dietmc_ram > addr: \"127.0.0.1:18844\"\n 2024-07-15T00:13:35.074Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T00:13:35.074Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T00:13:35.074Z INFO  dietmc_ram > connection received\n 2024-07-15T00:13:35.256Z INFO  dietmc_ram > init time: 182.310448ms\n 2024-07-15T00:13:35.256Z INFO  dietmc_ram > run 0/1\n 2024-07-15T00:13:37.309Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.052477264s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:13:39.274Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T00:13:42.086Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.91655281s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:13:43.320Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T00:13:45.139Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T00:13:47.075Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.916085697s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:13:49.206Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T00:13:52.033Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.90595462s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:13:53.356Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T00:13:53.411Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T00:13:53.426Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.441Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.456Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.471Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.486Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.501Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.517Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.532Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.547Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.562Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.577Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.592Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.607Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.622Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.637Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.652Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.668Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.683Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.698Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.713Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:54.172Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:2078781     czero:0          \n 2024-07-15T00:13:54.333Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:4578781     czero:0          \n 2024-07-15T00:13:56.463Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.931730286s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:13:56.845Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:7078781     czero:0          \n 2024-07-15T00:13:57.006Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:9578780     czero:0          \n 2024-07-15T00:13:57.167Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:12078780    czero:0          \n 2024-07-15T00:13:57.327Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:14578780    czero:0          \n 2024-07-15T00:13:59.450Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.925546875s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > nb inst:      16778244\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > nb addc:      16779264\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > nb add:       50337792\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > nb multc:     50337792\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > nb mult:      16779262\n 2024-07-15T00:13:59.847Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T00:13:59.847Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-15T00:13:59.847Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T00:13:59.847Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T00:13:59.847Z INFO  dietmc_ram                   > time ram exec: 24.590751706s\n 2024-07-15T00:13:59.847Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T00:13:59.847Z INFO  dietmc_ram                   > bytes recv: 412212904\n 2024-07-15T00:13:59.847Z INFO  dietmc_ram                   > bytes total: 423470152\n 2024-07-15T00:13:59.847Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:18844' --prover`\n 2024-07-15T00:13:35.058Z INFO  dietmc_ram > prover mode\n 2024-07-15T00:13:35.058Z INFO  dietmc_ram > addr: \"127.0.0.1:18844\"\n 2024-07-15T00:13:35.058Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T00:13:35.058Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T00:13:35.258Z INFO  dietmc_ram > init time: 184.498926ms\n 2024-07-15T00:13:35.258Z INFO  dietmc_ram > run 0/1\n 2024-07-15T00:13:45.065Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T00:13:53.379Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T00:13:53.379Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 1024\n 2024-07-15T00:13:53.420Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.447Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.473Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.500Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.528Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.554Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.580Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.606Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.632Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.659Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.685Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.711Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.737Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.764Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.791Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.817Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.844Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.871Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.898Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:53.926Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:13:54.052Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:467903      czero:0          \n 2024-07-15T00:13:54.203Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2967903     czero:0          \n 2024-07-15T00:13:54.361Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5467903     czero:0          \n 2024-07-15T00:13:56.872Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7967903     czero:0          \n 2024-07-15T00:13:57.041Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10467902    czero:0          \n 2024-07-15T00:13:57.198Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12967902    czero:0          \n 2024-07-15T00:13:57.355Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15467902    czero:0          \n 2024-07-15T00:13:59.821Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > nb addc:      16779264\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > nb add:       50337792\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > nb multc:     50337792\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > nb mult:      16779262\n 2024-07-15T00:13:59.833Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                       > time ram exec: 24.574584888s\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                       > bytes sent: 412212904\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                       > bytes total: 423470152\n 2024-07-15T00:13:59.833Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.019 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.034 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.039 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.040 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.039 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4075ms\nrtt min/avg/max/mdev = 0.019/0.034/0.040/0.007 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 53582 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  4.54 GBytes  39.0 Gbits/sec    0   1.06 MBytes       \n[  5]   1.00-2.00   sec  4.42 GBytes  38.0 Gbits/sec    0   1.06 MBytes       \n[  5]   2.00-3.00   sec  4.66 GBytes  40.0 Gbits/sec    0   1.06 MBytes       \n[  5]   3.00-4.00   sec  4.11 GBytes  35.3 Gbits/sec    0   1.06 MBytes       \n[  5]   4.00-5.00   sec  4.11 GBytes  35.3 Gbits/sec    0   1.06 MBytes       \n[  5]   5.00-6.00   sec  4.29 GBytes  36.8 Gbits/sec    0   1.06 MBytes       \n[  5]   6.00-7.00   sec  3.44 GBytes  29.5 Gbits/sec    0   1.37 MBytes       \n[  5]   7.00-8.00   sec  3.31 GBytes  28.4 Gbits/sec    0   1.56 MBytes       \n[  5]   8.00-9.00   sec  4.33 GBytes  37.2 Gbits/sec    0   1.56 MBytes       \n[  5]   9.00-10.00  sec  4.03 GBytes  34.6 Gbits/sec    0   1.56 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  42.4 GBytes  36.4 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  42.4 GBytes  36.4 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.020 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.039 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.033 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.043 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4090ms\nrtt min/avg/max/mdev = 0.020/0.036/0.047/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 44800 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec   119 MBytes   998 Mbits/sec    0   1.31 MBytes       \n[  5]   1.00-2.00   sec   118 MBytes   987 Mbits/sec    0   1.31 MBytes       \n[  5]   2.00-3.00   sec   117 MBytes   979 Mbits/sec    0   1.31 MBytes       \n[  5]   3.00-4.00   sec   115 MBytes   968 Mbits/sec    0   1.31 MBytes       \n[  5]   4.00-5.00   sec   118 MBytes   991 Mbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec   118 MBytes   991 Mbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec   117 MBytes   979 Mbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec   118 MBytes   991 Mbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec   117 MBytes   982 Mbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec   118 MBytes   990 Mbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  1.15 GBytes   986 Mbits/sec    0             sender\n[  5]   0.00-10.00  sec  1.14 GBytes   983 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 0, "mbits": 1000}}