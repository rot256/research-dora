{"meta": {"ram": true, "ram_size": 65536, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 65536 --ram-steps 8388608 --connection-addr '127.0.0.1:20321'`\n 2024-07-15T12:43:29.979Z INFO  dietmc_ram > verifier mode\n 2024-07-15T12:43:29.979Z INFO  dietmc_ram > addr: \"127.0.0.1:20321\"\n 2024-07-15T12:43:29.979Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T12:43:29.979Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T12:43:30.294Z INFO  dietmc_ram > connection received\n 2024-07-15T12:43:36.720Z INFO  dietmc_ram > init time: 6.42509016s\n 2024-07-15T12:43:36.720Z INFO  dietmc_ram > run 0/1\n 2024-07-15T12:43:40.414Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.694068057s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:43:50.950Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T12:43:59.272Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.215189467s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:44:04.972Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T12:44:14.774Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T12:44:18.256Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.253727123s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:44:28.829Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T12:44:37.149Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.188545724s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:44:42.808Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T12:44:43.092Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T12:44:43.670Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.696Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.720Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.745Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.769Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.793Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.817Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.841Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.865Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.889Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.913Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.937Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.961Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.986Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.010Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.034Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.058Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.082Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.106Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.131Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:47.052Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:1659453     czero:0          \n 2024-07-15T12:44:50.855Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:4159453     czero:0          \n 2024-07-15T12:44:57.185Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.218527685s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:44:58.318Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:6659453     czero:0          \n 2024-07-15T12:45:02.021Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:9159452     czero:0          \n 2024-07-15T12:45:05.824Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:11659452    czero:0          \n 2024-07-15T12:45:09.532Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:14159452    czero:0          \n 2024-07-15T12:45:16.103Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.237102842s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:45:17.266Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:16659452    czero:0          \n 2024-07-15T12:45:17.713Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > nb inst:      16842756\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > nb addc:      16908288\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > nb add:       50724864\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > nb multc:     50724864\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > nb mult:      16908286\n 2024-07-15T12:45:17.941Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T12:45:17.941Z INFO  dietmc_ram                   > ram-size 65536\n 2024-07-15T12:45:17.941Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T12:45:17.941Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T12:45:17.941Z INFO  dietmc_ram                   > time ram exec: 101.221662521s\n 2024-07-15T12:45:17.941Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T12:45:17.941Z INFO  dietmc_ram                   > bytes recv: 414793384\n 2024-07-15T12:45:17.941Z INFO  dietmc_ram                   > bytes total: 426050632\n 2024-07-15T12:45:17.941Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.19s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 65536 --ram-steps 8388608 --connection-addr '127.0.0.1:20321' --prover`\n 2024-07-15T12:43:29.994Z INFO  dietmc_ram > prover mode\n 2024-07-15T12:43:29.994Z INFO  dietmc_ram > addr: \"127.0.0.1:20321\"\n 2024-07-15T12:43:29.994Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T12:43:29.994Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T12:43:36.841Z INFO  dietmc_ram > init time: 6.646473298s\n 2024-07-15T12:43:36.841Z INFO  dietmc_ram > run 0/1\n 2024-07-15T12:44:14.167Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T12:44:42.663Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T12:44:42.663Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 65536\n 2024-07-15T12:44:43.744Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.793Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.826Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.860Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.893Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.927Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.960Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:43.993Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.027Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.061Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.094Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.127Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.162Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.197Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.231Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.265Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.299Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.332Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.366Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.399Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:44:44.529Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:80831       czero:0          \n 2024-07-15T12:44:47.924Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2580831     czero:0          \n 2024-07-15T12:44:52.104Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5080831     czero:0          \n 2024-07-15T12:44:59.405Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7580831     czero:0          \n 2024-07-15T12:45:02.901Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10080830    czero:0          \n 2024-07-15T12:45:07.080Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12580830    czero:0          \n 2024-07-15T12:45:10.582Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15080830    czero:0          \n 2024-07-15T12:45:17.064Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > nb addc:      16908288\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > nb add:       50724864\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > nb multc:     50724864\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > nb mult:      16908286\n 2024-07-15T12:45:17.813Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T12:45:17.813Z INFO  dietmc_ram                       > time ram exec: 100.972445456s\n 2024-07-15T12:45:17.813Z INFO  dietmc_ram                       > ram-size 65536\n 2024-07-15T12:45:17.813Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T12:45:17.813Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T12:45:17.813Z INFO  dietmc_ram                       > bytes sent: 414793384\n 2024-07-15T12:45:17.813Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T12:45:17.813Z INFO  dietmc_ram                       > bytes total: 426050632\n 2024-07-15T12:45:17.813Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.028 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.034 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.050 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.049 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4100ms\nrtt min/avg/max/mdev = 0.028/0.041/0.050/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 43536 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  2.85 GBytes  24.5 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  3.17 GBytes  27.2 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  2.72 GBytes  23.4 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  2.65 GBytes  22.7 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.74 GBytes  32.1 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  2.58 GBytes  22.2 Gbits/sec    0   1023 KBytes       \n[  5]   6.00-7.00   sec  2.76 GBytes  23.7 Gbits/sec    0   1023 KBytes       \n[  5]   7.00-8.00   sec  2.80 GBytes  24.1 Gbits/sec    0   1023 KBytes       \n[  5]   8.00-9.00   sec  2.79 GBytes  24.0 Gbits/sec    0   1023 KBytes       \n[  5]   9.00-10.00  sec  2.78 GBytes  23.9 Gbits/sec    0   1023 KBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  29.5 GBytes  25.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  29.5 GBytes  25.3 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 200.144/200.177/200.219/0.034 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 51984 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  2.62 MBytes  22.0 Mbits/sec    0   5.06 MBytes       \n[  5]   2.00-3.00   sec  6.88 MBytes  57.7 Mbits/sec    0   5.18 MBytes       \n[  5]   3.00-4.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   4.00-5.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   5.00-6.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   6.00-7.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   7.00-8.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   8.00-9.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   9.00-10.00  sec  3.38 MBytes  28.2 Mbits/sec    0   5.18 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  47.0 MBytes  39.4 Mbits/sec    0             sender\n[  5]   0.00-10.43  sec  47.0 MBytes  37.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 100, "mbits": 50}}