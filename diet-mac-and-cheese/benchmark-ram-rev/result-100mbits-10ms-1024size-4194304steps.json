{"meta": {"ram": true, "ram_size": 1024, "ram_steps": 4194304}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:17965'`\n 2024-07-14T23:39:59.184Z INFO  dietmc_ram > verifier mode\n 2024-07-14T23:39:59.184Z INFO  dietmc_ram > addr: \"127.0.0.1:17965\"\n 2024-07-14T23:39:59.184Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T23:39:59.184Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-14T23:39:59.230Z INFO  dietmc_ram > connection received\n 2024-07-14T23:40:00.403Z INFO  dietmc_ram > init time: 1.172704688s\n 2024-07-14T23:40:00.403Z INFO  dietmc_ram > run 0/1\n 2024-07-14T23:40:02.722Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.319066139s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:40:07.503Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-14T23:40:11.879Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.162387026s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:40:14.460Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-14T23:40:16.737Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-14T23:40:16.768Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.795Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.821Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.848Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.875Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.902Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.928Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.955Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.982Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:17.009Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:17.890Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:1036061     czero:0          \n 2024-07-14T23:40:21.622Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.224568366s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:40:22.180Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:3536061     czero:0          \n 2024-07-14T23:40:23.832Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:6036060     czero:0          \n 2024-07-14T23:40:25.390Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > nb inst:       8389636\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > nb addc:       8390656\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > nb add:       25171968\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > nb multc:     25171968\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > nb mult:       8390654\n 2024-07-14T23:40:25.439Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-14T23:40:25.439Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-14T23:40:25.439Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-14T23:40:25.439Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-14T23:40:25.439Z INFO  dietmc_ram                   > time ram exec: 25.036532676s\n 2024-07-14T23:40:25.439Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-14T23:40:25.439Z INFO  dietmc_ram                   > bytes recv: 208137232\n 2024-07-14T23:40:25.439Z INFO  dietmc_ram                   > bytes total: 214031968\n 2024-07-14T23:40:25.439Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:17965' --prover`\n 2024-07-14T23:39:59.200Z INFO  dietmc_ram > prover mode\n 2024-07-14T23:39:59.200Z INFO  dietmc_ram > addr: \"127.0.0.1:17965\"\n 2024-07-14T23:39:59.200Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T23:39:59.200Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-14T23:40:00.415Z INFO  dietmc_ram > init time: 1.194829118s\n 2024-07-14T23:40:00.415Z INFO  dietmc_ram > run 0/1\n 2024-07-14T23:40:16.526Z INFO  dietmc_ram > finalizing ram\n 2024-07-14T23:40:16.526Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 1024\n 2024-07-14T23:40:16.773Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.824Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.861Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.898Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.935Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:16.972Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:17.009Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:17.047Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:17.084Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:17.121Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T23:40:17.209Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:230879      czero:0          \n 2024-07-14T23:40:18.929Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2730879     czero:0          \n 2024-07-14T23:40:23.055Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5230878     czero:0          \n 2024-07-14T23:40:24.756Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7730878     czero:0          \n 2024-07-14T23:40:25.127Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > nb addc:       8390656\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > nb add:       25171968\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > nb multc:     25171968\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > nb mult:       8390654\n 2024-07-14T23:40:25.400Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-14T23:40:25.400Z INFO  dietmc_ram                       > time ram exec: 24.985479294s\n 2024-07-14T23:40:25.400Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-14T23:40:25.400Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-14T23:40:25.400Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-14T23:40:25.400Z INFO  dietmc_ram                       > bytes sent: 208137232\n 2024-07-14T23:40:25.400Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-14T23:40:25.400Z INFO  dietmc_ram                       > bytes total: 214031968\n 2024-07-14T23:40:25.400Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.061 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.043 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.042 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.037 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4088ms\nrtt min/avg/max/mdev = 0.037/0.044/0.061/0.008 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 38706 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.20 GBytes  27.4 Gbits/sec    0    895 KBytes       \n[  5]   1.00-2.00   sec  3.27 GBytes  28.1 Gbits/sec    0   1.31 MBytes       \n[  5]   2.00-3.00   sec  1.89 GBytes  16.2 Gbits/sec    0   1.31 MBytes       \n[  5]   3.00-4.00   sec  3.26 GBytes  28.0 Gbits/sec    0   1.31 MBytes       \n[  5]   4.00-5.00   sec  2.88 GBytes  24.7 Gbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec  2.87 GBytes  24.6 Gbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec  3.15 GBytes  27.1 Gbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec  2.44 GBytes  21.0 Gbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec  3.19 GBytes  27.4 Gbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec  3.50 GBytes  30.1 Gbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  32.3 GBytes  27.7 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  32.3 GBytes  27.7 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.1 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.052/20.127/20.174/0.040 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42470 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  12.8 MBytes   107 Mbits/sec    0   2.25 MBytes       \n[  5]   1.00-2.00   sec  11.6 MBytes  97.5 Mbits/sec    0   2.87 MBytes       \n[  5]   2.00-3.00   sec  13.0 MBytes   109 Mbits/sec    0   3.43 MBytes       \n[  5]   3.00-4.00   sec  11.1 MBytes  93.3 Mbits/sec    0   4.00 MBytes       \n[  5]   4.00-5.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   5.00-6.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   6.00-7.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   7.00-8.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   8.00-9.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   9.00-10.00  sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   118 MBytes  99.2 Mbits/sec    0             sender\n[  5]   0.00-10.28  sec   118 MBytes  96.5 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 10, "mbits": 100}}