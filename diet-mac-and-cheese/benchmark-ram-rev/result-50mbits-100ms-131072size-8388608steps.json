{"meta": {"ram": true, "ram_size": 131072, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 8388608 --connection-addr '127.0.0.1:33944'`\n 2024-07-15T12:49:54.990Z INFO  dietmc_ram > verifier mode\n 2024-07-15T12:49:54.990Z INFO  dietmc_ram > addr: \"127.0.0.1:33944\"\n 2024-07-15T12:49:54.990Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T12:49:54.990Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T12:49:55.275Z INFO  dietmc_ram > connection received\n 2024-07-15T12:50:02.771Z INFO  dietmc_ram > init time: 7.495205184s\n 2024-07-15T12:50:02.771Z INFO  dietmc_ram > run 0/1\n 2024-07-15T12:50:06.457Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.686094134s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:50:17.004Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T12:50:25.344Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.205525322s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:50:31.026Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T12:50:40.828Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T12:50:44.264Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.205374629s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:50:54.841Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T12:51:03.176Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.198924586s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:51:08.802Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T12:51:09.085Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T12:51:09.836Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:09.864Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:09.889Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:09.914Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:09.938Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:09.963Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:09.988Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.012Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.037Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.062Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.086Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.110Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.135Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.160Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.184Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.209Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.234Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.258Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.283Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.308Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:12.599Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:1233469     czero:0          \n 2024-07-15T12:51:16.402Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:3733469     czero:0          \n 2024-07-15T12:51:23.279Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.294331715s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:51:23.969Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:6233469     czero:0          \n 2024-07-15T12:51:27.750Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:8733468     czero:0          \n 2024-07-15T12:51:31.457Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:11233468    czero:0          \n 2024-07-15T12:51:35.160Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:13733468    czero:0          \n 2024-07-15T12:51:42.168Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.494028986s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T12:51:43.004Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:16233468    czero:0          \n 2024-07-15T12:51:44.313Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T12:51:44.541Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T12:51:44.541Z INFO  diet_mac_and_cheese::backend > nb inst:      16908292\n 2024-07-15T12:51:44.541Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T12:51:44.541Z INFO  diet_mac_and_cheese::backend > nb addc:      17039360\n 2024-07-15T12:51:44.541Z INFO  diet_mac_and_cheese::backend > nb add:       51118080\n 2024-07-15T12:51:44.542Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T12:51:44.542Z INFO  diet_mac_and_cheese::backend > nb multc:     51118080\n 2024-07-15T12:51:44.542Z INFO  diet_mac_and_cheese::backend > nb mult:      17039358\n 2024-07-15T12:51:44.542Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T12:51:44.542Z INFO  dietmc_ram                   > ram-size 131072\n 2024-07-15T12:51:44.542Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T12:51:44.542Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T12:51:44.542Z INFO  dietmc_ram                   > time ram exec: 101.77081107s\n 2024-07-15T12:51:44.542Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T12:51:44.542Z INFO  dietmc_ram                   > bytes recv: 417414824\n 2024-07-15T12:51:44.542Z INFO  dietmc_ram                   > bytes total: 428672072\n 2024-07-15T12:51:44.542Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 8388608 --connection-addr '127.0.0.1:33944' --prover`\n 2024-07-15T12:49:54.975Z INFO  dietmc_ram > prover mode\n 2024-07-15T12:49:54.975Z INFO  dietmc_ram > addr: \"127.0.0.1:33944\"\n 2024-07-15T12:49:54.975Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T12:49:54.975Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T12:50:02.872Z INFO  dietmc_ram > init time: 7.696908607s\n 2024-07-15T12:50:02.872Z INFO  dietmc_ram > run 0/1\n 2024-07-15T12:50:40.249Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T12:51:08.650Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T12:51:08.650Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 131072\n 2024-07-15T12:51:09.912Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:09.962Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:09.997Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.032Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.066Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.101Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.136Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.171Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.206Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.240Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.274Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.309Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.345Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.380Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.416Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.453Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.489Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.524Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.559Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.595Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:10.630Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T12:51:13.482Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2187615     czero:0          \n 2024-07-15T12:51:17.660Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:4687615     czero:0          \n 2024-07-15T12:51:25.246Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7187615     czero:0          \n 2024-07-15T12:51:28.799Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:9687614     czero:0          \n 2024-07-15T12:51:32.357Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12187614    czero:0          \n 2024-07-15T12:51:36.589Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:14687614    czero:0          \n 2024-07-15T12:51:43.833Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > nb addc:      17039360\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > nb add:       51118080\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > nb multc:     51118080\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > nb mult:      17039358\n 2024-07-15T12:51:44.413Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T12:51:44.413Z INFO  dietmc_ram                       > time ram exec: 101.540753105s\n 2024-07-15T12:51:44.413Z INFO  dietmc_ram                       > ram-size 131072\n 2024-07-15T12:51:44.413Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T12:51:44.413Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T12:51:44.413Z INFO  dietmc_ram                       > bytes sent: 417414824\n 2024-07-15T12:51:44.413Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T12:51:44.413Z INFO  dietmc_ram                       > bytes total: 428672072\n 2024-07-15T12:51:44.413Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.028 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.034 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.050 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.049 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4100ms\nrtt min/avg/max/mdev = 0.028/0.041/0.050/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 43536 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  2.85 GBytes  24.5 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  3.17 GBytes  27.2 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  2.72 GBytes  23.4 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  2.65 GBytes  22.7 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.74 GBytes  32.1 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  2.58 GBytes  22.2 Gbits/sec    0   1023 KBytes       \n[  5]   6.00-7.00   sec  2.76 GBytes  23.7 Gbits/sec    0   1023 KBytes       \n[  5]   7.00-8.00   sec  2.80 GBytes  24.1 Gbits/sec    0   1023 KBytes       \n[  5]   8.00-9.00   sec  2.79 GBytes  24.0 Gbits/sec    0   1023 KBytes       \n[  5]   9.00-10.00  sec  2.78 GBytes  23.9 Gbits/sec    0   1023 KBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  29.5 GBytes  25.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  29.5 GBytes  25.3 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 200.144/200.177/200.219/0.034 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 51984 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  2.62 MBytes  22.0 Mbits/sec    0   5.06 MBytes       \n[  5]   2.00-3.00   sec  6.88 MBytes  57.7 Mbits/sec    0   5.18 MBytes       \n[  5]   3.00-4.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   4.00-5.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   5.00-6.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   6.00-7.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   7.00-8.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   8.00-9.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   9.00-10.00  sec  3.38 MBytes  28.2 Mbits/sec    0   5.18 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  47.0 MBytes  39.4 Mbits/sec    0             sender\n[  5]   0.00-10.43  sec  47.0 MBytes  37.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 100, "mbits": 50}}