{"meta": {"ram": true, "ram_size": 16384, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 8388608 --connection-addr '127.0.0.1:48984'`\n 2024-07-15T13:26:55.511Z INFO  dietmc_ram > verifier mode\n 2024-07-15T13:26:55.511Z INFO  dietmc_ram > addr: \"127.0.0.1:48984\"\n 2024-07-15T13:26:55.511Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T13:26:55.511Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T13:26:55.511Z INFO  dietmc_ram > connection received\n 2024-07-15T13:26:56.053Z INFO  dietmc_ram > init time: 541.996911ms\n 2024-07-15T13:26:56.053Z INFO  dietmc_ram > run 0/1\n 2024-07-15T13:26:58.292Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.23842301s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T13:27:02.942Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T13:27:07.199Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.116287871s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T13:27:09.681Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T13:27:13.955Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T13:27:16.078Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.116102677s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T13:27:20.696Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T13:27:24.935Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.090643695s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T13:27:27.429Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T13:27:27.570Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T13:27:27.636Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.658Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.680Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.703Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.725Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.747Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.770Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.792Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.815Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.837Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.859Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.882Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.905Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.927Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.949Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.972Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.994Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.017Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.039Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.062Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:29.624Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:1978941     czero:0          \n 2024-07-15T13:27:31.229Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:4478941     czero:0          \n 2024-07-15T13:27:34.597Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.128602399s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T13:27:35.299Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:6978941     czero:0          \n 2024-07-15T13:27:36.903Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:9478940     czero:0          \n 2024-07-15T13:27:38.507Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:11978940    czero:0          \n 2024-07-15T13:27:40.116Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:14478940    czero:0          \n 2024-07-15T13:27:43.498Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.13406701s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > nb inst:      16793604\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > nb addc:      16809984\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > nb add:       50429952\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > nb multc:     50429952\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > nb mult:      16809982\n 2024-07-15T13:27:44.140Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T13:27:44.140Z INFO  dietmc_ram                   > ram-size 16384\n 2024-07-15T13:27:44.140Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T13:27:44.140Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T13:27:44.140Z INFO  dietmc_ram                   > time ram exec: 48.087004425s\n 2024-07-15T13:27:44.140Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T13:27:44.140Z INFO  dietmc_ram                   > bytes recv: 412827304\n 2024-07-15T13:27:44.140Z INFO  dietmc_ram                   > bytes total: 424084552\n 2024-07-15T13:27:44.140Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 8388608 --connection-addr '127.0.0.1:48984' --prover`\n 2024-07-15T13:26:55.496Z INFO  dietmc_ram > prover mode\n 2024-07-15T13:26:55.496Z INFO  dietmc_ram > addr: \"127.0.0.1:48984\"\n 2024-07-15T13:26:55.496Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T13:26:55.496Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T13:26:56.051Z INFO  dietmc_ram > init time: 539.692865ms\n 2024-07-15T13:26:56.051Z INFO  dietmc_ram > run 0/1\n 2024-07-15T13:27:13.677Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T13:27:27.279Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T13:27:27.279Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 16384\n 2024-07-15T13:27:27.620Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.659Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.691Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.723Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.756Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.788Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.821Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.853Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.885Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.918Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.950Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:27.982Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.014Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.047Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.079Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.112Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.145Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.178Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.210Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.243Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T13:27:28.370Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:375743      czero:0          \n 2024-07-15T13:27:29.982Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2875743     czero:0          \n 2024-07-15T13:27:31.502Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5375743     czero:0          \n 2024-07-15T13:27:35.586Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7875743     czero:0          \n 2024-07-15T13:27:37.213Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10375742    czero:0          \n 2024-07-15T13:27:38.846Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12875742    czero:0          \n 2024-07-15T13:27:40.370Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15375742    czero:0          \n 2024-07-15T13:27:43.874Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > nb addc:      16809984\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > nb add:       50429952\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > nb multc:     50429952\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > nb mult:      16809982\n 2024-07-15T13:27:44.111Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                       > time ram exec: 48.060298007s\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                       > ram-size 16384\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                       > bytes sent: 412827304\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                       > bytes total: 424084552\n 2024-07-15T13:27:44.111Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.031 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.045 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.033 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.043 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.044 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4081ms\nrtt min/avg/max/mdev = 0.031/0.039/0.045/0.006 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 36746 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  2.99 GBytes  25.6 Gbits/sec    0    895 KBytes       \n[  5]   1.00-2.00   sec  3.26 GBytes  28.0 Gbits/sec    0   1.25 MBytes       \n[  5]   2.00-3.00   sec  4.08 GBytes  35.1 Gbits/sec    0   1.25 MBytes       \n[  5]   3.00-4.00   sec  3.56 GBytes  30.6 Gbits/sec    0   1.25 MBytes       \n[  5]   4.00-5.00   sec  3.86 GBytes  33.1 Gbits/sec    0   1.25 MBytes       \n[  5]   5.00-6.00   sec  3.71 GBytes  31.9 Gbits/sec    0   1.25 MBytes       \n[  5]   6.00-7.00   sec  4.03 GBytes  34.6 Gbits/sec    0   1.25 MBytes       \n[  5]   7.00-8.00   sec  3.97 GBytes  34.1 Gbits/sec    0   1.25 MBytes       \n[  5]   8.00-9.00   sec  3.89 GBytes  33.4 Gbits/sec    0   1.25 MBytes       \n[  5]   9.00-10.00  sec  3.76 GBytes  32.3 Gbits/sec    0   1.44 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.5 GBytes  32.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.5 GBytes  32.2 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.022 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.051 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.042 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4135ms\nrtt min/avg/max/mdev = 0.022/0.039/0.051/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 45412 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  15.1 MBytes   127 Mbits/sec    0   1.56 MBytes       \n[  5]   1.00-2.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   2.00-3.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   3.00-4.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   4.00-5.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   5.00-6.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   6.00-7.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   7.00-8.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   8.00-9.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   9.00-10.00  sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   123 MBytes   103 Mbits/sec    0             sender\n[  5]   0.00-10.01  sec   119 MBytes  99.7 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 0, "mbits": 100}}