{"meta": {"ram": true, "ram_size": 8192, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 8192 --ram-steps 8388608 --connection-addr '127.0.0.1:12334'`\n 2024-07-15T00:35:02.249Z INFO  dietmc_ram > verifier mode\n 2024-07-15T00:35:02.249Z INFO  dietmc_ram > addr: \"127.0.0.1:12334\"\n 2024-07-15T00:35:02.249Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T00:35:02.249Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T00:35:02.294Z INFO  dietmc_ram > connection received\n 2024-07-15T00:35:03.311Z INFO  dietmc_ram > init time: 1.016870919s\n 2024-07-15T00:35:03.311Z INFO  dietmc_ram > run 0/1\n 2024-07-15T00:35:05.512Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.200796869s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:35:07.395Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T00:35:10.403Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.068313915s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:35:11.568Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T00:35:13.316Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T00:35:15.489Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.081977852s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:35:17.537Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T00:35:20.587Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.071408377s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:35:21.837Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T00:35:21.892Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T00:35:21.915Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:21.931Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:21.948Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:21.964Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:21.980Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:21.997Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.013Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.030Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.046Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.062Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.078Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.095Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.111Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.128Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.144Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.160Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.176Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.193Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.209Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.225Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.742Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:2032189     czero:0          \n 2024-07-15T00:35:22.954Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:4532189     czero:0          \n 2024-07-15T00:35:25.292Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.083010582s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:35:25.683Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:7032189     czero:0          \n 2024-07-15T00:35:25.884Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:9532188     czero:0          \n 2024-07-15T00:35:26.096Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:12032188    czero:0          \n 2024-07-15T00:35:26.308Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:14532188    czero:0          \n 2024-07-15T00:35:28.656Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.092862642s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:35:29.031Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > nb inst:      16785412\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > nb addc:      16793600\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > nb add:       50380800\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > nb multc:     50380800\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > nb mult:      16793598\n 2024-07-15T00:35:29.066Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T00:35:29.066Z INFO  dietmc_ram                   > ram-size 8192\n 2024-07-15T00:35:29.066Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T00:35:29.066Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T00:35:29.066Z INFO  dietmc_ram                   > time ram exec: 25.754683656s\n 2024-07-15T00:35:29.066Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T00:35:29.066Z INFO  dietmc_ram                   > bytes recv: 412499624\n 2024-07-15T00:35:29.066Z INFO  dietmc_ram                   > bytes total: 423756872\n 2024-07-15T00:35:29.066Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 8192 --ram-steps 8388608 --connection-addr '127.0.0.1:12334' --prover`\n 2024-07-15T00:35:02.264Z INFO  dietmc_ram > prover mode\n 2024-07-15T00:35:02.264Z INFO  dietmc_ram > addr: \"127.0.0.1:12334\"\n 2024-07-15T00:35:02.264Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T00:35:02.264Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T00:35:03.323Z INFO  dietmc_ram > init time: 1.038743972s\n 2024-07-15T00:35:03.323Z INFO  dietmc_ram > run 0/1\n 2024-07-15T00:35:13.304Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T00:35:21.880Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T00:35:21.880Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 8192\n 2024-07-15T00:35:21.918Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:21.945Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:21.972Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:21.999Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.026Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.053Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.080Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.107Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.134Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.161Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.188Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.215Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.243Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.270Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.298Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.325Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.352Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.380Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.407Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.434Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:35:22.557Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:424895      czero:0          \n 2024-07-15T00:35:22.799Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2924895     czero:0          \n 2024-07-15T00:35:23.014Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5424895     czero:0          \n 2024-07-15T00:35:25.726Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7924895     czero:0          \n 2024-07-15T00:35:25.941Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10424894    czero:0          \n 2024-07-15T00:35:26.155Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12924894    czero:0          \n 2024-07-15T00:35:26.370Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15424894    czero:0          \n 2024-07-15T00:35:28.991Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > nb addc:      16793600\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > nb add:       50380800\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > nb multc:     50380800\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > nb mult:      16793598\n 2024-07-15T00:35:29.041Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T00:35:29.041Z INFO  dietmc_ram                       > time ram exec: 25.717973579s\n 2024-07-15T00:35:29.041Z INFO  dietmc_ram                       > ram-size 8192\n 2024-07-15T00:35:29.041Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T00:35:29.041Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T00:35:29.041Z INFO  dietmc_ram                       > bytes sent: 412499624\n 2024-07-15T00:35:29.041Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T00:35:29.041Z INFO  dietmc_ram                       > bytes total: 423756872\n 2024-07-15T00:35:29.041Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.018 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.027 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.025 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.026 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.035 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4118ms\nrtt min/avg/max/mdev = 0.018/0.026/0.035/0.005 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 40946 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  2.83 GBytes  24.2 Gbits/sec    0    895 KBytes       \n[  5]   1.00-2.00   sec  1.91 GBytes  16.4 Gbits/sec    0    895 KBytes       \n[  5]   2.00-3.00   sec  2.72 GBytes  23.4 Gbits/sec    0    895 KBytes       \n[  5]   3.00-4.00   sec  2.66 GBytes  22.9 Gbits/sec    0   1.37 MBytes       \n[  5]   4.00-5.00   sec  4.47 GBytes  38.4 Gbits/sec    0   1.37 MBytes       \n[  5]   5.00-6.00   sec  4.37 GBytes  37.6 Gbits/sec    0   1.37 MBytes       \n[  5]   6.00-7.00   sec  2.96 GBytes  25.5 Gbits/sec    0   1.37 MBytes       \n[  5]   7.00-8.00   sec  2.99 GBytes  25.7 Gbits/sec    0   1.37 MBytes       \n[  5]   8.00-9.00   sec  4.32 GBytes  37.1 Gbits/sec    0   1.37 MBytes       \n[  5]   9.00-10.00  sec  4.15 GBytes  35.6 Gbits/sec    0   1.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.0 GBytes  30.0 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.0 GBytes  30.0 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.1 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.058/20.110/20.135/0.027 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 52426 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  74.2 MBytes   622 Mbits/sec    0   8.99 MBytes       \n[  5]   1.00-2.00   sec  84.5 MBytes   709 Mbits/sec    0   8.99 MBytes       \n[  5]   2.00-3.00   sec  85.1 MBytes   714 Mbits/sec    0   8.99 MBytes       \n[  5]   3.00-4.00   sec  84.6 MBytes   710 Mbits/sec    0   8.99 MBytes       \n[  5]   4.00-5.00   sec  83.2 MBytes   698 Mbits/sec    0   8.99 MBytes       \n[  5]   5.00-6.00   sec  84.2 MBytes   707 Mbits/sec    0   8.99 MBytes       \n[  5]   6.00-7.00   sec  81.4 MBytes   683 Mbits/sec    0   8.99 MBytes       \n[  5]   7.00-8.00   sec  84.2 MBytes   707 Mbits/sec    0   8.99 MBytes       \n[  5]   8.00-9.00   sec  83.6 MBytes   701 Mbits/sec    0   8.99 MBytes       \n[  5]   9.00-10.00  sec  84.8 MBytes   711 Mbits/sec    0   8.99 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   830 MBytes   696 Mbits/sec    0             sender\n[  5]   0.00-10.03  sec   830 MBytes   694 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 10, "mbits": 1000}}