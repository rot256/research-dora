{"meta": {"ram": true, "ram_size": 16384, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 8388608 --connection-addr '127.0.0.1:21694'`\n 2024-07-15T23:31:19.325Z INFO  dietmc_ram > verifier mode\n 2024-07-15T23:31:19.325Z INFO  dietmc_ram > addr: \"127.0.0.1:21694\"\n 2024-07-15T23:31:19.325Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T23:31:19.325Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T23:31:19.370Z INFO  dietmc_ram > connection received\n 2024-07-15T23:31:20.281Z INFO  dietmc_ram > init time: 911.249353ms\n 2024-07-15T23:31:20.281Z INFO  dietmc_ram > run 0/1\n 2024-07-15T23:31:22.458Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.176480628s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:31:24.461Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T23:31:27.496Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.076465876s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:31:28.720Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T23:31:30.544Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T23:31:32.706Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.070134147s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:31:34.869Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T23:31:37.945Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.070874115s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:31:39.270Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T23:31:39.325Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T23:31:39.356Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.371Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.386Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.401Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.416Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.431Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.446Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.462Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.477Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.492Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.507Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.522Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.537Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.552Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.568Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.583Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.598Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.613Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.628Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.643Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:40.145Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:1978941     czero:0          \n 2024-07-15T23:31:40.357Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:4478941     czero:0          \n 2024-07-15T23:31:42.703Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.088633171s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:31:43.112Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:6978941     czero:0          \n 2024-07-15T23:31:43.323Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:9478940     czero:0          \n 2024-07-15T23:31:43.535Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:11978940    czero:0          \n 2024-07-15T23:31:43.747Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:14478940    czero:0          \n 2024-07-15T23:31:46.174Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.168677238s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:31:46.529Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > nb inst:      16793604\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > nb addc:      16809984\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > nb add:       50429952\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > nb multc:     50429952\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > nb mult:      16809982\n 2024-07-15T23:31:46.568Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T23:31:46.568Z INFO  dietmc_ram                   > ram-size 16384\n 2024-07-15T23:31:46.569Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T23:31:46.569Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T23:31:46.569Z INFO  dietmc_ram                   > time ram exec: 26.28717386s\n 2024-07-15T23:31:46.569Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T23:31:46.569Z INFO  dietmc_ram                   > bytes recv: 412827304\n 2024-07-15T23:31:46.569Z INFO  dietmc_ram                   > bytes total: 424084552\n 2024-07-15T23:31:46.569Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 8388608 --connection-addr '127.0.0.1:21694' --prover`\n 2024-07-15T23:31:19.340Z INFO  dietmc_ram > prover mode\n 2024-07-15T23:31:19.340Z INFO  dietmc_ram > addr: \"127.0.0.1:21694\"\n 2024-07-15T23:31:19.340Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T23:31:19.340Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T23:31:20.294Z INFO  dietmc_ram > init time: 934.094129ms\n 2024-07-15T23:31:20.294Z INFO  dietmc_ram > run 0/1\n 2024-07-15T23:31:30.531Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T23:31:39.313Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T23:31:39.313Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 16384\n 2024-07-15T23:31:39.359Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.385Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.410Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.436Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.461Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.486Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.512Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.537Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.563Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.588Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.614Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.639Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.664Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.690Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.716Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.742Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.767Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.793Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.819Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.844Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:31:39.962Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:375743      czero:0          \n 2024-07-15T23:31:40.205Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2875743     czero:0          \n 2024-07-15T23:31:40.420Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5375743     czero:0          \n 2024-07-15T23:31:43.166Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7875743     czero:0          \n 2024-07-15T23:31:43.380Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10375742    czero:0          \n 2024-07-15T23:31:43.595Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12875742    czero:0          \n 2024-07-15T23:31:43.810Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15375742    czero:0          \n 2024-07-15T23:31:46.489Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > nb addc:      16809984\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > nb add:       50429952\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > nb multc:     50429952\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > nb mult:      16809982\n 2024-07-15T23:31:46.539Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T23:31:46.539Z INFO  dietmc_ram                       > time ram exec: 26.24538156s\n 2024-07-15T23:31:46.539Z INFO  dietmc_ram                       > ram-size 16384\n 2024-07-15T23:31:46.539Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T23:31:46.539Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T23:31:46.539Z INFO  dietmc_ram                       > bytes sent: 412827304\n 2024-07-15T23:31:46.539Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T23:31:46.539Z INFO  dietmc_ram                       > bytes total: 424084552\n 2024-07-15T23:31:46.539Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.022 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.044 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.043 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.047 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4074ms\nrtt min/avg/max/mdev = 0.022/0.040/0.048/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 33730 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.29 GBytes  28.2 Gbits/sec    0   1.56 MBytes       \n[  5]   1.00-2.00   sec  3.74 GBytes  32.2 Gbits/sec    0   1.56 MBytes       \n[  5]   2.00-3.00   sec  2.83 GBytes  24.4 Gbits/sec    0   1.56 MBytes       \n[  5]   3.00-4.00   sec  4.53 GBytes  38.9 Gbits/sec    0   1.56 MBytes       \n[  5]   4.00-5.00   sec  4.65 GBytes  39.9 Gbits/sec    0   1.56 MBytes       \n[  5]   5.00-6.00   sec  4.27 GBytes  36.7 Gbits/sec    0   1.56 MBytes       \n[  5]   6.00-7.00   sec  3.25 GBytes  27.9 Gbits/sec    0   1.56 MBytes       \n[  5]   7.00-8.00   sec  3.45 GBytes  29.6 Gbits/sec    0   1.56 MBytes       \n[  5]   8.00-9.00   sec  3.14 GBytes  27.0 Gbits/sec    0   1.56 MBytes       \n[  5]   9.00-10.00  sec  3.88 GBytes  33.3 Gbits/sec    0   1.56 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.5 GBytes  32.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.5 GBytes  32.2 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.2 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.085/20.164/20.224/0.051 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 50614 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  77.0 MBytes   645 Mbits/sec    0   9.05 MBytes       \n[  5]   1.00-2.00   sec  82.6 MBytes   693 Mbits/sec    0   9.05 MBytes       \n[  5]   2.00-3.00   sec  82.2 MBytes   690 Mbits/sec    0   9.05 MBytes       \n[  5]   3.00-4.00   sec  85.1 MBytes   714 Mbits/sec    0   9.05 MBytes       \n[  5]   4.00-5.00   sec  82.2 MBytes   690 Mbits/sec    0   9.05 MBytes       \n[  5]   5.00-6.00   sec  82.2 MBytes   690 Mbits/sec    0   9.05 MBytes       \n[  5]   6.00-7.00   sec  82.4 MBytes   691 Mbits/sec    0   9.05 MBytes       \n[  5]   7.00-8.00   sec  85.2 MBytes   715 Mbits/sec    0   9.05 MBytes       \n[  5]   8.00-9.00   sec  85.1 MBytes   714 Mbits/sec    0   9.05 MBytes       \n[  5]   9.00-10.00  sec  85.2 MBytes   715 Mbits/sec    0   9.05 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   830 MBytes   696 Mbits/sec    0             sender\n[  5]   0.00-10.04  sec   830 MBytes   693 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 10, "mbits": 1000}}