{"meta": {"ram": true, "ram_size": 1024, "ram_steps": 4194304}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:49021'`\n 2024-07-14T22:39:40.700Z INFO  dietmc_ram > verifier mode\n 2024-07-14T22:39:40.700Z INFO  dietmc_ram > addr: \"127.0.0.1:49021\"\n 2024-07-14T22:39:40.700Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T22:39:40.700Z INFO  dietmc_ram > time reading ins/wit/rel: 80ns\n 2024-07-14T22:39:40.735Z INFO  dietmc_ram > connection received\n 2024-07-14T22:39:42.289Z INFO  dietmc_ram > init time: 1.553800468s\n 2024-07-14T22:39:42.289Z INFO  dietmc_ram > run 0/1\n 2024-07-14T22:39:44.820Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.531688023s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T22:39:53.833Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-14T22:40:00.536Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.349168884s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T22:40:05.283Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-14T22:40:09.772Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-14T22:40:09.805Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.831Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.855Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.879Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.902Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.926Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.950Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.974Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.998Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:10.021Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:11.554Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:1036061     czero:0          \n 2024-07-14T22:40:16.793Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.37521585s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T22:40:17.544Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:3536061     czero:0          \n 2024-07-14T22:40:20.787Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:6036060     czero:0          \n 2024-07-14T22:40:23.846Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > nb inst:       8389636\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > nb addc:       8390656\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > nb add:       25171968\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > nb multc:     25171968\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > nb mult:       8390654\n 2024-07-14T22:40:23.885Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-14T22:40:23.885Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-14T22:40:23.885Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-14T22:40:23.885Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-14T22:40:23.885Z INFO  dietmc_ram                   > time ram exec: 41.596135843s\n 2024-07-14T22:40:23.885Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-14T22:40:23.885Z INFO  dietmc_ram                   > bytes recv: 208137232\n 2024-07-14T22:40:23.885Z INFO  dietmc_ram                   > bytes total: 214031968\n 2024-07-14T22:40:23.885Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:49021' --prover`\n 2024-07-14T22:39:40.685Z INFO  dietmc_ram > prover mode\n 2024-07-14T22:39:40.685Z INFO  dietmc_ram > addr: \"127.0.0.1:49021\"\n 2024-07-14T22:39:40.685Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T22:39:40.685Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-14T22:39:42.302Z INFO  dietmc_ram > init time: 1.576983607s\n 2024-07-14T22:39:42.302Z INFO  dietmc_ram > run 0/1\n 2024-07-14T22:40:09.508Z INFO  dietmc_ram > finalizing ram\n 2024-07-14T22:40:09.508Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 1024\n 2024-07-14T22:40:09.808Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.848Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.882Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.920Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.955Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:09.989Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:10.023Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:10.058Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:10.092Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:10.126Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-14T22:40:10.214Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:230879      czero:0          \n 2024-07-14T22:40:13.584Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2730879     czero:0          \n 2024-07-14T22:40:19.370Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5230878     czero:0          \n 2024-07-14T22:40:22.724Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7730878     czero:0          \n 2024-07-14T22:40:23.414Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > nb addc:       8390656\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > nb add:       25171968\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > nb multc:     25171968\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > nb mult:       8390654\n 2024-07-14T22:40:23.856Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-14T22:40:23.856Z INFO  dietmc_ram                       > time ram exec: 41.554444223s\n 2024-07-14T22:40:23.856Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-14T22:40:23.856Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-14T22:40:23.856Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-14T22:40:23.856Z INFO  dietmc_ram                       > bytes sent: 208137232\n 2024-07-14T22:40:23.856Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-14T22:40:23.856Z INFO  dietmc_ram                       > bytes total: 214031968\n 2024-07-14T22:40:23.856Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.022 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.032 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.031 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.031 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.033 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4107ms\nrtt min/avg/max/mdev = 0.022/0.029/0.033/0.004 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 50414 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  4.54 GBytes  39.0 Gbits/sec    0   1.31 MBytes       \n[  5]   1.00-2.00   sec  4.29 GBytes  36.9 Gbits/sec    0   1.31 MBytes       \n[  5]   2.00-3.00   sec  4.20 GBytes  36.0 Gbits/sec    0   1.31 MBytes       \n[  5]   3.00-4.00   sec  3.97 GBytes  34.1 Gbits/sec    0   1.31 MBytes       \n[  5]   4.00-5.00   sec  3.98 GBytes  34.2 Gbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec  3.94 GBytes  33.8 Gbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec  4.30 GBytes  36.9 Gbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec  3.76 GBytes  32.3 Gbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec  4.27 GBytes  36.7 Gbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec  4.31 GBytes  37.0 Gbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  44.4 GBytes  38.1 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  44.4 GBytes  38.1 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.1 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.067/20.114/20.140/0.026 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 37182 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  7.25 MBytes  60.8 Mbits/sec    0   1.94 MBytes       \n[  5]   1.00-2.00   sec  5.75 MBytes  48.2 Mbits/sec    0   2.25 MBytes       \n[  5]   2.00-3.00   sec  6.12 MBytes  51.4 Mbits/sec    0   2.56 MBytes       \n[  5]   3.00-4.00   sec  6.38 MBytes  53.5 Mbits/sec    0   2.87 MBytes       \n[  5]   4.00-5.00   sec  5.38 MBytes  45.1 Mbits/sec    0   3.75 MBytes       \n[  5]   5.00-6.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.74 MBytes       \n[  5]   6.00-7.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.74 MBytes       \n[  5]   7.00-8.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.74 MBytes       \n[  5]   8.00-9.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.74 MBytes       \n[  5]   9.00-10.00  sec  4.00 MBytes  33.5 Mbits/sec    0   4.74 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  58.9 MBytes  49.4 Mbits/sec    0             sender\n[  5]   0.00-10.11  sec  58.9 MBytes  48.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 10, "mbits": 50}}