{"meta": {"ram": true, "ram_size": 1024, "ram_steps": 4194304}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:23831'`\n 2024-07-15T22:19:29.019Z INFO  dietmc_ram > verifier mode\n 2024-07-15T22:19:29.019Z INFO  dietmc_ram > addr: \"127.0.0.1:23831\"\n 2024-07-15T22:19:29.019Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T22:19:29.019Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T22:19:29.304Z INFO  dietmc_ram > connection received\n 2024-07-15T22:19:35.410Z INFO  dietmc_ram > init time: 6.105549246s\n 2024-07-15T22:19:35.410Z INFO  dietmc_ram > run 0/1\n 2024-07-15T22:19:38.917Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.506971456s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:19:45.274Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T22:19:51.371Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.115951386s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:19:54.944Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T22:19:57.786Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T22:19:57.801Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.821Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.841Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.861Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.882Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.902Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.922Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.943Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.963Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.983Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:59.225Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:1036061     czero:0          \n 2024-07-15T22:20:04.293Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.156474638s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:20:05.265Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:3536061     czero:0          \n 2024-07-15T22:20:07.468Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:6036060     czero:0          \n 2024-07-15T22:20:09.694Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > nb inst:       8389636\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > nb addc:       8390656\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > nb add:       25171968\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > nb multc:     25171968\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > nb mult:       8390654\n 2024-07-15T22:20:09.932Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T22:20:09.932Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-15T22:20:09.932Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-15T22:20:09.932Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T22:20:09.932Z INFO  dietmc_ram                   > time ram exec: 34.521790215s\n 2024-07-15T22:20:09.932Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-15T22:20:09.932Z INFO  dietmc_ram                   > bytes recv: 208137232\n 2024-07-15T22:20:09.932Z INFO  dietmc_ram                   > bytes total: 214031968\n 2024-07-15T22:20:09.932Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:23831' --prover`\n 2024-07-15T22:19:29.004Z INFO  dietmc_ram > prover mode\n 2024-07-15T22:19:29.004Z INFO  dietmc_ram > addr: \"127.0.0.1:23831\"\n 2024-07-15T22:19:29.004Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T22:19:29.004Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T22:19:35.502Z INFO  dietmc_ram > init time: 6.297816271s\n 2024-07-15T22:19:35.502Z INFO  dietmc_ram > run 0/1\n 2024-07-15T22:19:57.513Z INFO  dietmc_ram > finalizing ram\n 2024-07-15T22:19:57.513Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 1024\n 2024-07-15T22:19:57.895Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.933Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.964Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:57.995Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:58.027Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:58.058Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:58.089Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:58.120Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:58.151Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:58.182Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T22:19:58.263Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:230879      czero:0          \n 2024-07-15T22:20:00.496Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2730879     czero:0          \n 2024-07-15T22:20:06.496Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5230878     czero:0          \n 2024-07-15T22:20:08.650Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7730878     czero:0          \n 2024-07-15T22:20:09.385Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > nb addc:       8390656\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > nb add:       25171968\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > nb multc:     25171968\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > nb mult:       8390654\n 2024-07-15T22:20:09.794Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T22:20:09.794Z INFO  dietmc_ram                       > time ram exec: 34.291701795s\n 2024-07-15T22:20:09.794Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-15T22:20:09.794Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-15T22:20:09.794Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T22:20:09.794Z INFO  dietmc_ram                       > bytes sent: 208137232\n 2024-07-15T22:20:09.794Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-15T22:20:09.794Z INFO  dietmc_ram                       > bytes total: 214031968\n 2024-07-15T22:20:09.794Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.020 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.044 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.045 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4136ms\nrtt min/avg/max/mdev = 0.020/0.038/0.046/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42072 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.06 GBytes  26.2 Gbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  2.91 GBytes  25.0 Gbits/sec    0   1.37 MBytes       \n[  5]   2.00-3.00   sec  3.03 GBytes  26.0 Gbits/sec    0   1.37 MBytes       \n[  5]   3.00-4.00   sec  2.73 GBytes  23.4 Gbits/sec    0   1.37 MBytes       \n[  5]   4.00-5.00   sec  3.95 GBytes  33.9 Gbits/sec    0   1.37 MBytes       \n[  5]   5.00-6.00   sec  3.80 GBytes  32.6 Gbits/sec    0   1.37 MBytes       \n[  5]   6.00-7.00   sec  3.56 GBytes  30.5 Gbits/sec    0   1.37 MBytes       \n[  5]   7.00-8.00   sec  4.08 GBytes  35.1 Gbits/sec    0   1.37 MBytes       \n[  5]   8.00-9.00   sec  3.81 GBytes  32.8 Gbits/sec    0   1.37 MBytes       \n[  5]   9.00-10.00  sec  2.87 GBytes  24.7 Gbits/sec    0   1.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.1 GBytes  30.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.1 GBytes  30.2 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 200.073/200.152/200.204/0.049 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 33234 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.44 MBytes       \n[  5]   1.00-2.00   sec  5.50 MBytes  46.1 Mbits/sec    0   8.99 MBytes       \n[  5]   2.00-3.00   sec  8.50 MBytes  71.3 Mbits/sec    0   8.99 MBytes       \n[  5]   3.00-4.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   4.00-5.00   sec  8.50 MBytes  71.3 Mbits/sec    0   8.99 MBytes       \n[  5]   5.00-6.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   6.00-7.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   7.00-8.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   8.00-9.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   9.00-10.00  sec  5.75 MBytes  48.2 Mbits/sec    0   8.99 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  75.1 MBytes  63.0 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec  75.1 MBytes  61.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 100, "mbits": 100}}