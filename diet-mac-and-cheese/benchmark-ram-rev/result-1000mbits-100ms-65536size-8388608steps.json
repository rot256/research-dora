{"meta": {"ram": true, "ram_size": 65536, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 65536 --ram-steps 8388608 --connection-addr '127.0.0.1:10371'`\n 2024-07-15T01:08:45.708Z INFO  dietmc_ram > verifier mode\n 2024-07-15T01:08:45.708Z INFO  dietmc_ram > addr: \"127.0.0.1:10371\"\n 2024-07-15T01:08:45.708Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T01:08:45.708Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T01:08:45.993Z INFO  dietmc_ram > connection received\n 2024-07-15T01:08:59.617Z INFO  dietmc_ram > init time: 13.623742302s\n 2024-07-15T01:08:59.617Z INFO  dietmc_ram > run 0/1\n 2024-07-15T01:09:03.041Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.423944112s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T01:09:06.980Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T01:09:11.680Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.95461598s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T01:09:14.091Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T01:09:17.338Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T01:09:20.405Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.975258899s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T01:09:24.331Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T01:09:29.032Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.94489311s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T01:09:31.466Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T01:09:31.518Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T01:09:31.903Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:31.928Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:31.950Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:31.973Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:31.995Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.017Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.040Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.062Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.085Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.107Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.129Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.152Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.174Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.196Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.218Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.241Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.263Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.286Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.308Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.330Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:33.482Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:1659453     czero:0          \n 2024-07-15T01:09:34.535Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:4159453     czero:0          \n 2024-07-15T01:09:38.676Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.011980212s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T01:09:39.651Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:6659453     czero:0          \n 2024-07-15T01:09:40.708Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:9159452     czero:0          \n 2024-07-15T01:09:41.760Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:11659452    czero:0          \n 2024-07-15T01:09:42.812Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:14159452    czero:0          \n 2024-07-15T01:09:46.782Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.028961993s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T01:09:47.712Z INFO  diet_mac_and_cheese::backend > inp:16842756    witn:8388608     mul:16659452    czero:0          \n 2024-07-15T01:09:47.928Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > nb inst:      16842756\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > nb addc:      16908288\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > nb add:       50724864\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > nb multc:     50724864\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > nb mult:      16908286\n 2024-07-15T01:09:48.147Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T01:09:48.147Z INFO  dietmc_ram                   > ram-size 65536\n 2024-07-15T01:09:48.147Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T01:09:48.147Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T01:09:48.147Z INFO  dietmc_ram                   > time ram exec: 48.530422385s\n 2024-07-15T01:09:48.147Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T01:09:48.147Z INFO  dietmc_ram                   > bytes recv: 414793384\n 2024-07-15T01:09:48.147Z INFO  dietmc_ram                   > bytes total: 426050632\n 2024-07-15T01:09:48.147Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 65536 --ram-steps 8388608 --connection-addr '127.0.0.1:10371' --prover`\n 2024-07-15T01:08:45.693Z INFO  dietmc_ram > prover mode\n 2024-07-15T01:08:45.693Z INFO  dietmc_ram > addr: \"127.0.0.1:10371\"\n 2024-07-15T01:08:45.693Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T01:08:45.693Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T01:08:59.721Z INFO  dietmc_ram > init time: 13.827972542s\n 2024-07-15T01:08:59.721Z INFO  dietmc_ram > run 0/1\n 2024-07-15T01:09:17.236Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T01:09:31.414Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T01:09:31.414Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 65536\n 2024-07-15T01:09:31.986Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.024Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.056Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.089Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.122Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.155Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.188Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.221Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.254Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.287Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.319Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.352Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.385Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.418Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.451Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.484Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.518Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.551Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.584Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.617Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T01:09:32.738Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:80831       czero:0          \n 2024-07-15T01:09:33.792Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2580831     czero:0          \n 2024-07-15T01:09:34.841Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5080831     czero:0          \n 2024-07-15T01:09:39.960Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7580831     czero:0          \n 2024-07-15T01:09:41.013Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10080830    czero:0          \n 2024-07-15T01:09:42.066Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12580830    czero:0          \n 2024-07-15T01:09:43.121Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15080830    czero:0          \n 2024-07-15T01:09:47.639Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > nb addc:      16908288\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > nb add:       50724864\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > nb multc:     50724864\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > nb mult:      16908286\n 2024-07-15T01:09:48.028Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T01:09:48.028Z INFO  dietmc_ram                       > time ram exec: 48.307360876s\n 2024-07-15T01:09:48.028Z INFO  dietmc_ram                       > ram-size 65536\n 2024-07-15T01:09:48.028Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T01:09:48.028Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T01:09:48.028Z INFO  dietmc_ram                       > bytes sent: 414793384\n 2024-07-15T01:09:48.028Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T01:09:48.028Z INFO  dietmc_ram                       > bytes total: 426050632\n 2024-07-15T01:09:48.028Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.021 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.034 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.034 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.042 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.036 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4099ms\nrtt min/avg/max/mdev = 0.021/0.033/0.042/0.006 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42886 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  4.16 GBytes  35.7 Gbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  4.19 GBytes  36.0 Gbits/sec    0   1.37 MBytes       \n[  5]   2.00-3.00   sec  4.14 GBytes  35.6 Gbits/sec    0   1.37 MBytes       \n[  5]   3.00-4.00   sec  4.10 GBytes  35.2 Gbits/sec    0   1.37 MBytes       \n[  5]   4.00-5.00   sec  4.20 GBytes  36.1 Gbits/sec    0   1.37 MBytes       \n[  5]   5.00-6.00   sec  4.03 GBytes  34.6 Gbits/sec    0   1.44 MBytes       \n[  5]   6.00-7.00   sec  4.22 GBytes  36.2 Gbits/sec    0   1.44 MBytes       \n[  5]   7.00-8.00   sec  4.22 GBytes  36.2 Gbits/sec    0   1.44 MBytes       \n[  5]   8.00-9.00   sec  3.47 GBytes  29.8 Gbits/sec    0   1.44 MBytes       \n[  5]   9.00-10.00  sec  4.29 GBytes  36.8 Gbits/sec    0   1.44 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  42.2 GBytes  36.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  42.2 GBytes  36.3 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4000ms\nrtt min/avg/max/mdev = 200.141/200.160/200.177/0.012 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 44420 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  2.38 MBytes  19.9 Mbits/sec    0    703 KBytes       \n[  5]   1.00-2.00   sec  5.38 MBytes  45.1 Mbits/sec    0   12.2 MBytes       \n[  5]   2.00-3.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   3.00-4.00   sec  14.0 MBytes   117 Mbits/sec    0   12.4 MBytes       \n[  5]   4.00-5.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   5.00-6.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   6.00-7.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   7.00-8.00   sec  14.0 MBytes   117 Mbits/sec    0   12.4 MBytes       \n[  5]   8.00-9.00   sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n[  5]   9.00-10.00  sec  13.9 MBytes   116 Mbits/sec    0   12.4 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   119 MBytes  99.8 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec   119 MBytes  97.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 100, "mbits": 1000}}