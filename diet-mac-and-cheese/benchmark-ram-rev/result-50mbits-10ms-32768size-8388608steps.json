{"meta": {"ram": true, "ram_size": 32768, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 8388608 --connection-addr '127.0.0.1:16089'`\n 2024-07-14T23:10:01.228Z INFO  dietmc_ram > verifier mode\n 2024-07-14T23:10:01.228Z INFO  dietmc_ram > addr: \"127.0.0.1:16089\"\n 2024-07-14T23:10:01.228Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T23:10:01.228Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-14T23:10:01.273Z INFO  dietmc_ram > connection received\n 2024-07-14T23:10:02.834Z INFO  dietmc_ram > init time: 1.561043796s\n 2024-07-14T23:10:02.834Z INFO  dietmc_ram > run 0/1\n 2024-07-14T23:10:05.355Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.521294701s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:10:14.381Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-14T23:10:21.201Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.36354985s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:10:25.922Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-14T23:10:34.627Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-14T23:10:36.996Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.350067713s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:10:46.024Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-14T23:10:52.790Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.370385086s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:10:57.457Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-14T23:10:57.740Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-14T23:10:57.923Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:57.948Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:57.972Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:57.995Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.019Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.042Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.066Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.089Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.112Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.136Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.159Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.182Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.206Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.229Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.252Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.276Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.299Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.322Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.346Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.369Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-14T23:11:01.141Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:1872445     czero:0          \n 2024-07-14T23:11:04.396Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:4372445     czero:0          \n 2024-07-14T23:11:09.394Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.394708625s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:11:10.394Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:6872445     czero:0          \n 2024-07-14T23:11:13.641Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:9372444     czero:0          \n 2024-07-14T23:11:16.884Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:11872444    czero:0          \n 2024-07-14T23:11:20.138Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:14372444    czero:0          \n 2024-07-14T23:11:25.109Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.356027223s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-14T23:11:26.105Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > nb inst:      16809988\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > nb addc:      16842752\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > nb add:       50528256\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > nb multc:     50528256\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > nb mult:      16842750\n 2024-07-14T23:11:26.154Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-14T23:11:26.154Z INFO  dietmc_ram                   > ram-size 32768\n 2024-07-14T23:11:26.154Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-14T23:11:26.154Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-14T23:11:26.154Z INFO  dietmc_ram                   > time ram exec: 83.320490134s\n 2024-07-14T23:11:26.154Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-14T23:11:26.154Z INFO  dietmc_ram                   > bytes recv: 413482664\n 2024-07-14T23:11:26.154Z INFO  dietmc_ram                   > bytes total: 424739912\n 2024-07-14T23:11:26.154Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 8388608 --connection-addr '127.0.0.1:16089' --prover`\n 2024-07-14T23:10:01.243Z INFO  dietmc_ram > prover mode\n 2024-07-14T23:10:01.243Z INFO  dietmc_ram > addr: \"127.0.0.1:16089\"\n 2024-07-14T23:10:01.243Z INFO  dietmc_ram > lpn: Medium\n 2024-07-14T23:10:01.243Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-14T23:10:02.845Z INFO  dietmc_ram > init time: 1.582047044s\n 2024-07-14T23:10:02.845Z INFO  dietmc_ram > run 0/1\n 2024-07-14T23:10:34.111Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-14T23:10:57.269Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-14T23:10:57.269Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 32768\n 2024-07-14T23:10:57.921Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:57.970Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.004Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.037Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.071Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.105Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.138Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.172Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.206Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.240Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.273Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.307Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.340Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.374Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.409Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.443Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.477Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.512Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.546Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.579Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-14T23:10:58.707Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:277439      czero:0          \n 2024-07-14T23:11:02.087Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2777439     czero:0          \n 2024-07-14T23:11:05.442Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5277439     czero:0          \n 2024-07-14T23:11:10.940Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7777439     czero:0          \n 2024-07-14T23:11:14.298Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10277438    czero:0          \n 2024-07-14T23:11:17.650Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12777438    czero:0          \n 2024-07-14T23:11:21.004Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15277438    czero:0          \n 2024-07-14T23:11:25.495Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > nb addc:      16842752\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > nb add:       50528256\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > nb multc:     50528256\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > nb mult:      16842750\n 2024-07-14T23:11:26.116Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-14T23:11:26.116Z INFO  dietmc_ram                       > time ram exec: 83.270723987s\n 2024-07-14T23:11:26.116Z INFO  dietmc_ram                       > ram-size 32768\n 2024-07-14T23:11:26.116Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-14T23:11:26.116Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-14T23:11:26.116Z INFO  dietmc_ram                       > bytes sent: 413482664\n 2024-07-14T23:11:26.116Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-14T23:11:26.116Z INFO  dietmc_ram                       > bytes total: 424739912\n 2024-07-14T23:11:26.116Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.022 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.029 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.031 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.032 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.029 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4085ms\nrtt min/avg/max/mdev = 0.022/0.028/0.032/0.003 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 47358 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.12 GBytes  26.7 Gbits/sec    0   1.25 MBytes       \n[  5]   1.00-2.00   sec  3.60 GBytes  30.9 Gbits/sec    0   1.25 MBytes       \n[  5]   2.00-3.00   sec  3.97 GBytes  34.1 Gbits/sec    0   1.25 MBytes       \n[  5]   3.00-4.00   sec  4.14 GBytes  35.6 Gbits/sec    0   1.25 MBytes       \n[  5]   4.00-5.00   sec  3.93 GBytes  33.7 Gbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec  3.99 GBytes  34.3 Gbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec  4.13 GBytes  35.5 Gbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec  4.08 GBytes  35.0 Gbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec  4.03 GBytes  34.6 Gbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec  4.14 GBytes  35.6 Gbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  39.8 GBytes  34.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  39.8 GBytes  34.2 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.1 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.053/20.109/20.126/0.028 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 54444 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  7.25 MBytes  60.8 Mbits/sec    0   1.94 MBytes       \n[  5]   1.00-2.00   sec  5.75 MBytes  48.2 Mbits/sec    0   2.25 MBytes       \n[  5]   2.00-3.00   sec  6.12 MBytes  51.4 Mbits/sec    0   2.56 MBytes       \n[  5]   3.00-4.00   sec  6.38 MBytes  53.5 Mbits/sec    0   2.87 MBytes       \n[  5]   4.00-5.00   sec  5.38 MBytes  45.1 Mbits/sec    0   3.75 MBytes       \n[  5]   5.00-6.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.81 MBytes       \n[  5]   6.00-7.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.81 MBytes       \n[  5]   7.00-8.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.81 MBytes       \n[  5]   8.00-9.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.81 MBytes       \n[  5]   9.00-10.00  sec  4.00 MBytes  33.5 Mbits/sec    0   4.81 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  58.9 MBytes  49.4 Mbits/sec    0             sender\n[  5]   0.00-10.12  sec  58.9 MBytes  48.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 10, "mbits": 50}}