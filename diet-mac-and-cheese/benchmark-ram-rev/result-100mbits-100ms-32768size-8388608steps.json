{"meta": {"ram": true, "ram_size": 32768, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 8388608 --connection-addr '127.0.0.1:19416'`\n 2024-07-15T22:41:28.265Z INFO  dietmc_ram > verifier mode\n 2024-07-15T22:41:28.265Z INFO  dietmc_ram > addr: \"127.0.0.1:19416\"\n 2024-07-15T22:41:28.265Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T22:41:28.265Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T22:41:28.550Z INFO  dietmc_ram > connection received\n 2024-07-15T22:41:34.659Z INFO  dietmc_ram > init time: 6.109066199s\n 2024-07-15T22:41:34.659Z INFO  dietmc_ram > run 0/1\n 2024-07-15T22:41:38.178Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.5188995s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:41:44.535Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T22:41:50.601Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.100304129s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:41:54.186Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T22:41:59.819Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T22:42:03.032Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.097507768s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:42:09.355Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T22:42:15.458Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.106614688s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:42:19.032Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T22:42:19.174Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T22:42:19.266Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.287Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.307Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.327Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.347Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.368Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.388Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.408Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.428Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.449Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.469Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.489Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.509Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.529Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.550Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.570Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.590Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.610Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.630Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.651Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:21.798Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:1872445     czero:0          \n 2024-07-15T22:42:24.005Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:4372445     czero:0          \n 2024-07-15T22:42:28.931Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.122882506s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:42:30.037Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:6872445     czero:0          \n 2024-07-15T22:42:32.341Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:9372444     czero:0          \n 2024-07-15T22:42:34.545Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:11872444    czero:0          \n 2024-07-15T22:42:36.749Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:14372444    czero:0          \n 2024-07-15T22:42:41.644Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.107562164s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:42:42.775Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > nb inst:      16809988\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > nb addc:      16842752\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > nb add:       50528256\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > nb multc:     50528256\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > nb mult:      16842750\n 2024-07-15T22:42:42.998Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T22:42:42.998Z INFO  dietmc_ram                   > ram-size 32768\n 2024-07-15T22:42:42.998Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T22:42:42.998Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T22:42:42.998Z INFO  dietmc_ram                   > time ram exec: 68.338716709s\n 2024-07-15T22:42:42.998Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T22:42:42.998Z INFO  dietmc_ram                   > bytes recv: 413482664\n 2024-07-15T22:42:42.998Z INFO  dietmc_ram                   > bytes total: 424739912\n 2024-07-15T22:42:42.998Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 8388608 --connection-addr '127.0.0.1:19416' --prover`\n 2024-07-15T22:41:28.250Z INFO  dietmc_ram > prover mode\n 2024-07-15T22:41:28.250Z INFO  dietmc_ram > addr: \"127.0.0.1:19416\"\n 2024-07-15T22:41:28.250Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T22:41:28.250Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T22:41:34.763Z INFO  dietmc_ram > init time: 6.313045941s\n 2024-07-15T22:41:34.763Z INFO  dietmc_ram > run 0/1\n 2024-07-15T22:41:59.714Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T22:42:18.964Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T22:42:18.964Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 32768\n 2024-07-15T22:42:19.356Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.403Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.434Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.464Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.494Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.525Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.555Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.586Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.616Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.646Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.679Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.710Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.742Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.772Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.804Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.834Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.865Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.896Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.927Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:19.958Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:42:20.091Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:277439      czero:0          \n 2024-07-15T22:42:22.370Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2777439     czero:0          \n 2024-07-15T22:42:24.523Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5277439     czero:0          \n 2024-07-15T22:42:30.791Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7777439     czero:0          \n 2024-07-15T22:42:32.924Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10277438    czero:0          \n 2024-07-15T22:42:35.077Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12777438    czero:0          \n 2024-07-15T22:42:37.228Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15277438    czero:0          \n 2024-07-15T22:42:42.136Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > nb addc:      16842752\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > nb add:       50528256\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > nb multc:     50528256\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > nb mult:      16842750\n 2024-07-15T22:42:42.875Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T22:42:42.875Z INFO  dietmc_ram                       > time ram exec: 68.112082523s\n 2024-07-15T22:42:42.875Z INFO  dietmc_ram                       > ram-size 32768\n 2024-07-15T22:42:42.875Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T22:42:42.875Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T22:42:42.875Z INFO  dietmc_ram                       > bytes sent: 413482664\n 2024-07-15T22:42:42.875Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T22:42:42.875Z INFO  dietmc_ram                       > bytes total: 424739912\n 2024-07-15T22:42:42.875Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.020 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.044 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.045 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4136ms\nrtt min/avg/max/mdev = 0.020/0.038/0.046/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42072 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.06 GBytes  26.2 Gbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  2.91 GBytes  25.0 Gbits/sec    0   1.37 MBytes       \n[  5]   2.00-3.00   sec  3.03 GBytes  26.0 Gbits/sec    0   1.37 MBytes       \n[  5]   3.00-4.00   sec  2.73 GBytes  23.4 Gbits/sec    0   1.37 MBytes       \n[  5]   4.00-5.00   sec  3.95 GBytes  33.9 Gbits/sec    0   1.37 MBytes       \n[  5]   5.00-6.00   sec  3.80 GBytes  32.6 Gbits/sec    0   1.37 MBytes       \n[  5]   6.00-7.00   sec  3.56 GBytes  30.5 Gbits/sec    0   1.37 MBytes       \n[  5]   7.00-8.00   sec  4.08 GBytes  35.1 Gbits/sec    0   1.37 MBytes       \n[  5]   8.00-9.00   sec  3.81 GBytes  32.8 Gbits/sec    0   1.37 MBytes       \n[  5]   9.00-10.00  sec  2.87 GBytes  24.7 Gbits/sec    0   1.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.1 GBytes  30.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.1 GBytes  30.2 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 200.073/200.152/200.204/0.049 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 33234 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.44 MBytes       \n[  5]   1.00-2.00   sec  5.50 MBytes  46.1 Mbits/sec    0   8.99 MBytes       \n[  5]   2.00-3.00   sec  8.50 MBytes  71.3 Mbits/sec    0   8.99 MBytes       \n[  5]   3.00-4.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   4.00-5.00   sec  8.50 MBytes  71.3 Mbits/sec    0   8.99 MBytes       \n[  5]   5.00-6.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   6.00-7.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   7.00-8.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   8.00-9.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   9.00-10.00  sec  5.75 MBytes  48.2 Mbits/sec    0   8.99 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  75.1 MBytes  63.0 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec  75.1 MBytes  61.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 100, "mbits": 100}}