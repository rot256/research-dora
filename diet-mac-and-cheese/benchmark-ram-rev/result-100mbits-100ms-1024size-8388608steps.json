{"meta": {"ram": true, "ram_size": 1024, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:25176'`\n 2024-07-15T22:20:10.238Z INFO  dietmc_ram > verifier mode\n 2024-07-15T22:20:10.238Z INFO  dietmc_ram > addr: \"127.0.0.1:25176\"\n 2024-07-15T22:20:10.238Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T22:20:10.238Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T22:20:10.524Z INFO  dietmc_ram > connection received\n 2024-07-15T22:20:16.646Z INFO  dietmc_ram > init time: 6.121314582s\n 2024-07-15T22:20:16.646Z INFO  dietmc_ram > run 0/1\n 2024-07-15T22:20:20.157Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.511012168s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:20:26.516Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T22:20:32.607Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.112488089s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:20:36.179Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T22:20:41.816Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T22:20:45.053Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.121354841s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:20:51.398Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T22:20:57.496Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.105884947s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:21:01.032Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T22:21:01.173Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T22:21:01.258Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.279Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.297Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.316Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.334Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.353Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.371Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.390Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.408Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.427Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.446Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.464Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.483Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.501Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.519Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.537Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.556Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.574Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.592Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.610Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:03.863Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:2078781     czero:0          \n 2024-07-15T22:21:06.172Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:4578781     czero:0          \n 2024-07-15T22:21:10.888Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.108528333s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:21:11.959Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:7078781     czero:0          \n 2024-07-15T22:21:14.171Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:9578780     czero:0          \n 2024-07-15T22:21:16.375Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:12078780    czero:0          \n 2024-07-15T22:21:18.579Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:14578780    czero:0          \n 2024-07-15T22:21:23.444Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.149458257s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T22:21:24.408Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T22:21:24.629Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T22:21:24.629Z INFO  diet_mac_and_cheese::backend > nb inst:      16778244\n 2024-07-15T22:21:24.629Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T22:21:24.629Z INFO  diet_mac_and_cheese::backend > nb addc:      16779264\n 2024-07-15T22:21:24.629Z INFO  diet_mac_and_cheese::backend > nb add:       50337792\n 2024-07-15T22:21:24.630Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T22:21:24.630Z INFO  diet_mac_and_cheese::backend > nb multc:     50337792\n 2024-07-15T22:21:24.630Z INFO  diet_mac_and_cheese::backend > nb mult:      16779262\n 2024-07-15T22:21:24.630Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T22:21:24.630Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-15T22:21:24.630Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T22:21:24.630Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T22:21:24.630Z INFO  dietmc_ram                   > time ram exec: 67.983862945s\n 2024-07-15T22:21:24.630Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T22:21:24.630Z INFO  dietmc_ram                   > bytes recv: 412212904\n 2024-07-15T22:21:24.630Z INFO  dietmc_ram                   > bytes total: 423470152\n 2024-07-15T22:21:24.630Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.17s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:25176' --prover`\n 2024-07-15T22:20:10.224Z INFO  dietmc_ram > prover mode\n 2024-07-15T22:20:10.224Z INFO  dietmc_ram > addr: \"127.0.0.1:25176\"\n 2024-07-15T22:20:10.224Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T22:20:10.224Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T22:20:16.748Z INFO  dietmc_ram > init time: 6.323465067s\n 2024-07-15T22:20:16.748Z INFO  dietmc_ram > run 0/1\n 2024-07-15T22:20:41.712Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T22:21:00.963Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T22:21:00.963Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 1024\n 2024-07-15T22:21:01.341Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.374Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.403Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.432Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.460Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.489Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.517Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.545Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.574Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.602Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.631Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.661Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.689Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.718Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.747Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.785Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.821Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.850Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.879Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:01.907Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T22:21:02.034Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:467903      czero:0          \n 2024-07-15T22:21:04.641Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2967903     czero:0          \n 2024-07-15T22:21:06.769Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5467903     czero:0          \n 2024-07-15T22:21:12.485Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7967903     czero:0          \n 2024-07-15T22:21:14.649Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10467902    czero:0          \n 2024-07-15T22:21:16.829Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12967902    czero:0          \n 2024-07-15T22:21:19.348Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15467902    czero:0          \n 2024-07-15T22:21:23.867Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > nb addc:      16779264\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > nb add:       50337792\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > nb multc:     50337792\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > nb mult:      16779262\n 2024-07-15T22:21:24.509Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T22:21:24.509Z INFO  dietmc_ram                       > time ram exec: 67.761087595s\n 2024-07-15T22:21:24.509Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-15T22:21:24.509Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T22:21:24.509Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T22:21:24.509Z INFO  dietmc_ram                       > bytes sent: 412212904\n 2024-07-15T22:21:24.509Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T22:21:24.509Z INFO  dietmc_ram                       > bytes total: 423470152\n 2024-07-15T22:21:24.509Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.020 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.044 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.045 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4136ms\nrtt min/avg/max/mdev = 0.020/0.038/0.046/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42072 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.06 GBytes  26.2 Gbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  2.91 GBytes  25.0 Gbits/sec    0   1.37 MBytes       \n[  5]   2.00-3.00   sec  3.03 GBytes  26.0 Gbits/sec    0   1.37 MBytes       \n[  5]   3.00-4.00   sec  2.73 GBytes  23.4 Gbits/sec    0   1.37 MBytes       \n[  5]   4.00-5.00   sec  3.95 GBytes  33.9 Gbits/sec    0   1.37 MBytes       \n[  5]   5.00-6.00   sec  3.80 GBytes  32.6 Gbits/sec    0   1.37 MBytes       \n[  5]   6.00-7.00   sec  3.56 GBytes  30.5 Gbits/sec    0   1.37 MBytes       \n[  5]   7.00-8.00   sec  4.08 GBytes  35.1 Gbits/sec    0   1.37 MBytes       \n[  5]   8.00-9.00   sec  3.81 GBytes  32.8 Gbits/sec    0   1.37 MBytes       \n[  5]   9.00-10.00  sec  2.87 GBytes  24.7 Gbits/sec    0   1.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.1 GBytes  30.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.1 GBytes  30.2 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 200.073/200.152/200.204/0.049 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 33234 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.44 MBytes       \n[  5]   1.00-2.00   sec  5.50 MBytes  46.1 Mbits/sec    0   8.99 MBytes       \n[  5]   2.00-3.00   sec  8.50 MBytes  71.3 Mbits/sec    0   8.99 MBytes       \n[  5]   3.00-4.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   4.00-5.00   sec  8.50 MBytes  71.3 Mbits/sec    0   8.99 MBytes       \n[  5]   5.00-6.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   6.00-7.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   7.00-8.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   8.00-9.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   9.00-10.00  sec  5.75 MBytes  48.2 Mbits/sec    0   8.99 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  75.1 MBytes  63.0 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec  75.1 MBytes  61.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 100, "mbits": 100}}