{"meta": {"ram": true, "ram_size": 4096, "ram_steps": 4194304}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 4194304 --connection-addr '127.0.0.1:30130'`\n 2024-07-15T11:19:43.684Z INFO  dietmc_ram > verifier mode\n 2024-07-15T11:19:43.684Z INFO  dietmc_ram > addr: \"127.0.0.1:30130\"\n 2024-07-15T11:19:43.684Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T11:19:43.684Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T11:19:43.721Z INFO  dietmc_ram > connection received\n 2024-07-15T11:19:45.143Z INFO  dietmc_ram > init time: 1.422288525s\n 2024-07-15T11:19:45.143Z INFO  dietmc_ram > run 0/1\n 2024-07-15T11:19:47.296Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.152549405s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T11:19:56.387Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T11:20:02.797Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.022152262s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T11:20:07.494Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T11:20:11.992Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T11:20:12.043Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.081Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.105Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.124Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.143Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.162Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.181Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.200Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.219Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.239Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:13.704Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:1016093     czero:0          \n 2024-07-15T11:20:18.583Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.993345464s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T11:20:19.350Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:3516093     czero:0          \n 2024-07-15T11:20:22.621Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:6016092     czero:0          \n 2024-07-15T11:20:25.807Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > nb inst:       8392708\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > nb addc:       8396800\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > nb add:       25190400\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > nb multc:     25190400\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > nb mult:       8396798\n 2024-07-15T11:20:25.854Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T11:20:25.854Z INFO  dietmc_ram                   > ram-size 4096\n 2024-07-15T11:20:25.854Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-15T11:20:25.854Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T11:20:25.854Z INFO  dietmc_ram                   > time ram exec: 40.711011806s\n 2024-07-15T11:20:25.854Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-15T11:20:25.854Z INFO  dietmc_ram                   > bytes recv: 208260112\n 2024-07-15T11:20:25.854Z INFO  dietmc_ram                   > bytes total: 214154848\n 2024-07-15T11:20:25.854Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 4194304 --connection-addr '127.0.0.1:30130' --prover`\n 2024-07-15T11:19:43.671Z INFO  dietmc_ram > prover mode\n 2024-07-15T11:19:43.671Z INFO  dietmc_ram > addr: \"127.0.0.1:30130\"\n 2024-07-15T11:19:43.671Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T11:19:43.671Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T11:19:45.156Z INFO  dietmc_ram > init time: 1.445631423s\n 2024-07-15T11:19:45.156Z INFO  dietmc_ram > run 0/1\n 2024-07-15T11:20:11.769Z INFO  dietmc_ram > finalizing ram\n 2024-07-15T11:20:11.769Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 4096\n 2024-07-15T11:20:12.042Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.093Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.122Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.150Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.179Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.207Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.236Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.265Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.293Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.322Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-15T11:20:12.393Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:212447      czero:0          \n 2024-07-15T11:20:15.767Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2712447     czero:0          \n 2024-07-15T11:20:21.028Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5212446     czero:0          \n 2024-07-15T11:20:24.384Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7712446     czero:0          \n 2024-07-15T11:20:25.727Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > nb addc:       8396800\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > nb add:       25190400\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > nb multc:     25190400\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > nb mult:       8396798\n 2024-07-15T11:20:25.817Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T11:20:25.817Z INFO  dietmc_ram                       > time ram exec: 40.660836244s\n 2024-07-15T11:20:25.817Z INFO  dietmc_ram                       > ram-size 4096\n 2024-07-15T11:20:25.817Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-15T11:20:25.817Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T11:20:25.817Z INFO  dietmc_ram                       > bytes sent: 208260112\n 2024-07-15T11:20:25.817Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-15T11:20:25.817Z INFO  dietmc_ram                       > bytes total: 214154848\n 2024-07-15T11:20:25.817Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.152 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.045 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.047 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4106ms\nrtt min/avg/max/mdev = 0.045/0.068/0.152/0.042 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 35966 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.60 GBytes  30.9 Gbits/sec    0    959 KBytes       \n[  5]   1.00-2.00   sec  3.68 GBytes  31.6 Gbits/sec    0    959 KBytes       \n[  5]   2.00-3.00   sec  3.57 GBytes  30.6 Gbits/sec    0   1.87 MBytes       \n[  5]   3.00-4.00   sec  1.40 GBytes  12.1 Gbits/sec    0   1.87 MBytes       \n[  5]   4.00-5.00   sec  1.40 GBytes  12.0 Gbits/sec    0   1.87 MBytes       \n[  5]   5.00-6.00   sec   709 MBytes  5.95 Gbits/sec    0   1.87 MBytes       \n[  5]   6.00-7.00   sec  2.68 GBytes  23.0 Gbits/sec    0   1.87 MBytes       \n[  5]   7.00-8.00   sec  1.28 GBytes  11.0 Gbits/sec    0   2.06 MBytes       \n[  5]   8.00-9.00   sec  1.78 GBytes  15.3 Gbits/sec    0   2.06 MBytes       \n[  5]   9.00-10.00  sec  2.62 GBytes  22.5 Gbits/sec    0   2.12 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  25.8 GBytes  22.1 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  25.8 GBytes  22.1 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.1 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4010ms\nrtt min/avg/max/mdev = 20.091/20.157/20.214/0.046 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 60124 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  7.12 MBytes  59.7 Mbits/sec    0   1.94 MBytes       \n[  5]   1.00-2.00   sec  5.88 MBytes  49.3 Mbits/sec    0   2.25 MBytes       \n[  5]   2.00-3.00   sec  6.12 MBytes  51.4 Mbits/sec    0   2.56 MBytes       \n[  5]   3.00-4.00   sec  6.25 MBytes  52.4 Mbits/sec    0   2.87 MBytes       \n[  5]   4.00-5.00   sec  5.38 MBytes  45.1 Mbits/sec    0   3.68 MBytes       \n[  5]   5.00-6.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.74 MBytes       \n[  5]   6.00-7.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.74 MBytes       \n[  5]   7.00-8.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.74 MBytes       \n[  5]   8.00-9.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.74 MBytes       \n[  5]   9.00-10.00  sec  4.00 MBytes  33.5 Mbits/sec    0   4.74 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  58.8 MBytes  49.3 Mbits/sec    0             sender\n[  5]   0.00-10.11  sec  58.8 MBytes  48.8 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 10, "mbits": 50}}