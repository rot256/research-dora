{"meta": {"ram": true, "ram_size": 8192, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 8192 --ram-steps 8388608 --connection-addr '127.0.0.1:24958'`\n 2024-07-15T23:53:00.256Z INFO  dietmc_ram > verifier mode\n 2024-07-15T23:53:00.256Z INFO  dietmc_ram > addr: \"127.0.0.1:24958\"\n 2024-07-15T23:53:00.256Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T23:53:00.256Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T23:53:00.541Z INFO  dietmc_ram > connection received\n 2024-07-15T23:53:06.742Z INFO  dietmc_ram > init time: 6.20068874s\n 2024-07-15T23:53:06.742Z INFO  dietmc_ram > run 0/1\n 2024-07-15T23:53:10.252Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.509357622s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:53:14.105Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T23:53:18.836Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.004170314s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:53:21.202Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T23:53:24.446Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T23:53:27.542Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.003796767s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:53:31.426Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T23:53:36.190Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.000092117s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:53:38.561Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T23:53:38.614Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T23:53:38.750Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.777Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.804Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.831Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.858Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.884Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.911Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.938Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.965Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.992Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.018Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.045Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.072Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.099Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.125Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.152Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.179Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.206Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.233Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.259Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:40.610Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:2032189     czero:0          \n 2024-07-15T23:53:41.662Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:4532189     czero:0          \n 2024-07-15T23:53:45.604Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.177640177s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:53:46.739Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:7032189     czero:0          \n 2024-07-15T23:53:47.620Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:9532188     czero:0          \n 2024-07-15T23:53:48.669Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:12032188    czero:0          \n 2024-07-15T23:53:49.718Z INFO  diet_mac_and_cheese::backend > inp:16785412    witn:8388608     mul:14532188    czero:0          \n 2024-07-15T23:53:53.699Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.028103559s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T23:53:54.605Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > nb inst:      16785412\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > nb addc:      16793600\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > nb add:       50380800\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > nb multc:     50380800\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > nb mult:      16793598\n 2024-07-15T23:53:54.835Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T23:53:54.835Z INFO  dietmc_ram                   > ram-size 8192\n 2024-07-15T23:53:54.835Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T23:53:54.835Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T23:53:54.835Z INFO  dietmc_ram                   > time ram exec: 48.092759065s\n 2024-07-15T23:53:54.835Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T23:53:54.835Z INFO  dietmc_ram                   > bytes recv: 412499624\n 2024-07-15T23:53:54.835Z INFO  dietmc_ram                   > bytes total: 423756872\n 2024-07-15T23:53:54.835Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 8192 --ram-steps 8388608 --connection-addr '127.0.0.1:24958' --prover`\n 2024-07-15T23:53:00.240Z INFO  dietmc_ram > prover mode\n 2024-07-15T23:53:00.240Z INFO  dietmc_ram > addr: \"127.0.0.1:24958\"\n 2024-07-15T23:53:00.240Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T23:53:00.240Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-15T23:53:06.844Z INFO  dietmc_ram > init time: 6.402382337s\n 2024-07-15T23:53:06.844Z INFO  dietmc_ram > run 0/1\n 2024-07-15T23:53:24.343Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T23:53:38.512Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T23:53:38.512Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 8192\n 2024-07-15T23:53:38.839Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.880Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.916Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.953Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:38.989Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.026Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.062Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.099Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.136Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.172Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.209Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.245Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.282Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.319Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.356Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.393Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.430Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.467Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.504Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.541Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T23:53:39.673Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:424895      czero:0          \n 2024-07-15T23:53:40.920Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2924895     czero:0          \n 2024-07-15T23:53:41.795Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5424895     czero:0          \n 2024-07-15T23:53:46.872Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7924895     czero:0          \n 2024-07-15T23:53:47.924Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10424894    czero:0          \n 2024-07-15T23:53:48.976Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12924894    czero:0          \n 2024-07-15T23:53:50.028Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15424894    czero:0          \n 2024-07-15T23:53:54.113Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T23:53:54.705Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T23:53:54.705Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T23:53:54.706Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T23:53:54.706Z INFO  diet_mac_and_cheese::backend     > nb addc:      16793600\n 2024-07-15T23:53:54.706Z INFO  diet_mac_and_cheese::backend     > nb add:       50380800\n 2024-07-15T23:53:54.706Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T23:53:54.706Z INFO  diet_mac_and_cheese::backend     > nb multc:     50380800\n 2024-07-15T23:53:54.706Z INFO  diet_mac_and_cheese::backend     > nb mult:      16793598\n 2024-07-15T23:53:54.706Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T23:53:54.706Z INFO  dietmc_ram                       > time ram exec: 47.861904179s\n 2024-07-15T23:53:54.706Z INFO  dietmc_ram                       > ram-size 8192\n 2024-07-15T23:53:54.706Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T23:53:54.706Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T23:53:54.706Z INFO  dietmc_ram                       > bytes sent: 412499624\n 2024-07-15T23:53:54.706Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T23:53:54.706Z INFO  dietmc_ram                       > bytes total: 423756872\n 2024-07-15T23:53:54.706Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.026 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.032 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.036 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.051 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.037 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4075ms\nrtt min/avg/max/mdev = 0.026/0.036/0.051/0.008 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 53500 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.91 GBytes  33.5 Gbits/sec    0   1.31 MBytes       \n[  5]   1.00-2.00   sec  4.08 GBytes  35.0 Gbits/sec    0   1.31 MBytes       \n[  5]   2.00-3.00   sec  3.97 GBytes  34.1 Gbits/sec    0   1.31 MBytes       \n[  5]   3.00-4.00   sec  3.98 GBytes  34.2 Gbits/sec    0   1.31 MBytes       \n[  5]   4.00-5.00   sec  4.04 GBytes  34.7 Gbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec  3.99 GBytes  34.3 Gbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec  4.16 GBytes  35.7 Gbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec  4.00 GBytes  34.4 Gbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec  3.97 GBytes  34.1 Gbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec  4.04 GBytes  34.7 Gbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  40.6 GBytes  34.9 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  40.6 GBytes  34.9 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4004ms\nrtt min/avg/max/mdev = 200.068/200.124/200.186/0.038 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 37530 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   2.75 MBytes       \n[  5]   1.00-2.00   sec  11.1 MBytes  93.3 Mbits/sec    0   12.7 MBytes       \n[  5]   2.00-3.00   sec  14.1 MBytes   118 Mbits/sec    0   12.7 MBytes       \n[  5]   3.00-4.00   sec  14.2 MBytes   120 Mbits/sec    0   12.7 MBytes       \n[  5]   4.00-5.00   sec  14.2 MBytes   120 Mbits/sec    0   12.7 MBytes       \n[  5]   5.00-6.00   sec  14.2 MBytes   120 Mbits/sec    0   12.7 MBytes       \n[  5]   6.00-7.00   sec  14.1 MBytes   118 Mbits/sec    0   12.7 MBytes       \n[  5]   7.00-8.00   sec  14.2 MBytes   120 Mbits/sec    0   12.7 MBytes       \n[  5]   8.00-9.00   sec  14.2 MBytes   120 Mbits/sec    0   12.7 MBytes       \n[  5]   9.00-10.00  sec  14.2 MBytes   119 Mbits/sec    0   12.7 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   129 MBytes   108 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec   129 MBytes   106 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 100, "mbits": 1000}}