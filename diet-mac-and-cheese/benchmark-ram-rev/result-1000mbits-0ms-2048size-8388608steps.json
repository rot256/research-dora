{"meta": {"ram": true, "ram_size": 2048, "ram_steps": 8388608}, "outputs": {"verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.19s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 2048 --ram-steps 8388608 --connection-addr '127.0.0.1:19336'`\n 2024-07-15T00:15:00.906Z INFO  dietmc_ram > verifier mode\n 2024-07-15T00:15:00.907Z INFO  dietmc_ram > addr: \"127.0.0.1:19336\"\n 2024-07-15T00:15:00.907Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T00:15:00.907Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T00:15:00.907Z INFO  dietmc_ram > connection received\n 2024-07-15T00:15:01.093Z INFO  dietmc_ram > init time: 186.603386ms\n 2024-07-15T00:15:01.093Z INFO  dietmc_ram > run 0/1\n 2024-07-15T00:15:03.146Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.052998127s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:15:05.072Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-15T00:15:07.847Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.927802971s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:15:09.038Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-15T00:15:10.823Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-15T00:15:12.759Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.933526866s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:15:14.840Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-15T00:15:17.642Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.910127906s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:15:18.929Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-15T00:15:18.981Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T00:15:18.997Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.014Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.031Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.048Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.065Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.082Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.098Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.115Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.131Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.148Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.165Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.182Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.199Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.216Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.232Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.249Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.266Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.283Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.300Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.317Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.776Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:2072125     czero:0          \n 2024-07-15T00:15:19.937Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:4572125     czero:0          \n 2024-07-15T00:15:22.070Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.932266963s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:15:22.434Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:7072125     czero:0          \n 2024-07-15T00:15:22.595Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:9572124     czero:0          \n 2024-07-15T00:15:22.755Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:12072124    czero:0          \n 2024-07-15T00:15:22.915Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:14572124    czero:0          \n 2024-07-15T00:15:25.065Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.95641353s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-15T00:15:25.474Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > nb inst:      16779268\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > nb addc:      16781312\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > nb add:       50343936\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > nb multc:     50343936\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > nb mult:      16781310\n 2024-07-15T00:15:25.490Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-15T00:15:25.490Z INFO  dietmc_ram                   > ram-size 2048\n 2024-07-15T00:15:25.490Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-15T00:15:25.490Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-15T00:15:25.490Z INFO  dietmc_ram                   > time ram exec: 24.396852131s\n 2024-07-15T00:15:25.490Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-15T00:15:25.490Z INFO  dietmc_ram                   > bytes recv: 412253864\n 2024-07-15T00:15:25.490Z INFO  dietmc_ram                   > bytes total: 423511112\n 2024-07-15T00:15:25.490Z INFO  dietmc_ram                   > VERIFIER DONE!\n", "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 2048 --ram-steps 8388608 --connection-addr '127.0.0.1:19336' --prover`\n 2024-07-15T00:15:00.886Z INFO  dietmc_ram > prover mode\n 2024-07-15T00:15:00.886Z INFO  dietmc_ram > addr: \"127.0.0.1:19336\"\n 2024-07-15T00:15:00.886Z INFO  dietmc_ram > lpn: Medium\n 2024-07-15T00:15:00.886Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-15T00:15:01.099Z INFO  dietmc_ram > init time: 192.870981ms\n 2024-07-15T00:15:01.099Z INFO  dietmc_ram > run 0/1\n 2024-07-15T00:15:10.722Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-15T00:15:18.943Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-15T00:15:18.943Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 2048\n 2024-07-15T00:15:18.990Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.017Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.046Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.073Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.101Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.128Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.155Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.183Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.211Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.238Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.266Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.294Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.322Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.352Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.381Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.410Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.438Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.466Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.494Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.522Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-15T00:15:19.653Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:461759      czero:0          \n 2024-07-15T00:15:19.813Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2961759     czero:0          \n 2024-07-15T00:15:19.965Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5461759     czero:0          \n 2024-07-15T00:15:22.461Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7961759     czero:0          \n 2024-07-15T00:15:22.632Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10461758    czero:0          \n 2024-07-15T00:15:22.791Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12961758    czero:0          \n 2024-07-15T00:15:22.949Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15461758    czero:0          \n 2024-07-15T00:15:25.430Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > nb addc:      16781312\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > nb add:       50343936\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > nb multc:     50343936\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > nb mult:      16781310\n 2024-07-15T00:15:25.475Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-15T00:15:25.475Z INFO  dietmc_ram                       > time ram exec: 24.375136308s\n 2024-07-15T00:15:25.475Z INFO  dietmc_ram                       > ram-size 2048\n 2024-07-15T00:15:25.475Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-15T00:15:25.475Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-15T00:15:25.475Z INFO  dietmc_ram                       > bytes sent: 412253864\n 2024-07-15T00:15:25.475Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-15T00:15:25.475Z INFO  dietmc_ram                       > bytes total: 423511112\n 2024-07-15T00:15:25.475Z INFO  dietmc_ram                       > PROVER DONE!\n"}, "network": {"before": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.019 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.034 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.039 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.040 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.039 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4075ms\nrtt min/avg/max/mdev = 0.019/0.034/0.040/0.007 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 53582 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  4.54 GBytes  39.0 Gbits/sec    0   1.06 MBytes       \n[  5]   1.00-2.00   sec  4.42 GBytes  38.0 Gbits/sec    0   1.06 MBytes       \n[  5]   2.00-3.00   sec  4.66 GBytes  40.0 Gbits/sec    0   1.06 MBytes       \n[  5]   3.00-4.00   sec  4.11 GBytes  35.3 Gbits/sec    0   1.06 MBytes       \n[  5]   4.00-5.00   sec  4.11 GBytes  35.3 Gbits/sec    0   1.06 MBytes       \n[  5]   5.00-6.00   sec  4.29 GBytes  36.8 Gbits/sec    0   1.06 MBytes       \n[  5]   6.00-7.00   sec  3.44 GBytes  29.5 Gbits/sec    0   1.37 MBytes       \n[  5]   7.00-8.00   sec  3.31 GBytes  28.4 Gbits/sec    0   1.56 MBytes       \n[  5]   8.00-9.00   sec  4.33 GBytes  37.2 Gbits/sec    0   1.56 MBytes       \n[  5]   9.00-10.00  sec  4.03 GBytes  34.6 Gbits/sec    0   1.56 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  42.4 GBytes  36.4 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  42.4 GBytes  36.4 Gbits/sec                  receiver\n\niperf Done.\n"}, "after": {"ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.020 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.039 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.033 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.043 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4090ms\nrtt min/avg/max/mdev = 0.020/0.036/0.047/0.009 ms\n", "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 44800 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec   119 MBytes   998 Mbits/sec    0   1.31 MBytes       \n[  5]   1.00-2.00   sec   118 MBytes   987 Mbits/sec    0   1.31 MBytes       \n[  5]   2.00-3.00   sec   117 MBytes   979 Mbits/sec    0   1.31 MBytes       \n[  5]   3.00-4.00   sec   115 MBytes   968 Mbits/sec    0   1.31 MBytes       \n[  5]   4.00-5.00   sec   118 MBytes   991 Mbits/sec    0   1.31 MBytes       \n[  5]   5.00-6.00   sec   118 MBytes   991 Mbits/sec    0   1.31 MBytes       \n[  5]   6.00-7.00   sec   117 MBytes   979 Mbits/sec    0   1.31 MBytes       \n[  5]   7.00-8.00   sec   118 MBytes   991 Mbits/sec    0   1.31 MBytes       \n[  5]   8.00-9.00   sec   117 MBytes   982 Mbits/sec    0   1.31 MBytes       \n[  5]   9.00-10.00  sec   118 MBytes   990 Mbits/sec    0   1.31 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  1.15 GBytes   986 Mbits/sec    0             sender\n[  5]   0.00-10.00  sec  1.14 GBytes   983 Mbits/sec                  receiver\n\niperf Done.\n"}, "delay": 0, "mbits": 1000}}