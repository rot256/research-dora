{
    "meta": {
        "ram": true,
        "ram_size": 131072,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 8388608 --connection-addr '127.0.0.1:46275'`\n 2024-07-18T20:05:14.166Z INFO  dietmc_ram > verifier mode\n 2024-07-18T20:05:14.166Z INFO  dietmc_ram > addr: \"127.0.0.1:46275\"\n 2024-07-18T20:05:14.166Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T20:05:14.166Z INFO  dietmc_ram > time reading ins/wit/rel: 42ns\n 2024-07-18T20:05:14.182Z INFO  dietmc_ram > connection received\n 2024-07-18T20:05:15.060Z INFO  dietmc_ram > init time: 878.129804ms\n 2024-07-18T20:05:15.060Z INFO  dietmc_ram > run 0/1\n 2024-07-18T20:05:18.020Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.959739489s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:05:27.503Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T20:05:34.710Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.926600648s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:05:39.886Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T20:05:48.428Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T20:05:51.339Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.891427643s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:06:00.825Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T20:06:08.042Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.924844558s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:06:13.202Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T20:06:13.486Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T20:06:14.014Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.041Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.068Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.095Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.122Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.148Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.175Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.202Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.229Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.255Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.282Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.309Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.336Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.363Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.389Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.416Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.443Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.470Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.497Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.523Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:16.439Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:1233469     czero:0          \n 2024-07-18T20:06:19.639Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:3733469     czero:0          \n 2024-07-18T20:06:25.523Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.882840657s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:06:26.673Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:6233469     czero:0          \n 2024-07-18T20:06:29.873Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:8733468     czero:0          \n 2024-07-18T20:06:33.084Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:11233468    czero:0          \n 2024-07-18T20:06:36.284Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:13733468    czero:0          \n 2024-07-18T20:06:42.172Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.876727003s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:06:43.321Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:16233468    czero:0          \n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > nb inst:      16908292\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > nb addc:      17039360\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > nb add:       51118080\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > nb multc:     51118080\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > nb mult:      17039358\n 2024-07-18T20:06:44.376Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T20:06:44.376Z INFO  dietmc_ram                   > ram-size 131072\n 2024-07-18T20:06:44.376Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T20:06:44.376Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T20:06:44.376Z INFO  dietmc_ram                   > time ram exec: 89.316190747s\n 2024-07-18T20:06:44.376Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T20:06:44.376Z INFO  dietmc_ram                   > bytes recv: 417414824\n 2024-07-18T20:06:44.376Z INFO  dietmc_ram                   > bytes total: 428672072\n 2024-07-18T20:06:44.376Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.20s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 8388608 --connection-addr '127.0.0.1:46275' --prover`\n 2024-07-18T20:05:14.182Z INFO  dietmc_ram > prover mode\n 2024-07-18T20:05:14.182Z INFO  dietmc_ram > addr: \"127.0.0.1:46275\"\n 2024-07-18T20:05:14.182Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T20:05:14.182Z INFO  dietmc_ram > time reading ins/wit/rel: 42ns\n 2024-07-18T20:05:15.067Z INFO  dietmc_ram > init time: 885.098967ms\n 2024-07-18T20:05:15.067Z INFO  dietmc_ram > run 0/1\n 2024-07-18T20:05:48.015Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T20:06:13.005Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T20:06:13.005Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 131072\n 2024-07-18T20:06:14.004Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.043Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.082Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.122Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.161Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.200Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.239Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.278Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.317Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.357Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.395Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.435Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.474Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.513Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.553Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.593Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.632Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.671Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.710Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.750Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:14.789Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T20:06:17.196Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2187615     czero:0          \n 2024-07-18T20:06:20.427Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:4687615     czero:0          \n 2024-07-18T20:06:27.400Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7187615     czero:0          \n 2024-07-18T20:06:30.631Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:9687614     czero:0          \n 2024-07-18T20:06:33.862Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12187614    czero:0          \n 2024-07-18T20:06:37.093Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:14687614    czero:0          \n 2024-07-18T20:06:43.843Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > nb addc:      17039360\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > nb add:       51118080\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > nb multc:     51118080\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > nb mult:      17039358\n 2024-07-18T20:06:44.366Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                       > time ram exec: 89.29904443s\n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                       > ram-size 131072\n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                       > bytes sent: 417414824\n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                       > bytes total: 428672072\n 2024-07-18T20:06:44.366Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.010 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.014 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.016 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.014 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.006 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4107ms\nrtt min/avg/max/mdev = 0.006/0.012/0.016/0.003 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 56598 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.50 GBytes  30.0 Gbits/sec    0    639 KBytes       \n[  5]   1.00-2.00   sec  3.48 GBytes  29.9 Gbits/sec    0    639 KBytes       \n[  5]   2.00-3.00   sec  3.42 GBytes  29.4 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  3.55 GBytes  30.5 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.57 GBytes  30.6 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  3.35 GBytes  28.8 Gbits/sec    0   1023 KBytes       \n[  5]   6.00-7.00   sec  3.48 GBytes  29.9 Gbits/sec    0   1023 KBytes       \n[  5]   7.00-8.00   sec  3.53 GBytes  30.3 Gbits/sec    0   1023 KBytes       \n[  5]   8.00-9.00   sec  3.56 GBytes  30.6 Gbits/sec    0   1023 KBytes       \n[  5]   9.00-10.00  sec  3.52 GBytes  30.2 Gbits/sec    0   1023 KBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.4 GBytes  30.4 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.4 GBytes  30.4 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.011 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.023 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.009 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.007 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.006 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4099ms\nrtt min/avg/max/mdev = 0.006/0.011/0.023/0.006 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 60246 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  9.38 MBytes  78.6 Mbits/sec    1   1.50 MBytes       \n[  5]   1.00-2.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   2.00-3.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   3.00-4.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   4.00-5.00   sec  7.12 MBytes  59.8 Mbits/sec    0   1.50 MBytes       \n[  5]   5.00-6.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   6.00-7.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   7.00-8.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   8.00-9.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   9.00-10.00  sec  7.12 MBytes  59.8 Mbits/sec    0   1.50 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  63.2 MBytes  53.1 Mbits/sec    1             sender\n[  5]   0.00-10.02  sec  59.6 MBytes  49.9 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 50
    }
}