{
    "meta": {
        "ram": true,
        "ram_size": 2048,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.19s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 2048 --ram-steps 4194304 --connection-addr '127.0.0.1:8732'`\n 2024-07-18T23:21:27.816Z INFO  dietmc_ram > verifier mode\n 2024-07-18T23:21:27.816Z INFO  dietmc_ram > addr: \"127.0.0.1:8732\"\n 2024-07-18T23:21:27.816Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T23:21:27.816Z INFO  dietmc_ram > time reading ins/wit/rel: 46ns\n 2024-07-18T23:21:27.850Z INFO  dietmc_ram > connection received\n 2024-07-18T23:21:29.553Z INFO  dietmc_ram > init time: 1.702270331s\n 2024-07-18T23:21:29.553Z INFO  dietmc_ram > run 0/1\n 2024-07-18T23:21:32.432Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.879141626s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T23:21:37.723Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T23:21:42.845Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.911220631s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T23:21:45.914Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T23:21:48.191Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T23:21:48.221Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.252Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.283Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.314Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.345Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.376Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.406Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.437Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.468Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.499Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:49.369Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:1029405     czero:0          \n 2024-07-18T23:21:53.634Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.81876383s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T23:21:54.821Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:3529405     czero:0          \n 2024-07-18T23:21:56.473Z INFO  diet_mac_and_cheese::backend > inp:8390660     witn:4194304     mul:6029404     czero:0          \n 2024-07-18T23:21:58.033Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > nb inst:       8390660\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > nb addc:       8392704\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > nb add:       25178112\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > nb multc:     25178112\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > nb mult:       8392702\n 2024-07-18T23:21:58.064Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T23:21:58.064Z INFO  dietmc_ram                   > ram-size 2048\n 2024-07-18T23:21:58.064Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T23:21:58.064Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T23:21:58.064Z INFO  dietmc_ram                   > time ram exec: 28.511773277s\n 2024-07-18T23:21:58.064Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T23:21:58.064Z INFO  dietmc_ram                   > bytes recv: 208178192\n 2024-07-18T23:21:58.064Z INFO  dietmc_ram                   > bytes total: 214072928\n 2024-07-18T23:21:58.064Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 2048 --ram-steps 4194304 --connection-addr '127.0.0.1:8732' --prover`\n 2024-07-18T23:21:27.800Z INFO  dietmc_ram > prover mode\n 2024-07-18T23:21:27.800Z INFO  dietmc_ram > addr: \"127.0.0.1:8732\"\n 2024-07-18T23:21:27.800Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T23:21:27.800Z INFO  dietmc_ram > time reading ins/wit/rel: 42ns\n 2024-07-18T23:21:29.570Z INFO  dietmc_ram > init time: 1.729287217s\n 2024-07-18T23:21:29.570Z INFO  dietmc_ram > run 0/1\n 2024-07-18T23:21:48.075Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T23:21:48.075Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 2048\n 2024-07-18T23:21:48.223Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.267Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.310Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.354Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.398Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.441Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.485Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.529Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.573Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.616Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:21:48.700Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:224735      czero:0          \n 2024-07-18T23:21:50.248Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2724735     czero:0          \n 2024-07-18T23:21:55.691Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5224734     czero:0          \n 2024-07-18T23:21:57.391Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7724734     czero:0          \n 2024-07-18T23:21:57.746Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > nb addc:       8392704\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > nb add:       25178112\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > nb multc:     25178112\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > nb mult:       8392702\n 2024-07-18T23:21:58.043Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T23:21:58.043Z INFO  dietmc_ram                       > time ram exec: 28.47375199s\n 2024-07-18T23:21:58.043Z INFO  dietmc_ram                       > ram-size 2048\n 2024-07-18T23:21:58.043Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T23:21:58.043Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T23:21:58.043Z INFO  dietmc_ram                       > bytes sent: 208178192\n 2024-07-18T23:21:58.043Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T23:21:58.043Z INFO  dietmc_ram                       > bytes total: 214072928\n 2024-07-18T23:21:58.043Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.009 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.020 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.007 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.006 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.005 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4124ms\nrtt min/avg/max/mdev = 0.005/0.009/0.020/0.005 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 58250 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.51 GBytes  30.1 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  3.55 GBytes  30.5 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  3.51 GBytes  30.1 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  3.53 GBytes  30.4 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.51 GBytes  30.1 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  3.58 GBytes  30.7 Gbits/sec    0   1023 KBytes       \n[  5]   6.00-7.00   sec  3.49 GBytes  30.0 Gbits/sec    0   1023 KBytes       \n[  5]   7.00-8.00   sec  3.58 GBytes  30.7 Gbits/sec    0   1023 KBytes       \n[  5]   8.00-9.00   sec  3.35 GBytes  28.7 Gbits/sec    0   1023 KBytes       \n[  5]   9.00-10.00  sec  3.56 GBytes  30.5 Gbits/sec    0   1023 KBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.6 GBytes  30.6 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.6 GBytes  30.6 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=20.0 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4004ms\nrtt min/avg/max/mdev = 20.021/20.026/20.035/0.005 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 57272 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  13.2 MBytes   111 Mbits/sec    0   2.25 MBytes       \n[  5]   1.00-2.00   sec  11.6 MBytes  97.5 Mbits/sec    0   2.87 MBytes       \n[  5]   2.00-3.00   sec  12.5 MBytes   105 Mbits/sec    0   3.50 MBytes       \n[  5]   3.00-4.00   sec  11.0 MBytes  92.3 Mbits/sec    0   4.06 MBytes       \n[  5]   4.00-5.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.43 MBytes       \n[  5]   5.00-6.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.43 MBytes       \n[  5]   6.00-7.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.43 MBytes       \n[  5]   7.00-8.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.43 MBytes       \n[  5]   8.00-9.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.43 MBytes       \n[  5]   9.00-10.00  sec  11.6 MBytes  97.5 Mbits/sec    0   4.43 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   118 MBytes  99.1 Mbits/sec    0             sender\n[  5]   0.00-10.26  sec   118 MBytes  96.6 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 10,
        "mbits": 100
    }
}