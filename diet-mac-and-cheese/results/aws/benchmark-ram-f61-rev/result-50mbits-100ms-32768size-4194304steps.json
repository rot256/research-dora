{
    "meta": {
        "ram": true,
        "ram_size": 32768,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.20s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 4194304 --connection-addr '127.0.0.1:20993'`\n 2024-07-18T22:00:06.441Z INFO  dietmc_ram > verifier mode\n 2024-07-18T22:00:06.441Z INFO  dietmc_ram > addr: \"127.0.0.1:20993\"\n 2024-07-18T22:00:06.441Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T22:00:06.441Z INFO  dietmc_ram > time reading ins/wit/rel: 42ns\n 2024-07-18T22:00:06.726Z INFO  dietmc_ram > connection received\n 2024-07-18T22:00:13.783Z INFO  dietmc_ram > init time: 7.056954315s\n 2024-07-18T22:00:13.783Z INFO  dietmc_ram > run 0/1\n 2024-07-18T22:00:17.938Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:4.155325109s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:00:29.144Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T22:00:37.976Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.838098509s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:00:44.217Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T22:00:49.339Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T22:00:49.576Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.601Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.626Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.651Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.677Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.702Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.727Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.752Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.777Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.802Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:51.342Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:829725      czero:0          \n 2024-07-18T22:00:58.572Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.780988015s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:01:00.124Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:3329725     czero:0          \n 2024-07-18T22:01:03.925Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:5829724     czero:0          \n 2024-07-18T22:01:07.636Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:8329724     czero:0          \n 2024-07-18T22:01:07.997Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > nb inst:       8421380\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > nb addc:       8454144\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > nb add:       25362432\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > nb multc:     25362432\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > nb mult:       8454142\n 2024-07-18T22:01:08.208Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T22:01:08.208Z INFO  dietmc_ram                   > ram-size 32768\n 2024-07-18T22:01:08.208Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T22:01:08.208Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T22:01:08.208Z INFO  dietmc_ram                   > time ram exec: 54.424790584s\n 2024-07-18T22:01:08.208Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T22:01:08.208Z INFO  dietmc_ram                   > bytes recv: 209406992\n 2024-07-18T22:01:08.208Z INFO  dietmc_ram                   > bytes total: 215301728\n 2024-07-18T22:01:08.208Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 4194304 --connection-addr '127.0.0.1:20993' --prover`\n 2024-07-18T22:00:06.426Z INFO  dietmc_ram > prover mode\n 2024-07-18T22:00:06.426Z INFO  dietmc_ram > addr: \"127.0.0.1:20993\"\n 2024-07-18T22:00:06.426Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T22:00:06.426Z INFO  dietmc_ram > time reading ins/wit/rel: 45ns\n 2024-07-18T22:00:13.890Z INFO  dietmc_ram > init time: 7.264090933s\n 2024-07-18T22:00:13.890Z INFO  dietmc_ram > run 0/1\n 2024-07-18T22:00:49.204Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T22:00:49.204Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 32768\n 2024-07-18T22:00:49.671Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.708Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.746Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.783Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.821Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.858Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.896Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.933Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:49.971Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:50.008Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T22:00:50.082Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:40415       czero:0          \n 2024-07-18T22:00:53.652Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2540415     czero:0          \n 2024-07-18T22:01:02.108Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5040414     czero:0          \n 2024-07-18T22:01:06.286Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7540414     czero:0          \n 2024-07-18T22:01:07.690Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > nb addc:       8454144\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > nb add:       25362432\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > nb multc:     25362432\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > nb mult:       8454142\n 2024-07-18T22:01:08.097Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T22:01:08.097Z INFO  dietmc_ram                       > time ram exec: 54.207160156s\n 2024-07-18T22:01:08.097Z INFO  dietmc_ram                       > ram-size 32768\n 2024-07-18T22:01:08.097Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T22:01:08.097Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T22:01:08.097Z INFO  dietmc_ram                       > bytes sent: 209406992\n 2024-07-18T22:01:08.097Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T22:01:08.097Z INFO  dietmc_ram                       > bytes total: 215301728\n 2024-07-18T22:01:08.097Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.009 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.019 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.008 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.009 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.007 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4115ms\nrtt min/avg/max/mdev = 0.007/0.010/0.019/0.004 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 37210 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.56 GBytes  30.6 Gbits/sec    0   1.06 MBytes       \n[  5]   1.00-2.00   sec  3.43 GBytes  29.5 Gbits/sec    0   1.06 MBytes       \n[  5]   2.00-3.00   sec  3.60 GBytes  30.9 Gbits/sec    0   1.06 MBytes       \n[  5]   3.00-4.00   sec  3.60 GBytes  30.9 Gbits/sec    0   1.06 MBytes       \n[  5]   4.00-5.00   sec  3.53 GBytes  30.3 Gbits/sec    0   1.06 MBytes       \n[  5]   5.00-6.00   sec  3.63 GBytes  31.1 Gbits/sec    0   1.06 MBytes       \n[  5]   6.00-7.00   sec  3.63 GBytes  31.1 Gbits/sec    0   1.06 MBytes       \n[  5]   7.00-8.00   sec  3.62 GBytes  31.1 Gbits/sec    0   1.06 MBytes       \n[  5]   8.00-9.00   sec  3.62 GBytes  31.1 Gbits/sec    0   1.06 MBytes       \n[  5]   9.00-10.00  sec  3.57 GBytes  30.6 Gbits/sec    0   1.06 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  36.1 GBytes  31.0 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  36.1 GBytes  31.0 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4003ms\nrtt min/avg/max/mdev = 200.016/200.022/200.033/0.006 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 45946 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   2.75 MBytes       \n[  5]   1.00-2.00   sec  2.62 MBytes  22.0 Mbits/sec    0   5.12 MBytes       \n[  5]   2.00-3.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.25 MBytes       \n[  5]   3.00-4.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.25 MBytes       \n[  5]   4.00-5.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.25 MBytes       \n[  5]   5.00-6.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.25 MBytes       \n[  5]   6.00-7.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.25 MBytes       \n[  5]   7.00-8.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.25 MBytes       \n[  5]   8.00-9.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.25 MBytes       \n[  5]   9.00-10.00  sec  3.38 MBytes  28.3 Mbits/sec    0   5.25 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  46.9 MBytes  39.3 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec  46.9 MBytes  38.5 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 100,
        "mbits": 50
    }
}