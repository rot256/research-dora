{
    "meta": {
        "ram": true,
        "ram_size": 4096,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 4194304 --connection-addr '127.0.0.1:43413'`\n 2024-07-18T20:37:01.909Z INFO  dietmc_ram > verifier mode\n 2024-07-18T20:37:01.909Z INFO  dietmc_ram > addr: \"127.0.0.1:43413\"\n 2024-07-18T20:37:01.909Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T20:37:01.909Z INFO  dietmc_ram > time reading ins/wit/rel: 55ns\n 2024-07-18T20:37:01.955Z INFO  dietmc_ram > connection received\n 2024-07-18T20:37:03.709Z INFO  dietmc_ram > init time: 1.753942857s\n 2024-07-18T20:37:03.709Z INFO  dietmc_ram > run 0/1\n 2024-07-18T20:37:06.759Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.050465144s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:37:16.393Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T20:37:23.762Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.022530741s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:37:29.076Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T20:37:33.557Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T20:37:33.601Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.631Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.661Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.691Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.721Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.751Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.781Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.811Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.841Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.871Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:35.377Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:1016093     czero:0          \n 2024-07-18T20:37:41.225Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.963799632s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T20:37:42.630Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:3516093     czero:0          \n 2024-07-18T20:37:45.881Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:6016092     czero:0          \n 2024-07-18T20:37:48.968Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > nb inst:       8392708\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > nb addc:       8396800\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > nb add:       25190400\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > nb multc:     25190400\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > nb mult:       8396798\n 2024-07-18T20:37:49.000Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T20:37:49.000Z INFO  dietmc_ram                   > ram-size 4096\n 2024-07-18T20:37:49.000Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T20:37:49.000Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T20:37:49.000Z INFO  dietmc_ram                   > time ram exec: 45.29089204s\n 2024-07-18T20:37:49.000Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T20:37:49.000Z INFO  dietmc_ram                   > bytes recv: 208260112\n 2024-07-18T20:37:49.000Z INFO  dietmc_ram                   > bytes total: 214154848\n 2024-07-18T20:37:49.000Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.19s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 4194304 --connection-addr '127.0.0.1:43413' --prover`\n 2024-07-18T20:37:01.924Z INFO  dietmc_ram > prover mode\n 2024-07-18T20:37:01.924Z INFO  dietmc_ram > addr: \"127.0.0.1:43413\"\n 2024-07-18T20:37:01.924Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T20:37:01.924Z INFO  dietmc_ram > time reading ins/wit/rel: 44ns\n 2024-07-18T20:37:03.726Z INFO  dietmc_ram > init time: 1.780866903s\n 2024-07-18T20:37:03.726Z INFO  dietmc_ram > run 0/1\n 2024-07-18T20:37:33.154Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T20:37:33.154Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 4096\n 2024-07-18T20:37:33.604Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.646Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.689Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.732Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.774Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.817Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.860Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.903Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.946Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:33.988Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T20:37:34.070Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:212447      czero:0          \n 2024-07-18T20:37:37.437Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2712447     czero:0          \n 2024-07-18T20:37:44.334Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5212446     czero:0          \n 2024-07-18T20:37:47.687Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7712446     czero:0          \n 2024-07-18T20:37:48.372Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > nb addc:       8396800\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > nb add:       25190400\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > nb multc:     25190400\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > nb mult:       8396798\n 2024-07-18T20:37:48.979Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T20:37:48.979Z INFO  dietmc_ram                       > time ram exec: 45.253005381s\n 2024-07-18T20:37:48.979Z INFO  dietmc_ram                       > ram-size 4096\n 2024-07-18T20:37:48.979Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T20:37:48.979Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T20:37:48.979Z INFO  dietmc_ram                       > bytes sent: 208260112\n 2024-07-18T20:37:48.979Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T20:37:48.979Z INFO  dietmc_ram                       > bytes total: 214154848\n 2024-07-18T20:37:48.979Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.010 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.019 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.008 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.012 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.008 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4105ms\nrtt min/avg/max/mdev = 0.008/0.011/0.019/0.004 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 49086 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.58 GBytes  30.7 Gbits/sec    0    895 KBytes       \n[  5]   1.00-2.00   sec  3.55 GBytes  30.5 Gbits/sec    0    895 KBytes       \n[  5]   2.00-3.00   sec  3.58 GBytes  30.7 Gbits/sec    0    895 KBytes       \n[  5]   3.00-4.00   sec  3.59 GBytes  30.8 Gbits/sec    0    895 KBytes       \n[  5]   4.00-5.00   sec  3.46 GBytes  29.7 Gbits/sec    0    895 KBytes       \n[  5]   5.00-6.00   sec  3.51 GBytes  30.2 Gbits/sec    0    895 KBytes       \n[  5]   6.00-7.00   sec  3.47 GBytes  29.8 Gbits/sec    0    895 KBytes       \n[  5]   7.00-8.00   sec  3.61 GBytes  31.0 Gbits/sec    0    895 KBytes       \n[  5]   8.00-9.00   sec  3.57 GBytes  30.7 Gbits/sec    0    895 KBytes       \n[  5]   9.00-10.00  sec  3.58 GBytes  30.7 Gbits/sec    0    895 KBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.9 GBytes  30.8 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.9 GBytes  30.8 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=20.0 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4004ms\nrtt min/avg/max/mdev = 20.021/20.025/20.033/0.004 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 43322 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  7.25 MBytes  60.8 Mbits/sec    0   1.94 MBytes       \n[  5]   1.00-2.00   sec  6.38 MBytes  53.5 Mbits/sec    0   2.25 MBytes       \n[  5]   2.00-3.00   sec  6.00 MBytes  50.3 Mbits/sec    0   2.62 MBytes       \n[  5]   3.00-4.00   sec  5.12 MBytes  43.0 Mbits/sec    0   2.87 MBytes       \n[  5]   4.00-5.00   sec  6.75 MBytes  56.6 Mbits/sec    0   3.75 MBytes       \n[  5]   5.00-6.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.75 MBytes       \n[  5]   6.00-7.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.75 MBytes       \n[  5]   7.00-8.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.75 MBytes       \n[  5]   8.00-9.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.75 MBytes       \n[  5]   9.00-10.00  sec  4.00 MBytes  33.5 Mbits/sec    0   4.75 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  59.5 MBytes  49.9 Mbits/sec    0             sender\n[  5]   0.00-10.18  sec  59.5 MBytes  49.0 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 10,
        "mbits": 50
    }
}