{
    "meta": {
        "ram": true,
        "ram_size": 131072,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 8388608 --connection-addr '127.0.0.1:38866'`\n 2024-07-18T22:14:39.756Z INFO  dietmc_ram > verifier mode\n 2024-07-18T22:14:39.756Z INFO  dietmc_ram > addr: \"127.0.0.1:38866\"\n 2024-07-18T22:14:39.756Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T22:14:39.756Z INFO  dietmc_ram > time reading ins/wit/rel: 59ns\n 2024-07-18T22:14:40.071Z INFO  dietmc_ram > connection received\n 2024-07-18T22:14:47.129Z INFO  dietmc_ram > init time: 7.057588943s\n 2024-07-18T22:14:47.129Z INFO  dietmc_ram > run 0/1\n 2024-07-18T22:14:51.286Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:4.157234601s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:15:02.412Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T22:15:11.239Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.831411609s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:15:17.480Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T22:15:27.340Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T22:15:31.136Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.776994784s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:15:42.307Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T22:15:51.148Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.832992325s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:15:57.366Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T22:15:57.649Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T22:15:58.380Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.410Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.440Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.470Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.499Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.529Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.559Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.589Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.619Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.649Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.678Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.708Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.738Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.768Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.798Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.828Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.858Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.888Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.918Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.948Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T22:16:01.260Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:1233469     czero:0          \n 2024-07-18T22:16:05.062Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:3733469     czero:0          \n 2024-07-18T22:16:12.356Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.793429338s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:16:13.848Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:6233469     czero:0          \n 2024-07-18T22:16:17.649Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:8733468     czero:0          \n 2024-07-18T22:16:21.349Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:11233468    czero:0          \n 2024-07-18T22:16:25.151Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:13733468    czero:0          \n 2024-07-18T22:16:32.456Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:3.793937233s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T22:16:33.972Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:16233468    czero:0          \n 2024-07-18T22:16:35.317Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > nb inst:      16908292\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > nb addc:      17039360\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > nb add:       51118080\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > nb multc:     51118080\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > nb mult:      17039358\n 2024-07-18T22:16:35.528Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T22:16:35.528Z INFO  dietmc_ram                   > ram-size 131072\n 2024-07-18T22:16:35.528Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T22:16:35.528Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T22:16:35.528Z INFO  dietmc_ram                   > time ram exec: 108.398828349s\n 2024-07-18T22:16:35.528Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T22:16:35.528Z INFO  dietmc_ram                   > bytes recv: 417414824\n 2024-07-18T22:16:35.528Z INFO  dietmc_ram                   > bytes total: 428672072\n 2024-07-18T22:16:35.528Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.19s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 8388608 --connection-addr '127.0.0.1:38866' --prover`\n 2024-07-18T22:14:39.771Z INFO  dietmc_ram > prover mode\n 2024-07-18T22:14:39.771Z INFO  dietmc_ram > addr: \"127.0.0.1:38866\"\n 2024-07-18T22:14:39.771Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T22:14:39.771Z INFO  dietmc_ram > time reading ins/wit/rel: 82ns\n 2024-07-18T22:14:47.236Z INFO  dietmc_ram > init time: 7.264500821s\n 2024-07-18T22:14:47.236Z INFO  dietmc_ram > run 0/1\n 2024-07-18T22:15:27.082Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T22:15:57.162Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T22:15:57.162Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 131072\n 2024-07-18T22:15:58.466Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.508Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.551Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.593Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.636Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.678Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.721Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.763Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.805Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.848Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.889Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.932Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:58.975Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:59.018Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:59.061Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:59.103Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:59.146Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:59.188Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:59.231Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:59.273Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:15:59.316Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T22:16:02.038Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2187615     czero:0          \n 2024-07-18T22:16:06.216Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:4687615     czero:0          \n 2024-07-18T22:16:15.163Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7187615     czero:0          \n 2024-07-18T22:16:18.661Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:9687614     czero:0          \n 2024-07-18T22:16:22.158Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12187614    czero:0          \n 2024-07-18T22:16:26.336Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:14687614    czero:0          \n 2024-07-18T22:16:34.631Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > nb addc:      17039360\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > nb add:       51118080\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > nb multc:     51118080\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > nb mult:      17039358\n 2024-07-18T22:16:35.417Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T22:16:35.417Z INFO  dietmc_ram                       > time ram exec: 108.181316533s\n 2024-07-18T22:16:35.417Z INFO  dietmc_ram                       > ram-size 131072\n 2024-07-18T22:16:35.417Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T22:16:35.417Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T22:16:35.417Z INFO  dietmc_ram                       > bytes sent: 417414824\n 2024-07-18T22:16:35.417Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T22:16:35.417Z INFO  dietmc_ram                       > bytes total: 428672072\n 2024-07-18T22:16:35.417Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.009 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.019 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.008 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.009 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.007 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4115ms\nrtt min/avg/max/mdev = 0.007/0.010/0.019/0.004 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 37210 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.56 GBytes  30.6 Gbits/sec    0   1.06 MBytes       \n[  5]   1.00-2.00   sec  3.43 GBytes  29.5 Gbits/sec    0   1.06 MBytes       \n[  5]   2.00-3.00   sec  3.60 GBytes  30.9 Gbits/sec    0   1.06 MBytes       \n[  5]   3.00-4.00   sec  3.60 GBytes  30.9 Gbits/sec    0   1.06 MBytes       \n[  5]   4.00-5.00   sec  3.53 GBytes  30.3 Gbits/sec    0   1.06 MBytes       \n[  5]   5.00-6.00   sec  3.63 GBytes  31.1 Gbits/sec    0   1.06 MBytes       \n[  5]   6.00-7.00   sec  3.63 GBytes  31.1 Gbits/sec    0   1.06 MBytes       \n[  5]   7.00-8.00   sec  3.62 GBytes  31.1 Gbits/sec    0   1.06 MBytes       \n[  5]   8.00-9.00   sec  3.62 GBytes  31.1 Gbits/sec    0   1.06 MBytes       \n[  5]   9.00-10.00  sec  3.57 GBytes  30.6 Gbits/sec    0   1.06 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  36.1 GBytes  31.0 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  36.1 GBytes  31.0 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4003ms\nrtt min/avg/max/mdev = 200.016/200.022/200.033/0.006 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 45946 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   2.75 MBytes       \n[  5]   1.00-2.00   sec  2.62 MBytes  22.0 Mbits/sec    0   5.12 MBytes       \n[  5]   2.00-3.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.25 MBytes       \n[  5]   3.00-4.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.25 MBytes       \n[  5]   4.00-5.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.25 MBytes       \n[  5]   5.00-6.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.25 MBytes       \n[  5]   6.00-7.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.25 MBytes       \n[  5]   7.00-8.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.25 MBytes       \n[  5]   8.00-9.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.25 MBytes       \n[  5]   9.00-10.00  sec  3.38 MBytes  28.3 Mbits/sec    0   5.25 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  46.9 MBytes  39.3 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec  46.9 MBytes  38.5 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 100,
        "mbits": 50
    }
}