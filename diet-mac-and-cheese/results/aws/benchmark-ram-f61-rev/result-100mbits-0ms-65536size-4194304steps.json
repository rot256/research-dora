{
    "meta": {
        "ram": true,
        "ram_size": 65536,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.19s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 65536 --ram-steps 4194304 --connection-addr '127.0.0.1:25955'`\n 2024-07-18T23:01:06.011Z INFO  dietmc_ram > verifier mode\n 2024-07-18T23:01:06.011Z INFO  dietmc_ram > addr: \"127.0.0.1:25955\"\n 2024-07-18T23:01:06.011Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T23:01:06.011Z INFO  dietmc_ram > time reading ins/wit/rel: 43ns\n 2024-07-18T23:01:06.011Z INFO  dietmc_ram > connection received\n 2024-07-18T23:01:06.524Z INFO  dietmc_ram > init time: 513.000002ms\n 2024-07-18T23:01:06.524Z INFO  dietmc_ram > run 0/1\n 2024-07-18T23:01:09.295Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.770772899s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T23:01:14.553Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T23:01:19.489Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.795413413s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T23:01:22.580Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T23:01:24.788Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T23:01:24.925Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:24.951Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:24.976Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.001Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.026Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.052Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.077Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.102Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.127Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.152Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.732Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:616733      czero:0          \n 2024-07-18T23:01:30.021Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.741439649s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T23:01:31.080Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:3116733     czero:0          \n 2024-07-18T23:01:32.685Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:5616732     czero:0          \n 2024-07-18T23:01:34.286Z INFO  diet_mac_and_cheese::backend > inp:8454148     witn:4194304     mul:8116732     czero:0          \n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > nb inst:       8454148\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > nb addc:       8519680\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > nb add:       25559040\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > nb multc:     25559040\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > nb mult:       8519678\n 2024-07-18T23:01:34.557Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T23:01:34.557Z INFO  dietmc_ram                   > ram-size 65536\n 2024-07-18T23:01:34.557Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T23:01:34.557Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T23:01:34.557Z INFO  dietmc_ram                   > time ram exec: 28.032521818s\n 2024-07-18T23:01:34.557Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T23:01:34.557Z INFO  dietmc_ram                   > bytes recv: 210717712\n 2024-07-18T23:01:34.557Z INFO  dietmc_ram                   > bytes total: 216612448\n 2024-07-18T23:01:34.557Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 65536 --ram-steps 4194304 --connection-addr '127.0.0.1:25955' --prover`\n 2024-07-18T23:01:05.995Z INFO  dietmc_ram > prover mode\n 2024-07-18T23:01:05.995Z INFO  dietmc_ram > addr: \"127.0.0.1:25955\"\n 2024-07-18T23:01:05.995Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T23:01:05.995Z INFO  dietmc_ram > time reading ins/wit/rel: 43ns\n 2024-07-18T23:01:06.531Z INFO  dietmc_ram > init time: 519.676302ms\n 2024-07-18T23:01:06.531Z INFO  dietmc_ram > run 0/1\n 2024-07-18T23:01:24.500Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T23:01:24.500Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 65536\n 2024-07-18T23:01:24.921Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:24.959Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:24.997Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.035Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.073Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.110Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.148Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.187Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.225Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.262Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:25.300Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T23:01:26.594Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2343807     czero:0          \n 2024-07-18T23:01:31.913Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:4843806     czero:0          \n 2024-07-18T23:01:33.548Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7343806     czero:0          \n 2024-07-18T23:01:34.312Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > nb addc:       8519680\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > nb add:       25559040\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > nb multc:     25559040\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > nb mult:       8519678\n 2024-07-18T23:01:34.546Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                       > time ram exec: 28.015674281s\n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                       > ram-size 65536\n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                       > bytes sent: 210717712\n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                       > bytes total: 216612448\n 2024-07-18T23:01:34.546Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.009 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.020 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.006 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.004 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.006 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4113ms\nrtt min/avg/max/mdev = 0.004/0.009/0.020/0.005 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 53918 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.47 GBytes  29.8 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  3.39 GBytes  29.1 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  3.46 GBytes  29.7 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  3.45 GBytes  29.6 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.40 GBytes  29.2 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  3.47 GBytes  29.8 Gbits/sec    0   1023 KBytes       \n[  5]   6.00-7.00   sec  3.44 GBytes  29.6 Gbits/sec    0   1023 KBytes       \n[  5]   7.00-8.00   sec  3.46 GBytes  29.7 Gbits/sec    0   1023 KBytes       \n[  5]   8.00-9.00   sec  3.39 GBytes  29.1 Gbits/sec    0   1023 KBytes       \n[  5]   9.00-10.00  sec  3.48 GBytes  29.9 Gbits/sec    0   1023 KBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  34.7 GBytes  29.8 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  34.7 GBytes  29.8 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.011 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.022 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.008 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.008 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.008 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4100ms\nrtt min/avg/max/mdev = 0.008/0.011/0.022/0.005 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 46710 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  15.1 MBytes   127 Mbits/sec    0   1.56 MBytes       \n[  5]   1.00-2.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   2.00-3.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   3.00-4.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   4.00-5.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   5.00-6.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   6.00-7.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   7.00-8.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   8.00-9.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   9.00-10.00  sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   123 MBytes   103 Mbits/sec    0             sender\n[  5]   0.00-10.02  sec   119 MBytes  99.8 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 100
    }
}