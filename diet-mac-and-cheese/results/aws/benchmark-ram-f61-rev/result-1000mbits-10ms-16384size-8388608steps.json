{
    "meta": {
        "ram": true,
        "ram_size": 16384,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.18s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 8388608 --connection-addr '127.0.0.1:11362'`\n 2024-07-19T01:22:36.352Z INFO  dietmc_ram > verifier mode\n 2024-07-19T01:22:36.352Z INFO  dietmc_ram > addr: \"127.0.0.1:11362\"\n 2024-07-19T01:22:36.352Z INFO  dietmc_ram > lpn: Medium\n 2024-07-19T01:22:36.352Z INFO  dietmc_ram > time reading ins/wit/rel: 43ns\n 2024-07-19T01:22:36.398Z INFO  dietmc_ram > connection received\n 2024-07-19T01:22:37.632Z INFO  dietmc_ram > init time: 1.233991329s\n 2024-07-19T01:22:37.632Z INFO  dietmc_ram > run 0/1\n 2024-07-19T01:22:40.396Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.763502414s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-19T01:22:42.865Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-19T01:22:46.545Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.761035584s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-19T01:22:48.312Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-19T01:22:50.012Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-19T01:22:52.868Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.757604564s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-19T01:22:55.488Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-19T01:22:59.209Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.761953595s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-19T01:23:01.067Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-19T01:23:01.120Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-19T01:23:01.163Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.186Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.210Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.234Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.258Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.281Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.305Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.329Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.353Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.377Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.400Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.424Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.448Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.472Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.496Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.519Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.543Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.567Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.591Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.615Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:02.136Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:1978941     czero:0          \n 2024-07-19T01:23:02.348Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:4478941     czero:0          \n 2024-07-19T01:23:05.316Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.704907722s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-19T01:23:06.370Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:6978941     czero:0          \n 2024-07-19T01:23:06.582Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:9478940     czero:0          \n 2024-07-19T01:23:06.793Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:11978940    czero:0          \n 2024-07-19T01:23:07.005Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:14478940    czero:0          \n 2024-07-19T01:23:09.977Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.708983053s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-19T01:23:11.053Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > nb inst:      16793604\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > nb addc:      16809984\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > nb add:       50429952\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > nb multc:     50429952\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > nb mult:      16809982\n 2024-07-19T01:23:11.084Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-19T01:23:11.084Z INFO  dietmc_ram                   > ram-size 16384\n 2024-07-19T01:23:11.084Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-19T01:23:11.084Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-19T01:23:11.084Z INFO  dietmc_ram                   > time ram exec: 33.45180499s\n 2024-07-19T01:23:11.084Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-19T01:23:11.084Z INFO  dietmc_ram                   > bytes recv: 412827304\n 2024-07-19T01:23:11.084Z INFO  dietmc_ram                   > bytes total: 424084552\n 2024-07-19T01:23:11.084Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.20s\n     Running `/home/ubuntu/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 8388608 --connection-addr '127.0.0.1:11362' --prover`\n 2024-07-19T01:22:36.368Z INFO  dietmc_ram > prover mode\n 2024-07-19T01:22:36.368Z INFO  dietmc_ram > addr: \"127.0.0.1:11362\"\n 2024-07-19T01:22:36.368Z INFO  dietmc_ram > lpn: Medium\n 2024-07-19T01:22:36.368Z INFO  dietmc_ram > time reading ins/wit/rel: 93ns\n 2024-07-19T01:22:37.649Z INFO  dietmc_ram > init time: 1.26111861s\n 2024-07-19T01:22:37.649Z INFO  dietmc_ram > run 0/1\n 2024-07-19T01:22:49.999Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-19T01:23:01.108Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-19T01:23:01.108Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 16384\n 2024-07-19T01:23:01.161Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.198Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.234Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.270Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.306Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.342Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.378Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.414Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.450Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.487Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.523Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.559Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.595Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.632Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.669Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.705Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.741Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.777Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.813Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.849Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-19T01:23:01.957Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:375743      czero:0          \n 2024-07-19T01:23:02.198Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2875743     czero:0          \n 2024-07-19T01:23:02.412Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5375743     czero:0          \n 2024-07-19T01:23:06.428Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7875743     czero:0          \n 2024-07-19T01:23:06.642Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10375742    czero:0          \n 2024-07-19T01:23:06.856Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12875742    czero:0          \n 2024-07-19T01:23:07.070Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15375742    czero:0          \n 2024-07-19T01:23:11.016Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > nb addc:      16809984\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > nb add:       50429952\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > nb multc:     50429952\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > nb mult:      16809982\n 2024-07-19T01:23:11.063Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-19T01:23:11.063Z INFO  dietmc_ram                       > time ram exec: 33.413855425s\n 2024-07-19T01:23:11.063Z INFO  dietmc_ram                       > ram-size 16384\n 2024-07-19T01:23:11.063Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-19T01:23:11.063Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-19T01:23:11.063Z INFO  dietmc_ram                       > bytes sent: 412827304\n 2024-07-19T01:23:11.063Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-19T01:23:11.063Z INFO  dietmc_ram                       > bytes total: 424084552\n 2024-07-19T01:23:11.063Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.010 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.019 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.005 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.006 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.006 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4090ms\nrtt min/avg/max/mdev = 0.005/0.009/0.019/0.005 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 39188 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.57 GBytes  30.6 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  3.55 GBytes  30.5 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  3.46 GBytes  29.8 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  3.36 GBytes  28.9 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.53 GBytes  30.3 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  3.45 GBytes  29.7 Gbits/sec    0   1023 KBytes       \n[  5]   6.00-7.00   sec  3.53 GBytes  30.3 Gbits/sec    0   1023 KBytes       \n[  5]   7.00-8.00   sec  3.54 GBytes  30.4 Gbits/sec    0   1023 KBytes       \n[  5]   8.00-9.00   sec  3.41 GBytes  29.3 Gbits/sec    0   1023 KBytes       \n[  5]   9.00-10.00  sec  3.54 GBytes  30.4 Gbits/sec    0   1023 KBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.5 GBytes  30.5 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.5 GBytes  30.5 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=20.0 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=20.0 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4004ms\nrtt min/avg/max/mdev = 20.021/20.026/20.034/0.004 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local 127.0.0.1 port 60722 connected to 127.0.0.1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  79.1 MBytes   663 Mbits/sec    0   9.06 MBytes       \n[  5]   1.00-2.00   sec  83.4 MBytes   699 Mbits/sec    0   9.06 MBytes       \n[  5]   2.00-3.00   sec  83.8 MBytes   703 Mbits/sec    0   9.06 MBytes       \n[  5]   3.00-4.00   sec  83.5 MBytes   700 Mbits/sec    0   9.06 MBytes       \n[  5]   4.00-5.00   sec  86.8 MBytes   728 Mbits/sec    0   9.06 MBytes       \n[  5]   5.00-6.00   sec  83.5 MBytes   700 Mbits/sec    0   9.06 MBytes       \n[  5]   6.00-7.00   sec  83.6 MBytes   701 Mbits/sec    0   9.06 MBytes       \n[  5]   7.00-8.00   sec  84.4 MBytes   708 Mbits/sec    0   9.06 MBytes       \n[  5]   8.00-9.00   sec  84.6 MBytes   710 Mbits/sec    0   9.06 MBytes       \n[  5]   9.00-10.00  sec  84.5 MBytes   709 Mbits/sec    0   9.06 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   837 MBytes   702 Mbits/sec    0             sender\n[  5]   0.00-10.03  sec   837 MBytes   700 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 10,
        "mbits": 1000
    }
}