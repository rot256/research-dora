{
    "meta": {
        "ram": true,
        "ram_size": 1024,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:41693'`\n 2024-07-18T15:42:07.009Z INFO  dietmc_ram > verifier mode\n 2024-07-18T15:42:07.009Z INFO  dietmc_ram > addr: \"127.0.0.1:41693\"\n 2024-07-18T15:42:07.009Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T15:42:07.009Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T15:42:07.022Z INFO  dietmc_ram > connection received\n 2024-07-18T15:42:07.558Z INFO  dietmc_ram > init time: 535.735045ms\n 2024-07-18T15:42:07.558Z INFO  dietmc_ram > run 0/1\n 2024-07-18T15:42:09.432Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:1.874158002s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:42:14.115Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T15:42:18.027Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.771517932s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:42:20.514Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T15:42:24.787Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T15:42:26.534Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.739724784s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:42:31.190Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T15:42:35.084Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.74839387s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:42:37.567Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T15:42:37.709Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T15:42:37.722Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.735Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.747Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.760Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.773Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.786Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.799Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.812Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.825Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.839Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.852Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.865Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.878Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.891Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.904Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.917Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.930Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.943Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.956Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.969Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:39.598Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:2078781     czero:0          \n 2024-07-18T15:42:41.203Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:4578781     czero:0          \n 2024-07-18T15:42:44.170Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.759632074s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:42:44.953Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:7078781     czero:0          \n 2024-07-18T15:42:46.558Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:9578780     czero:0          \n 2024-07-18T15:42:48.159Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:12078780    czero:0          \n 2024-07-18T15:42:49.767Z INFO  diet_mac_and_cheese::backend > inp:16778244    witn:8388608     mul:14578780    czero:0          \n 2024-07-18T15:42:52.746Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.7663742s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > nb inst:      16778244\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > nb addc:      16779264\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > nb add:       50337792\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > nb multc:     50337792\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > nb mult:      16779262\n 2024-07-18T15:42:53.380Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T15:42:53.380Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-18T15:42:53.380Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T15:42:53.380Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T15:42:53.380Z INFO  dietmc_ram                   > time ram exec: 45.822078997s\n 2024-07-18T15:42:53.380Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T15:42:53.380Z INFO  dietmc_ram                   > bytes recv: 412212904\n 2024-07-18T15:42:53.380Z INFO  dietmc_ram                   > bytes total: 423470152\n 2024-07-18T15:42:53.380Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 8388608 --connection-addr '127.0.0.1:41693' --prover`\n 2024-07-18T15:42:07.022Z INFO  dietmc_ram > prover mode\n 2024-07-18T15:42:07.022Z INFO  dietmc_ram > addr: \"127.0.0.1:41693\"\n 2024-07-18T15:42:07.022Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T15:42:07.022Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T15:42:07.557Z INFO  dietmc_ram > init time: 535.65977ms\n 2024-07-18T15:42:07.558Z INFO  dietmc_ram > run 0/1\n 2024-07-18T15:42:24.501Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T15:42:37.418Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T15:42:37.418Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 1024\n 2024-07-18T15:42:37.726Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.764Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.786Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.808Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.831Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.853Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.875Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.898Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.920Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.943Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.966Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:37.989Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.013Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.036Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.059Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.082Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.105Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.127Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.150Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.173Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:42:38.281Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:467903      czero:0          \n 2024-07-18T15:42:39.888Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2967903     czero:0          \n 2024-07-18T15:42:41.503Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5467903     czero:0          \n 2024-07-18T15:42:45.210Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7967903     czero:0          \n 2024-07-18T15:42:46.844Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10467902    czero:0          \n 2024-07-18T15:42:48.459Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12967902    czero:0          \n 2024-07-18T15:42:50.077Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15467902    czero:0          \n 2024-07-18T15:42:53.162Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > nb addc:      16779264\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > nb add:       50337792\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > nb multc:     50337792\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > nb mult:      16779262\n 2024-07-18T15:42:53.353Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                       > time ram exec: 45.795659201s\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                       > bytes sent: 412212904\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                       > bytes total: 423470152\n 2024-07-18T15:42:53.353Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.029 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.049 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4133ms\nrtt min/avg/max/mdev = 0.029/0.044/0.049/0.007 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 54164 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.45 GBytes  29.6 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  3.34 GBytes  28.7 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  3.52 GBytes  30.2 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  3.58 GBytes  30.7 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.46 GBytes  29.7 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  3.51 GBytes  30.1 Gbits/sec    0   1.19 MBytes       \n[  5]   6.00-7.00   sec  3.46 GBytes  29.7 Gbits/sec    0   1.62 MBytes       \n[  5]   7.00-8.00   sec  3.10 GBytes  26.7 Gbits/sec    0   1.62 MBytes       \n[  5]   8.00-9.00   sec  3.58 GBytes  30.7 Gbits/sec    0   1.62 MBytes       \n[  5]   9.00-10.00  sec  2.92 GBytes  25.1 Gbits/sec    0   1.62 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.3 GBytes  30.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.3 GBytes  30.3 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.055 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.050 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.052 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.048 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4127ms\nrtt min/avg/max/mdev = 0.038/0.048/0.055/0.005 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 51048 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  15.1 MBytes   127 Mbits/sec    0   1.56 MBytes       \n[  5]   1.00-2.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   2.00-3.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   3.00-4.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   4.00-5.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   5.00-6.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   6.00-7.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   7.00-8.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   8.00-9.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   9.00-10.00  sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   123 MBytes   103 Mbits/sec    0             sender\n[  5]   0.00-10.02  sec   119 MBytes  99.7 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 100
    }
}