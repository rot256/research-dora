{
    "meta": {
        "ram": true,
        "ram_size": 1048576,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1048576 --ram-steps 4194304 --connection-addr '127.0.0.1:19824'`\n 2024-07-18T14:26:34.338Z INFO  dietmc_ram > verifier mode\n 2024-07-18T14:26:34.338Z INFO  dietmc_ram > addr: \"127.0.0.1:19824\"\n 2024-07-18T14:26:34.338Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T14:26:34.338Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T14:26:34.375Z INFO  dietmc_ram > connection received\n 2024-07-18T14:26:36.607Z INFO  dietmc_ram > init time: 2.232052193s\n 2024-07-18T14:26:36.608Z INFO  dietmc_ram > run 0/1\n 2024-07-18T14:26:38.758Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.150602001s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T14:26:47.881Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T14:26:54.289Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.039633615s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T14:26:59.010Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T14:27:03.516Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T14:27:07.628Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.667Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.688Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.709Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.730Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.750Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.767Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.788Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.809Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.830Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.851Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.872Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.892Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:10.195Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.008534646s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T14:27:12.752Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:1726973     czero:0          \n 2024-07-18T14:27:16.005Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:4226973     czero:0          \n 2024-07-18T14:27:19.258Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:6726972     czero:0          \n 2024-07-18T14:27:22.511Z INFO  diet_mac_and_cheese::backend > inp:9437188     witn:4194304     mul:9226972     czero:0          \n 2024-07-18T14:27:25.668Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.023969478s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T14:27:26.621Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > nb inst:       9437188\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > nb addc:      10485760\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > nb add:       31457280\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > nb multc:     31457280\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > nb mult:      10485758\n 2024-07-18T14:27:26.668Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T14:27:26.668Z INFO  dietmc_ram                   > ram-size 1048576\n 2024-07-18T14:27:26.668Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T14:27:26.668Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T14:27:26.668Z INFO  dietmc_ram                   > time ram exec: 50.060311617s\n 2024-07-18T14:27:26.668Z INFO  dietmc_ram                   > bytes sent: 7682240\n 2024-07-18T14:27:26.668Z INFO  dietmc_ram                   > bytes recv: 250955672\n 2024-07-18T14:27:26.668Z INFO  dietmc_ram                   > bytes total: 258637912\n 2024-07-18T14:27:26.668Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1048576 --ram-steps 4194304 --connection-addr '127.0.0.1:19824' --prover`\n 2024-07-18T14:26:34.325Z INFO  dietmc_ram > prover mode\n 2024-07-18T14:26:34.325Z INFO  dietmc_ram > addr: \"127.0.0.1:19824\"\n 2024-07-18T14:26:34.325Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T14:26:34.325Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T14:26:36.622Z INFO  dietmc_ram > init time: 2.256515259s\n 2024-07-18T14:26:36.622Z INFO  dietmc_ram > run 0/1\n 2024-07-18T14:27:03.364Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T14:27:03.364Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 1048576\n 2024-07-18T14:27:07.636Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.688Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.718Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.748Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.778Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.807Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.829Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.858Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.888Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.919Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.950Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:07.981Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:08.008Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:27:12.044Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:1445567     czero:0          \n 2024-07-18T14:27:15.398Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:3945567     czero:0          \n 2024-07-18T14:27:18.751Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:6445566     czero:0          \n 2024-07-18T14:27:22.103Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:8945566     czero:0          \n 2024-07-18T14:27:26.120Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > nb addc:      10485760\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > nb add:       31457280\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > nb multc:     31457280\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > nb mult:      10485758\n 2024-07-18T14:27:26.631Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T14:27:26.631Z INFO  dietmc_ram                       > time ram exec: 50.009435564s\n 2024-07-18T14:27:26.631Z INFO  dietmc_ram                       > ram-size 1048576\n 2024-07-18T14:27:26.631Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T14:27:26.631Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T14:27:26.631Z INFO  dietmc_ram                       > bytes sent: 250955672\n 2024-07-18T14:27:26.631Z INFO  dietmc_ram                       > bytes recv: 7682240\n 2024-07-18T14:27:26.631Z INFO  dietmc_ram                       > bytes total: 258637912\n 2024-07-18T14:27:26.631Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.018 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.041 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.038 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4087ms\nrtt min/avg/max/mdev = 0.018/0.037/0.046/0.010 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 50160 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.48 GBytes  29.9 Gbits/sec    0   1.56 MBytes       \n[  5]   1.00-2.00   sec  3.36 GBytes  28.9 Gbits/sec    0   1.62 MBytes       \n[  5]   2.00-3.00   sec  3.29 GBytes  28.3 Gbits/sec    0   1.62 MBytes       \n[  5]   3.00-4.00   sec  3.35 GBytes  28.8 Gbits/sec    8   2.50 MBytes       \n[  5]   4.00-5.00   sec  2.91 GBytes  25.0 Gbits/sec    0   2.50 MBytes       \n[  5]   5.00-6.00   sec  3.11 GBytes  26.7 Gbits/sec    0   2.50 MBytes       \n[  5]   6.00-7.00   sec  3.51 GBytes  30.2 Gbits/sec    0   2.50 MBytes       \n[  5]   7.00-8.00   sec  3.00 GBytes  25.8 Gbits/sec    0   3.81 MBytes       \n[  5]   8.00-9.00   sec  3.25 GBytes  27.9 Gbits/sec    0   3.81 MBytes       \n[  5]   9.00-10.00  sec  3.05 GBytes  26.2 Gbits/sec    0   3.81 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  34.5 GBytes  29.7 Gbits/sec    8             sender\n[  5]   0.00-10.00  sec  34.5 GBytes  29.7 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.0 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.2 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.049/20.184/20.230/0.068 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 56002 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  7.12 MBytes  59.7 Mbits/sec    0   1.94 MBytes       \n[  5]   1.00-2.00   sec  5.88 MBytes  49.3 Mbits/sec    0   2.25 MBytes       \n[  5]   2.00-3.00   sec  6.12 MBytes  51.4 Mbits/sec    0   2.56 MBytes       \n[  5]   3.00-4.00   sec  6.25 MBytes  52.4 Mbits/sec    0   2.87 MBytes       \n[  5]   4.00-5.00   sec  5.38 MBytes  45.1 Mbits/sec    0   3.68 MBytes       \n[  5]   5.00-6.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.81 MBytes       \n[  5]   6.00-7.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.81 MBytes       \n[  5]   7.00-8.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.81 MBytes       \n[  5]   8.00-9.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.81 MBytes       \n[  5]   9.00-10.00  sec  4.00 MBytes  33.5 Mbits/sec    0   4.81 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  58.8 MBytes  49.3 Mbits/sec    0             sender\n[  5]   0.00-10.08  sec  58.8 MBytes  48.9 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 10,
        "mbits": 50
    }
}