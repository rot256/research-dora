{
    "meta": {
        "ram": true,
        "ram_size": 16384,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 8388608 --connection-addr '127.0.0.1:45702'`\n 2024-07-18T17:54:23.678Z INFO  dietmc_ram > verifier mode\n 2024-07-18T17:54:23.678Z INFO  dietmc_ram > addr: \"127.0.0.1:45702\"\n 2024-07-18T17:54:23.678Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T17:54:23.678Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T17:54:23.715Z INFO  dietmc_ram > connection received\n 2024-07-18T17:54:25.184Z INFO  dietmc_ram > init time: 1.469430313s\n 2024-07-18T17:54:25.184Z INFO  dietmc_ram > run 0/1\n 2024-07-18T17:54:26.972Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:1.787924403s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:54:28.954Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T17:54:31.531Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.718861832s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:54:32.685Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T17:54:34.296Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T17:54:36.056Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.686230896s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:54:38.084Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T17:54:40.681Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.71086259s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:54:41.909Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T17:54:41.958Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T17:54:41.984Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:41.997Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.010Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.023Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.036Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.049Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.062Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.075Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.088Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.101Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.114Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.128Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.141Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.154Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.167Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.180Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.193Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.206Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.219Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.232Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.723Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:1978941     czero:0          \n 2024-07-18T17:54:42.929Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:4478941     czero:0          \n 2024-07-18T17:54:44.826Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.661172476s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:54:45.331Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:6978941     czero:0          \n 2024-07-18T17:54:45.539Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:9478940     czero:0          \n 2024-07-18T17:54:45.751Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:11978940    czero:0          \n 2024-07-18T17:54:45.962Z INFO  diet_mac_and_cheese::backend > inp:16793604    witn:8388608     mul:14478940    czero:0          \n 2024-07-18T17:54:47.930Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.72795609s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:54:48.400Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > nb inst:      16793604\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > nb addc:      16809984\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > nb add:       50429952\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > nb multc:     50429952\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > nb mult:      16809982\n 2024-07-18T17:54:48.433Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T17:54:48.433Z INFO  dietmc_ram                   > ram-size 16384\n 2024-07-18T17:54:48.433Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T17:54:48.433Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T17:54:48.433Z INFO  dietmc_ram                   > time ram exec: 23.248755696s\n 2024-07-18T17:54:48.433Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T17:54:48.433Z INFO  dietmc_ram                   > bytes recv: 412827304\n 2024-07-18T17:54:48.433Z INFO  dietmc_ram                   > bytes total: 424084552\n 2024-07-18T17:54:48.433Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 8388608 --connection-addr '127.0.0.1:45702' --prover`\n 2024-07-18T17:54:23.665Z INFO  dietmc_ram > prover mode\n 2024-07-18T17:54:23.665Z INFO  dietmc_ram > addr: \"127.0.0.1:45702\"\n 2024-07-18T17:54:23.665Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T17:54:23.665Z INFO  dietmc_ram > time reading ins/wit/rel: 31ns\n 2024-07-18T17:54:25.198Z INFO  dietmc_ram > init time: 1.493083245s\n 2024-07-18T17:54:25.198Z INFO  dietmc_ram > run 0/1\n 2024-07-18T17:54:34.284Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T17:54:41.946Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T17:54:41.946Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 16384\n 2024-07-18T17:54:41.989Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.012Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.034Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.057Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.080Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.102Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.125Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.147Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.170Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.193Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.215Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.238Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.262Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.286Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.309Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.332Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.355Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.378Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.400Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.423Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:54:42.533Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:375743      czero:0          \n 2024-07-18T17:54:42.772Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2875743     czero:0          \n 2024-07-18T17:54:42.987Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5375743     czero:0          \n 2024-07-18T17:54:45.389Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7875743     czero:0          \n 2024-07-18T17:54:45.595Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10375742    czero:0          \n 2024-07-18T17:54:45.809Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12875742    czero:0          \n 2024-07-18T17:54:46.024Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15375742    czero:0          \n 2024-07-18T17:54:48.345Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > nb addc:      16809984\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > nb add:       50429952\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > nb multc:     50429952\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > nb mult:      16809982\n 2024-07-18T17:54:48.410Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T17:54:48.410Z INFO  dietmc_ram                       > time ram exec: 23.212234132s\n 2024-07-18T17:54:48.410Z INFO  dietmc_ram                       > ram-size 16384\n 2024-07-18T17:54:48.410Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T17:54:48.410Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T17:54:48.410Z INFO  dietmc_ram                       > bytes sent: 412827304\n 2024-07-18T17:54:48.410Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T17:54:48.410Z INFO  dietmc_ram                       > bytes total: 424084552\n 2024-07-18T17:54:48.410Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.031 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.052 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.048 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4088ms\nrtt min/avg/max/mdev = 0.031/0.045/0.052/0.007 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 43370 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.54 GBytes  30.4 Gbits/sec    0   1.94 MBytes       \n[  5]   1.00-2.00   sec  3.44 GBytes  29.6 Gbits/sec    0   1.94 MBytes       \n[  5]   2.00-3.00   sec  3.49 GBytes  30.0 Gbits/sec    0   1.94 MBytes       \n[  5]   3.00-4.00   sec  3.68 GBytes  31.6 Gbits/sec    0   1.94 MBytes       \n[  5]   4.00-5.00   sec  3.78 GBytes  32.5 Gbits/sec    0   1.94 MBytes       \n[  5]   5.00-6.00   sec  3.60 GBytes  30.9 Gbits/sec    0   1.94 MBytes       \n[  5]   6.00-7.00   sec  3.57 GBytes  30.7 Gbits/sec    0   1.94 MBytes       \n[  5]   7.00-8.00   sec  3.56 GBytes  30.6 Gbits/sec    0   1.94 MBytes       \n[  5]   8.00-9.00   sec  3.45 GBytes  29.6 Gbits/sec    0   1.94 MBytes       \n[  5]   9.00-10.00  sec  3.69 GBytes  31.7 Gbits/sec    0   1.94 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.1 GBytes  31.8 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.1 GBytes  31.8 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.2 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.052/20.184/20.244/0.067 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 53766 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  77.1 MBytes   646 Mbits/sec    0   9.05 MBytes       \n[  5]   1.00-2.00   sec  82.2 MBytes   691 Mbits/sec    0   9.05 MBytes       \n[  5]   2.00-3.00   sec  85.1 MBytes   713 Mbits/sec    0   9.05 MBytes       \n[  5]   3.00-4.00   sec  82.2 MBytes   690 Mbits/sec    0   9.05 MBytes       \n[  5]   4.00-5.00   sec  82.2 MBytes   690 Mbits/sec    0   9.05 MBytes       \n[  5]   5.00-6.00   sec  85.2 MBytes   715 Mbits/sec    0   9.05 MBytes       \n[  5]   6.00-7.00   sec  82.2 MBytes   690 Mbits/sec    0   9.05 MBytes       \n[  5]   7.00-8.00   sec  82.2 MBytes   690 Mbits/sec    0   9.05 MBytes       \n[  5]   8.00-9.00   sec  84.6 MBytes   710 Mbits/sec    0   9.05 MBytes       \n[  5]   9.00-10.00  sec  81.5 MBytes   683 Mbits/sec    0   9.05 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   825 MBytes   692 Mbits/sec    0             sender\n[  5]   0.00-10.02  sec   825 MBytes   690 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 10,
        "mbits": 1000
    }
}