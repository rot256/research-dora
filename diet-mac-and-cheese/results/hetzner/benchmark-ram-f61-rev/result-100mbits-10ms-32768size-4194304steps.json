{
    "meta": {
        "ram": true,
        "ram_size": 32768,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 4194304 --connection-addr '127.0.0.1:13577'`\n 2024-07-18T16:26:37.346Z INFO  dietmc_ram > verifier mode\n 2024-07-18T16:26:37.346Z INFO  dietmc_ram > addr: \"127.0.0.1:13577\"\n 2024-07-18T16:26:37.346Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:26:37.346Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T16:26:37.390Z INFO  dietmc_ram > connection received\n 2024-07-18T16:26:38.727Z INFO  dietmc_ram > init time: 1.337213899s\n 2024-07-18T16:26:38.727Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:26:40.680Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:1.952690193s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:26:45.541Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T16:26:49.597Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.839836543s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:26:52.242Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T16:26:54.527Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T16:26:54.606Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.629Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.643Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.657Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.671Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.685Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.700Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.714Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.728Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.742Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:55.469Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:829725      czero:0          \n 2024-07-18T16:26:58.936Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.845167595s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:26:59.495Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:3329725     czero:0          \n 2024-07-18T16:27:01.160Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:5829724     czero:0          \n 2024-07-18T16:27:02.808Z INFO  diet_mac_and_cheese::backend > inp:8421380     witn:4194304     mul:8329724     czero:0          \n 2024-07-18T16:27:02.918Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > nb inst:       8421380\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > nb addc:       8454144\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > nb add:       25362432\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > nb multc:     25362432\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > nb mult:       8454142\n 2024-07-18T16:27:02.965Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T16:27:02.965Z INFO  dietmc_ram                   > ram-size 32768\n 2024-07-18T16:27:02.965Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T16:27:02.965Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T16:27:02.965Z INFO  dietmc_ram                   > time ram exec: 24.237406377s\n 2024-07-18T16:27:02.965Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T16:27:02.965Z INFO  dietmc_ram                   > bytes recv: 209406992\n 2024-07-18T16:27:02.965Z INFO  dietmc_ram                   > bytes total: 215301728\n 2024-07-18T16:27:02.965Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 4194304 --connection-addr '127.0.0.1:13577' --prover`\n 2024-07-18T16:26:37.360Z INFO  dietmc_ram > prover mode\n 2024-07-18T16:26:37.360Z INFO  dietmc_ram > addr: \"127.0.0.1:13577\"\n 2024-07-18T16:26:37.360Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:26:37.360Z INFO  dietmc_ram > time reading ins/wit/rel: 20ns\n 2024-07-18T16:26:38.741Z INFO  dietmc_ram > init time: 1.36046028s\n 2024-07-18T16:26:38.741Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:26:54.329Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T16:26:54.329Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 32768\n 2024-07-18T16:26:54.610Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.660Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.683Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.707Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.730Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.754Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.779Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.803Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.826Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.850Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:26:54.915Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:40415       czero:0          \n 2024-07-18T16:26:56.316Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2540415     czero:0          \n 2024-07-18T16:27:00.448Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5040414     czero:0          \n 2024-07-18T16:27:02.149Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7540414     czero:0          \n 2024-07-18T16:27:02.847Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > nb addc:       8454144\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > nb add:       25362432\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > nb multc:     25362432\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > nb mult:       8454142\n 2024-07-18T16:27:02.928Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T16:27:02.928Z INFO  dietmc_ram                       > time ram exec: 24.18784364s\n 2024-07-18T16:27:02.928Z INFO  dietmc_ram                       > ram-size 32768\n 2024-07-18T16:27:02.928Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T16:27:02.928Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T16:27:02.928Z INFO  dietmc_ram                       > bytes sent: 209406992\n 2024-07-18T16:27:02.928Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T16:27:02.928Z INFO  dietmc_ram                       > bytes total: 215301728\n 2024-07-18T16:27:02.928Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.027 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.045 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.042 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.043 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.041 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4121ms\nrtt min/avg/max/mdev = 0.027/0.039/0.045/0.006 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42104 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.64 GBytes  31.3 Gbits/sec    0   1.44 MBytes       \n[  5]   1.00-2.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.44 MBytes       \n[  5]   2.00-3.00   sec  3.76 GBytes  32.3 Gbits/sec    0   1.44 MBytes       \n[  5]   3.00-4.00   sec  3.72 GBytes  32.0 Gbits/sec    0   1.44 MBytes       \n[  5]   4.00-5.00   sec  3.02 GBytes  26.0 Gbits/sec    0   1.44 MBytes       \n[  5]   5.00-6.00   sec  3.71 GBytes  31.9 Gbits/sec    0   1.44 MBytes       \n[  5]   6.00-7.00   sec  3.65 GBytes  31.4 Gbits/sec    0   1.44 MBytes       \n[  5]   7.00-8.00   sec  3.76 GBytes  32.3 Gbits/sec    0   1.44 MBytes       \n[  5]   8.00-9.00   sec  3.76 GBytes  32.3 Gbits/sec    0   1.44 MBytes       \n[  5]   9.00-10.00  sec  3.34 GBytes  28.6 Gbits/sec    0   1.44 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.5 GBytes  32.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.5 GBytes  32.2 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.2 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.052/20.137/20.190/0.051 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 47346 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  12.9 MBytes   108 Mbits/sec    0   2.25 MBytes       \n[  5]   1.00-2.00   sec  12.4 MBytes   104 Mbits/sec    0   2.87 MBytes       \n[  5]   2.00-3.00   sec  12.2 MBytes   103 Mbits/sec    0   3.43 MBytes       \n[  5]   3.00-4.00   sec  10.8 MBytes  90.2 Mbits/sec    0   4.00 MBytes       \n[  5]   4.00-5.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   5.00-6.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   6.00-7.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   7.00-8.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   8.00-9.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   9.00-10.00  sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   118 MBytes  99.0 Mbits/sec    0             sender\n[  5]   0.00-10.27  sec   118 MBytes  96.4 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 10,
        "mbits": 100
    }
}