{
    "meta": {
        "ram": true,
        "ram_size": 262144,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.12s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 262144 --ram-steps 8388608 --connection-addr '127.0.0.1:28109'`\n 2024-07-18T15:22:54.260Z INFO  dietmc_ram > verifier mode\n 2024-07-18T15:22:54.260Z INFO  dietmc_ram > addr: \"127.0.0.1:28109\"\n 2024-07-18T15:22:54.260Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T15:22:54.260Z INFO  dietmc_ram > time reading ins/wit/rel: 20ns\n 2024-07-18T15:22:54.547Z INFO  dietmc_ram > connection received\n 2024-07-18T15:23:02.833Z INFO  dietmc_ram > init time: 8.285707689s\n 2024-07-18T15:23:02.833Z INFO  dietmc_ram > run 0/1\n 2024-07-18T15:23:06.120Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.286623042s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:23:16.721Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T15:23:24.685Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.903622628s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:23:30.315Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T15:23:40.210Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T15:23:43.102Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.867388862s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:23:53.675Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T15:24:01.720Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.922350854s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:24:07.214Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T15:24:07.497Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T15:24:08.911Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:08.936Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:08.958Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:08.981Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.004Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.027Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.049Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.072Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.097Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.119Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.141Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.164Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.186Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.209Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.232Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.255Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.277Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.300Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.323Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.346Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:10.313Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:381501      czero:0          \n 2024-07-18T15:24:14.116Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:2881501     czero:0          \n 2024-07-18T15:24:17.819Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:5381501     czero:0          \n 2024-07-18T15:24:21.215Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.901529774s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:24:25.066Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:7881501     czero:0          \n 2024-07-18T15:24:28.769Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:10381500    czero:0          \n 2024-07-18T15:24:32.572Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:12881500    czero:0          \n 2024-07-18T15:24:36.285Z INFO  diet_mac_and_cheese::backend > inp:17039364    witn:8388608     mul:15381500    czero:0          \n 2024-07-18T15:24:39.657Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.878180918s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:24:42.841Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > nb inst:      17039364\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > nb addc:      17301504\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > nb add:       51904512\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > nb multc:     51904512\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > nb mult:      17301502\n 2024-07-18T15:24:43.068Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T15:24:43.068Z INFO  dietmc_ram                   > ram-size 262144\n 2024-07-18T15:24:43.068Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T15:24:43.068Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T15:24:43.068Z INFO  dietmc_ram                   > time ram exec: 100.234691241s\n 2024-07-18T15:24:43.068Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T15:24:43.068Z INFO  dietmc_ram                   > bytes recv: 422657704\n 2024-07-18T15:24:43.068Z INFO  dietmc_ram                   > bytes total: 433914952\n 2024-07-18T15:24:43.068Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 262144 --ram-steps 8388608 --connection-addr '127.0.0.1:28109' --prover`\n 2024-07-18T15:22:54.247Z INFO  dietmc_ram > prover mode\n 2024-07-18T15:22:54.247Z INFO  dietmc_ram > addr: \"127.0.0.1:28109\"\n 2024-07-18T15:22:54.247Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T15:22:54.247Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T15:23:02.939Z INFO  dietmc_ram > init time: 8.492282032s\n 2024-07-18T15:23:02.939Z INFO  dietmc_ram > run 0/1\n 2024-07-18T15:23:40.056Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T15:24:07.157Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T15:24:07.157Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 262144\n 2024-07-18T15:24:08.987Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.034Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.065Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.099Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.130Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.161Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.193Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.224Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.256Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.287Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.316Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.347Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.379Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.411Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.443Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.475Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.507Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.539Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.571Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.603Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:09.635Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:24:11.815Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:1401183     czero:0          \n 2024-07-18T15:24:15.318Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:3901183     czero:0          \n 2024-07-18T15:24:22.682Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:6401183     czero:0          \n 2024-07-18T15:24:26.108Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:8901182     czero:0          \n 2024-07-18T15:24:30.281Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:11401182    czero:0          \n 2024-07-18T15:24:33.784Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:13901182    czero:0          \n 2024-07-18T15:24:41.132Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:16401182    czero:0          \n 2024-07-18T15:24:42.568Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > nb addc:      17301504\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > nb add:       51904512\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > nb multc:     51904512\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > nb mult:      17301502\n 2024-07-18T15:24:42.941Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T15:24:42.941Z INFO  dietmc_ram                       > time ram exec: 100.001717461s\n 2024-07-18T15:24:42.941Z INFO  dietmc_ram                       > ram-size 262144\n 2024-07-18T15:24:42.941Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T15:24:42.941Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T15:24:42.941Z INFO  dietmc_ram                       > bytes sent: 422657704\n 2024-07-18T15:24:42.941Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T15:24:42.941Z INFO  dietmc_ram                       > bytes total: 433914952\n 2024-07-18T15:24:42.941Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.029 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.057 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.057 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.055 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4122ms\nrtt min/avg/max/mdev = 0.029/0.049/0.057/0.010 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 55968 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.63 GBytes  31.2 Gbits/sec    0   1.06 MBytes       \n[  5]   1.00-2.00   sec  3.68 GBytes  31.6 Gbits/sec    0   1.06 MBytes       \n[  5]   2.00-3.00   sec  3.75 GBytes  32.2 Gbits/sec    0   1.06 MBytes       \n[  5]   3.00-4.00   sec  3.72 GBytes  32.0 Gbits/sec    0   1.06 MBytes       \n[  5]   4.00-5.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   5.00-6.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   6.00-7.00   sec  3.71 GBytes  31.9 Gbits/sec    0   1.69 MBytes       \n[  5]   7.00-8.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   8.00-9.00   sec  3.55 GBytes  30.5 Gbits/sec    0   2.50 MBytes       \n[  5]   9.00-10.00  sec  3.84 GBytes  33.0 Gbits/sec    0   2.50 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.6 GBytes  32.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.6 GBytes  32.3 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4006ms\nrtt min/avg/max/mdev = 200.179/200.221/200.265/0.029 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 36846 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  2.62 MBytes  22.0 Mbits/sec    0   5.06 MBytes       \n[  5]   2.00-3.00   sec  6.88 MBytes  57.7 Mbits/sec    0   5.18 MBytes       \n[  5]   3.00-4.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   4.00-5.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   5.00-6.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   6.00-7.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   7.00-8.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   8.00-9.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   9.00-10.00  sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  47.0 MBytes  39.4 Mbits/sec    0             sender\n[  5]   0.00-10.41  sec  47.0 MBytes  37.9 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 100,
        "mbits": 50
    }
}