{
    "meta": {
        "ram": true,
        "ram_size": 16384,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.15s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 4194304 --connection-addr '127.0.0.1:39254'`\n 2024-07-18T13:57:22.229Z INFO  dietmc_ram > verifier mode\n 2024-07-18T13:57:22.229Z INFO  dietmc_ram > addr: \"127.0.0.1:39254\"\n 2024-07-18T13:57:22.229Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T13:57:22.229Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T13:57:22.265Z INFO  dietmc_ram > connection received\n 2024-07-18T13:57:23.900Z INFO  dietmc_ram > init time: 1.634416887s\n 2024-07-18T13:57:23.900Z INFO  dietmc_ram > run 0/1\n 2024-07-18T13:57:26.080Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.180579457s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T13:57:35.205Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T13:57:41.666Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.099981771s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T13:57:46.336Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T13:57:50.840Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T13:57:50.926Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:50.960Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:50.982Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.003Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.025Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.047Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.068Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.090Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.112Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.134Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:52.526Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:936221      czero:0          \n 2024-07-18T13:57:57.497Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.026237117s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T13:57:58.277Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:3436221     czero:0          \n 2024-07-18T13:58:01.520Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:5936220     czero:0          \n 2024-07-18T13:58:04.805Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > nb inst:       8404996\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > nb addc:       8421376\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > nb add:       25264128\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > nb multc:     25264128\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > nb mult:       8421374\n 2024-07-18T13:58:04.854Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T13:58:04.854Z INFO  dietmc_ram                   > ram-size 16384\n 2024-07-18T13:58:04.854Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T13:58:04.854Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T13:58:04.854Z INFO  dietmc_ram                   > time ram exec: 40.954005464s\n 2024-07-18T13:58:04.854Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T13:58:04.854Z INFO  dietmc_ram                   > bytes recv: 208751632\n 2024-07-18T13:58:04.854Z INFO  dietmc_ram                   > bytes total: 214646368\n 2024-07-18T13:58:04.854Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 4194304 --connection-addr '127.0.0.1:39254' --prover`\n 2024-07-18T13:57:22.215Z INFO  dietmc_ram > prover mode\n 2024-07-18T13:57:22.215Z INFO  dietmc_ram > addr: \"127.0.0.1:39254\"\n 2024-07-18T13:57:22.215Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T13:57:22.215Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T13:57:23.933Z INFO  dietmc_ram > init time: 1.678377711s\n 2024-07-18T13:57:23.934Z INFO  dietmc_ram > run 0/1\n 2024-07-18T13:57:50.404Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T13:57:50.404Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 16384\n 2024-07-18T13:57:50.934Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:50.988Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.019Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.049Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.080Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.110Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.141Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.173Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.204Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.235Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T13:57:51.308Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:138719      czero:0          \n 2024-07-18T13:57:54.680Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2638719     czero:0          \n 2024-07-18T13:58:00.060Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5138718     czero:0          \n 2024-07-18T13:58:03.416Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7638718     czero:0          \n 2024-07-18T13:58:04.765Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > nb addc:       8421376\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > nb add:       25264128\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > nb multc:     25264128\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > nb mult:       8421374\n 2024-07-18T13:58:04.816Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T13:58:04.816Z INFO  dietmc_ram                       > time ram exec: 40.882175636s\n 2024-07-18T13:58:04.816Z INFO  dietmc_ram                       > ram-size 16384\n 2024-07-18T13:58:04.816Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T13:58:04.816Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T13:58:04.816Z INFO  dietmc_ram                       > bytes sent: 208751632\n 2024-07-18T13:58:04.816Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T13:58:04.816Z INFO  dietmc_ram                       > bytes total: 214646368\n 2024-07-18T13:58:04.816Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.018 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.041 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.038 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4087ms\nrtt min/avg/max/mdev = 0.018/0.037/0.046/0.010 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 50160 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.48 GBytes  29.9 Gbits/sec    0   1.56 MBytes       \n[  5]   1.00-2.00   sec  3.36 GBytes  28.9 Gbits/sec    0   1.62 MBytes       \n[  5]   2.00-3.00   sec  3.29 GBytes  28.3 Gbits/sec    0   1.62 MBytes       \n[  5]   3.00-4.00   sec  3.35 GBytes  28.8 Gbits/sec    8   2.50 MBytes       \n[  5]   4.00-5.00   sec  2.91 GBytes  25.0 Gbits/sec    0   2.50 MBytes       \n[  5]   5.00-6.00   sec  3.11 GBytes  26.7 Gbits/sec    0   2.50 MBytes       \n[  5]   6.00-7.00   sec  3.51 GBytes  30.2 Gbits/sec    0   2.50 MBytes       \n[  5]   7.00-8.00   sec  3.00 GBytes  25.8 Gbits/sec    0   3.81 MBytes       \n[  5]   8.00-9.00   sec  3.25 GBytes  27.9 Gbits/sec    0   3.81 MBytes       \n[  5]   9.00-10.00  sec  3.05 GBytes  26.2 Gbits/sec    0   3.81 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  34.5 GBytes  29.7 Gbits/sec    8             sender\n[  5]   0.00-10.00  sec  34.5 GBytes  29.7 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.0 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.2 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.049/20.184/20.230/0.068 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 56002 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  7.12 MBytes  59.7 Mbits/sec    0   1.94 MBytes       \n[  5]   1.00-2.00   sec  5.88 MBytes  49.3 Mbits/sec    0   2.25 MBytes       \n[  5]   2.00-3.00   sec  6.12 MBytes  51.4 Mbits/sec    0   2.56 MBytes       \n[  5]   3.00-4.00   sec  6.25 MBytes  52.4 Mbits/sec    0   2.87 MBytes       \n[  5]   4.00-5.00   sec  5.38 MBytes  45.1 Mbits/sec    0   3.68 MBytes       \n[  5]   5.00-6.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.81 MBytes       \n[  5]   6.00-7.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.81 MBytes       \n[  5]   7.00-8.00   sec  4.00 MBytes  33.6 Mbits/sec    0   4.81 MBytes       \n[  5]   8.00-9.00   sec  8.00 MBytes  67.1 Mbits/sec    0   4.81 MBytes       \n[  5]   9.00-10.00  sec  4.00 MBytes  33.5 Mbits/sec    0   4.81 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  58.8 MBytes  49.3 Mbits/sec    0             sender\n[  5]   0.00-10.08  sec  58.8 MBytes  48.9 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 10,
        "mbits": 50
    }
}