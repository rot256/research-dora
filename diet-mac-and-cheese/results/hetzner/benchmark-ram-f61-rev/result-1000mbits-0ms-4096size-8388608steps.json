{
    "meta": {
        "ram": true,
        "ram_size": 4096,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.16s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 8388608 --connection-addr '127.0.0.1:43317'`\n 2024-07-18T17:36:03.337Z INFO  dietmc_ram > verifier mode\n 2024-07-18T17:36:03.337Z INFO  dietmc_ram > addr: \"127.0.0.1:43317\"\n 2024-07-18T17:36:03.337Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T17:36:03.337Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T17:36:03.337Z INFO  dietmc_ram > connection received\n 2024-07-18T17:36:03.542Z INFO  dietmc_ram > init time: 205.343606ms\n 2024-07-18T17:36:03.542Z INFO  dietmc_ram > run 0/1\n 2024-07-18T17:36:05.186Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:1.643676723s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:36:07.015Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T17:36:09.407Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.575934098s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:36:10.515Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T17:36:12.087Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T17:36:13.709Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.548403594s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:36:15.666Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T17:36:18.097Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.568162763s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:36:19.320Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T17:36:19.368Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T17:36:19.381Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.394Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.406Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.419Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.432Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.445Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.457Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.470Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.483Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.495Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.508Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.521Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.534Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.546Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.559Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.572Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.584Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.597Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.610Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.623Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:20.032Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:2058813     czero:0          \n 2024-07-18T17:36:20.192Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:4558813     czero:0          \n 2024-07-18T17:36:21.924Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.555868617s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:36:22.374Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:7058813     czero:0          \n 2024-07-18T17:36:22.534Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:9558812     czero:0          \n 2024-07-18T17:36:22.694Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:12058812    czero:0          \n 2024-07-18T17:36:22.854Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:14558812    czero:0          \n 2024-07-18T17:36:24.592Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.558725271s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > nb inst:      16781316\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > nb addc:      16785408\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > nb add:       50356224\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > nb multc:     50356224\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > nb mult:      16785406\n 2024-07-18T17:36:25.091Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T17:36:25.091Z INFO  dietmc_ram                   > ram-size 4096\n 2024-07-18T17:36:25.091Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T17:36:25.091Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T17:36:25.091Z INFO  dietmc_ram                   > time ram exec: 21.5481938s\n 2024-07-18T17:36:25.091Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T17:36:25.091Z INFO  dietmc_ram                   > bytes recv: 412335784\n 2024-07-18T17:36:25.091Z INFO  dietmc_ram                   > bytes total: 423593032\n 2024-07-18T17:36:25.091Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 8388608 --connection-addr '127.0.0.1:43317' --prover`\n 2024-07-18T17:36:03.319Z INFO  dietmc_ram > prover mode\n 2024-07-18T17:36:03.319Z INFO  dietmc_ram > addr: \"127.0.0.1:43317\"\n 2024-07-18T17:36:03.319Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T17:36:03.319Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T17:36:03.545Z INFO  dietmc_ram > init time: 207.984054ms\n 2024-07-18T17:36:03.545Z INFO  dietmc_ram > run 0/1\n 2024-07-18T17:36:12.085Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T17:36:19.366Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T17:36:19.366Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 4096\n 2024-07-18T17:36:19.376Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.398Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.421Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.443Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.465Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.487Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.509Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.532Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.554Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.576Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.598Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.620Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.644Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.667Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.690Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.713Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.736Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.758Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.780Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.803Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T17:36:19.908Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:449471      czero:0          \n 2024-07-18T17:36:20.065Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2949471     czero:0          \n 2024-07-18T17:36:20.225Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5449471     czero:0          \n 2024-07-18T17:36:22.402Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7949471     czero:0          \n 2024-07-18T17:36:22.569Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10449470    czero:0          \n 2024-07-18T17:36:22.725Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12949470    czero:0          \n 2024-07-18T17:36:22.887Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15449470    czero:0          \n 2024-07-18T17:36:25.025Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > nb addc:      16785408\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > nb add:       50356224\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > nb multc:     50356224\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > nb mult:      16785406\n 2024-07-18T17:36:25.078Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                       > time ram exec: 21.533205457s\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                       > ram-size 4096\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                       > bytes sent: 412335784\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                       > bytes total: 423593032\n 2024-07-18T17:36:25.078Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.031 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.045 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.046 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4074ms\nrtt min/avg/max/mdev = 0.031/0.043/0.048/0.006 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 40650 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.42 GBytes  29.3 Gbits/sec    0   4.12 MBytes       \n[  5]   1.00-2.00   sec  3.48 GBytes  29.9 Gbits/sec    0   4.12 MBytes       \n[  5]   2.00-3.00   sec  3.29 GBytes  28.2 Gbits/sec    0   4.12 MBytes       \n[  5]   3.00-4.00   sec  3.34 GBytes  28.7 Gbits/sec    0   4.12 MBytes       \n[  5]   4.00-5.00   sec  3.51 GBytes  30.1 Gbits/sec    0   4.12 MBytes       \n[  5]   5.00-6.00   sec  3.53 GBytes  30.3 Gbits/sec    0   4.12 MBytes       \n[  5]   6.00-7.00   sec  3.43 GBytes  29.4 Gbits/sec    0   4.12 MBytes       \n[  5]   7.00-8.00   sec  2.75 GBytes  23.6 Gbits/sec    0   4.12 MBytes       \n[  5]   8.00-9.00   sec  3.48 GBytes  29.9 Gbits/sec    0   4.12 MBytes       \n[  5]   9.00-10.00  sec  3.49 GBytes  30.0 Gbits/sec    0   4.12 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  34.6 GBytes  29.7 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  34.6 GBytes  29.7 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.032 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.054 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.049 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.053 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.052 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4076ms\nrtt min/avg/max/mdev = 0.032/0.048/0.054/0.008 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 47114 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec   120 MBytes  1.00 Gbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec   116 MBytes   974 Mbits/sec    0   1.37 MBytes       \n[  5]   2.00-3.00   sec   116 MBytes   973 Mbits/sec    0   1.37 MBytes       \n[  5]   3.00-4.00   sec   118 MBytes   986 Mbits/sec    0   1.37 MBytes       \n[  5]   4.00-5.00   sec   117 MBytes   985 Mbits/sec    0   1.37 MBytes       \n[  5]   5.00-6.00   sec   118 MBytes   986 Mbits/sec    0   1.37 MBytes       \n[  5]   6.00-7.00   sec   118 MBytes   986 Mbits/sec    0   1.37 MBytes       \n[  5]   7.00-8.00   sec   117 MBytes   985 Mbits/sec    0   1.37 MBytes       \n[  5]   8.00-9.00   sec   118 MBytes   986 Mbits/sec    0   1.37 MBytes       \n[  5]   9.00-10.00  sec   118 MBytes   985 Mbits/sec    0   1.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  1.15 GBytes   985 Mbits/sec    0             sender\n[  5]   0.00-10.00  sec  1.14 GBytes   982 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 1000
    }
}