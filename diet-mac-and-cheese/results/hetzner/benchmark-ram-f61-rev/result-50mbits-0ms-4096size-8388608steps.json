{
    "meta": {
        "ram": true,
        "ram_size": 4096,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 8388608 --connection-addr '127.0.0.1:14332'`\n 2024-07-18T12:55:39.847Z INFO  dietmc_ram > verifier mode\n 2024-07-18T12:55:39.847Z INFO  dietmc_ram > addr: \"127.0.0.1:14332\"\n 2024-07-18T12:55:39.847Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T12:55:39.847Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T12:55:39.847Z INFO  dietmc_ram > connection received\n 2024-07-18T12:55:40.751Z INFO  dietmc_ram > init time: 903.933724ms\n 2024-07-18T12:55:40.751Z INFO  dietmc_ram > run 0/1\n 2024-07-18T12:55:42.808Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.057315173s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:55:51.808Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T12:55:58.033Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.943652144s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:56:02.675Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T12:56:11.219Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T12:56:13.151Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.914947385s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:56:22.101Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T12:56:28.342Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.947730693s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:56:32.967Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T12:56:33.251Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T12:56:33.306Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.342Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.363Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.384Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.406Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.427Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.448Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.469Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.491Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.512Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.533Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.554Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.576Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.597Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.618Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.639Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.660Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.682Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.703Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.724Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:36.627Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:2058813     czero:0          \n 2024-07-18T12:56:39.828Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:4558813     czero:0          \n 2024-07-18T12:56:44.182Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.920436585s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:56:45.377Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:7058813     czero:0          \n 2024-07-18T12:56:48.587Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:9558812     czero:0          \n 2024-07-18T12:56:51.788Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:12058812    czero:0          \n 2024-07-18T12:56:54.989Z INFO  diet_mac_and_cheese::backend > inp:16781316    witn:8388608     mul:14558812    czero:0          \n 2024-07-18T12:56:59.365Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.931906683s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:57:00.215Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > nb inst:      16781316\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > nb addc:      16785408\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > nb add:       50356224\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > nb multc:     50356224\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > nb mult:      16785406\n 2024-07-18T12:57:00.243Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T12:57:00.243Z INFO  dietmc_ram                   > ram-size 4096\n 2024-07-18T12:57:00.243Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T12:57:00.243Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T12:57:00.243Z INFO  dietmc_ram                   > time ram exec: 79.491841713s\n 2024-07-18T12:57:00.243Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T12:57:00.243Z INFO  dietmc_ram                   > bytes recv: 412335784\n 2024-07-18T12:57:00.243Z INFO  dietmc_ram                   > bytes total: 423593032\n 2024-07-18T12:57:00.243Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 8388608 --connection-addr '127.0.0.1:14332' --prover`\n 2024-07-18T12:55:39.834Z INFO  dietmc_ram > prover mode\n 2024-07-18T12:55:39.834Z INFO  dietmc_ram > addr: \"127.0.0.1:14332\"\n 2024-07-18T12:55:39.834Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T12:55:39.834Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T12:55:40.754Z INFO  dietmc_ram > init time: 906.57332ms\n 2024-07-18T12:55:40.754Z INFO  dietmc_ram > run 0/1\n 2024-07-18T12:56:10.727Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T12:56:32.788Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T12:56:32.788Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 4096\n 2024-07-18T12:56:33.293Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.340Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.370Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.400Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.430Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.460Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.490Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.520Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.551Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.581Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.611Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.641Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.671Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.702Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.732Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.763Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.794Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.825Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.856Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:33.887Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T12:56:34.003Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:449471      czero:0          \n 2024-07-18T12:56:37.261Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2949471     czero:0          \n 2024-07-18T12:56:40.492Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5449471     czero:0          \n 2024-07-18T12:56:45.870Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7949471     czero:0          \n 2024-07-18T12:56:49.141Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10449470    czero:0          \n 2024-07-18T12:56:52.412Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12949470    czero:0          \n 2024-07-18T12:56:55.682Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15449470    czero:0          \n 2024-07-18T12:56:59.809Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > nb addc:      16785408\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > nb add:       50356224\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > nb multc:     50356224\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > nb mult:      16785406\n 2024-07-18T12:57:00.215Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T12:57:00.215Z INFO  dietmc_ram                       > time ram exec: 79.461791319s\n 2024-07-18T12:57:00.215Z INFO  dietmc_ram                       > ram-size 4096\n 2024-07-18T12:57:00.215Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T12:57:00.216Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T12:57:00.216Z INFO  dietmc_ram                       > bytes sent: 412335784\n 2024-07-18T12:57:00.216Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T12:57:00.216Z INFO  dietmc_ram                       > bytes total: 423593032\n 2024-07-18T12:57:00.216Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.027 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.043 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4114ms\nrtt min/avg/max/mdev = 0.027/0.042/0.048/0.007 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 45470 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.35 GBytes  28.8 Gbits/sec    0   1.12 MBytes       \n[  5]   1.00-2.00   sec  3.68 GBytes  31.6 Gbits/sec    0   1.12 MBytes       \n[  5]   2.00-3.00   sec  3.66 GBytes  31.5 Gbits/sec    0   1.12 MBytes       \n[  5]   3.00-4.00   sec  3.64 GBytes  31.2 Gbits/sec    0   1.12 MBytes       \n[  5]   4.00-5.00   sec  3.71 GBytes  31.8 Gbits/sec    0   2.62 MBytes       \n[  5]   5.00-6.00   sec  3.73 GBytes  32.0 Gbits/sec    0   2.62 MBytes       \n[  5]   6.00-7.00   sec  2.07 GBytes  17.8 Gbits/sec    0   2.62 MBytes       \n[  5]   7.00-8.00   sec  2.25 GBytes  19.3 Gbits/sec    0   2.62 MBytes       \n[  5]   8.00-9.00   sec  3.33 GBytes  28.6 Gbits/sec    0   2.62 MBytes       \n[  5]   9.00-10.00  sec  3.75 GBytes  32.2 Gbits/sec    0   2.62 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  33.5 GBytes  28.8 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  33.5 GBytes  28.8 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.033 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.058 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.054 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.053 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.058 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4123ms\nrtt min/avg/max/mdev = 0.033/0.051/0.058/0.009 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 59606 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  9.38 MBytes  78.6 Mbits/sec    1   1.50 MBytes       \n[  5]   1.00-2.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   2.00-3.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   3.00-4.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   4.00-5.00   sec  7.12 MBytes  59.8 Mbits/sec    0   1.50 MBytes       \n[  5]   5.00-6.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   6.00-7.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   7.00-8.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   8.00-9.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   9.00-10.00  sec  7.12 MBytes  59.7 Mbits/sec    0   1.50 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  63.2 MBytes  53.0 Mbits/sec    1             sender\n[  5]   0.00-10.03  sec  59.5 MBytes  49.8 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 50
    }
}