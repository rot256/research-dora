{
    "meta": {
        "ram": true,
        "ram_size": 524288,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 524288 --ram-steps 4194304 --connection-addr '127.0.0.1:32400'`\n 2024-07-18T15:28:07.546Z INFO  dietmc_ram > verifier mode\n 2024-07-18T15:28:07.546Z INFO  dietmc_ram > addr: \"127.0.0.1:32400\"\n 2024-07-18T15:28:07.546Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T15:28:07.546Z INFO  dietmc_ram > time reading ins/wit/rel: 20ns\n 2024-07-18T15:28:07.862Z INFO  dietmc_ram > connection received\n 2024-07-18T15:28:19.058Z INFO  dietmc_ram > init time: 11.196296649s\n 2024-07-18T15:28:19.059Z INFO  dietmc_ram > run 0/1\n 2024-07-18T15:28:22.363Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.304113317s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:28:32.977Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T15:28:40.919Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.873666958s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:28:46.578Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T15:28:51.624Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T15:28:54.063Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.102Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.123Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.144Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.166Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.185Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.206Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.227Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.248Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.269Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.290Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.826Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:134845      czero:0          \n 2024-07-18T15:28:59.955Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.871929334s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:29:02.058Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:2634845     czero:0          \n 2024-07-18T15:29:05.760Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:5134844     czero:0          \n 2024-07-18T15:29:09.473Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:7634844     czero:0          \n 2024-07-18T15:29:12.295Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > nb inst:       8912900\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > nb addc:       9437184\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > nb add:       28311552\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > nb multc:     28311552\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > nb mult:       9437182\n 2024-07-18T15:29:12.521Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T15:29:12.521Z INFO  dietmc_ram                   > ram-size 524288\n 2024-07-18T15:29:12.521Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T15:29:12.521Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T15:29:12.521Z INFO  dietmc_ram                   > time ram exec: 53.462691944s\n 2024-07-18T15:29:12.521Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T15:29:12.521Z INFO  dietmc_ram                   > bytes recv: 229067792\n 2024-07-18T15:29:12.521Z INFO  dietmc_ram                   > bytes total: 234962528\n 2024-07-18T15:29:12.521Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 524288 --ram-steps 4194304 --connection-addr '127.0.0.1:32400' --prover`\n 2024-07-18T15:28:07.562Z INFO  dietmc_ram > prover mode\n 2024-07-18T15:28:07.562Z INFO  dietmc_ram > addr: \"127.0.0.1:32400\"\n 2024-07-18T15:28:07.562Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T15:28:07.562Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T15:28:19.191Z INFO  dietmc_ram > init time: 11.429053232s\n 2024-07-18T15:28:19.191Z INFO  dietmc_ram > run 0/1\n 2024-07-18T15:28:51.070Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T15:28:51.070Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 524288\n 2024-07-18T15:28:54.155Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.210Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.240Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.270Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.300Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.329Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.356Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.386Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.417Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.448Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.478Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:28:54.507Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T15:29:00.459Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2091295     czero:0          \n 2024-07-18T15:29:04.796Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:4591295     czero:0          \n 2024-07-18T15:29:08.349Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7091294     czero:0          \n 2024-07-18T15:29:11.922Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > nb addc:       9437184\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > nb add:       28311552\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > nb multc:     28311552\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > nb mult:       9437182\n 2024-07-18T15:29:12.395Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T15:29:12.395Z INFO  dietmc_ram                       > time ram exec: 53.204065779s\n 2024-07-18T15:29:12.395Z INFO  dietmc_ram                       > ram-size 524288\n 2024-07-18T15:29:12.395Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T15:29:12.395Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T15:29:12.395Z INFO  dietmc_ram                       > bytes sent: 229067792\n 2024-07-18T15:29:12.395Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T15:29:12.395Z INFO  dietmc_ram                       > bytes total: 234962528\n 2024-07-18T15:29:12.395Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.029 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.057 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.057 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.055 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4122ms\nrtt min/avg/max/mdev = 0.029/0.049/0.057/0.010 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 55968 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.63 GBytes  31.2 Gbits/sec    0   1.06 MBytes       \n[  5]   1.00-2.00   sec  3.68 GBytes  31.6 Gbits/sec    0   1.06 MBytes       \n[  5]   2.00-3.00   sec  3.75 GBytes  32.2 Gbits/sec    0   1.06 MBytes       \n[  5]   3.00-4.00   sec  3.72 GBytes  32.0 Gbits/sec    0   1.06 MBytes       \n[  5]   4.00-5.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   5.00-6.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   6.00-7.00   sec  3.71 GBytes  31.9 Gbits/sec    0   1.69 MBytes       \n[  5]   7.00-8.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   8.00-9.00   sec  3.55 GBytes  30.5 Gbits/sec    0   2.50 MBytes       \n[  5]   9.00-10.00  sec  3.84 GBytes  33.0 Gbits/sec    0   2.50 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.6 GBytes  32.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.6 GBytes  32.3 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4006ms\nrtt min/avg/max/mdev = 200.179/200.221/200.265/0.029 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 36846 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  2.62 MBytes  22.0 Mbits/sec    0   5.06 MBytes       \n[  5]   2.00-3.00   sec  6.88 MBytes  57.7 Mbits/sec    0   5.18 MBytes       \n[  5]   3.00-4.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   4.00-5.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   5.00-6.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   6.00-7.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   7.00-8.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   8.00-9.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   9.00-10.00  sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  47.0 MBytes  39.4 Mbits/sec    0             sender\n[  5]   0.00-10.41  sec  47.0 MBytes  37.9 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 100,
        "mbits": 50
    }
}