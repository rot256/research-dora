{
    "meta": {
        "ram": true,
        "ram_size": 524288,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 524288 --ram-steps 4194304 --connection-addr '127.0.0.1:30758'`\n 2024-07-18T16:06:14.575Z INFO  dietmc_ram > verifier mode\n 2024-07-18T16:06:14.575Z INFO  dietmc_ram > addr: \"127.0.0.1:30758\"\n 2024-07-18T16:06:14.575Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:06:14.575Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-18T16:06:14.575Z INFO  dietmc_ram > connection received\n 2024-07-18T16:06:15.107Z INFO  dietmc_ram > init time: 531.733182ms\n 2024-07-18T16:06:15.107Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:06:16.981Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:1.874470367s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:06:21.674Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T16:06:25.562Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.747479764s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:06:28.064Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T16:06:30.274Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T16:06:31.300Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.332Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.352Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.372Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.392Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.411Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.430Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.450Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.470Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.490Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.510Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.767Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:134845      czero:0          \n 2024-07-18T16:06:34.498Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.755050544s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:06:35.522Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:2634845     czero:0          \n 2024-07-18T16:06:37.127Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:5134844     czero:0          \n 2024-07-18T16:06:38.728Z INFO  diet_mac_and_cheese::backend > inp:8912900     witn:4194304     mul:7634844     czero:0          \n 2024-07-18T16:06:39.893Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > nb inst:       8912900\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > nb addc:       9437184\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > nb add:       28311552\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > nb multc:     28311552\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > nb mult:       9437182\n 2024-07-18T16:06:39.920Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T16:06:39.920Z INFO  dietmc_ram                   > ram-size 524288\n 2024-07-18T16:06:39.920Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T16:06:39.920Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T16:06:39.920Z INFO  dietmc_ram                   > time ram exec: 24.813733894s\n 2024-07-18T16:06:39.920Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T16:06:39.920Z INFO  dietmc_ram                   > bytes recv: 229067792\n 2024-07-18T16:06:39.920Z INFO  dietmc_ram                   > bytes total: 234962528\n 2024-07-18T16:06:39.920Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 524288 --ram-steps 4194304 --connection-addr '127.0.0.1:30758' --prover`\n 2024-07-18T16:06:14.560Z INFO  dietmc_ram > prover mode\n 2024-07-18T16:06:14.560Z INFO  dietmc_ram > addr: \"127.0.0.1:30758\"\n 2024-07-18T16:06:14.560Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:06:14.560Z INFO  dietmc_ram > time reading ins/wit/rel: 20ns\n 2024-07-18T16:06:15.107Z INFO  dietmc_ram > init time: 532.096741ms\n 2024-07-18T16:06:15.107Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:06:30.024Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T16:06:30.024Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 524288\n 2024-07-18T16:06:31.295Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.349Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.377Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.406Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.435Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.463Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.488Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.518Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.548Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.577Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.606Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:31.634Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:06:34.911Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2091295     czero:0          \n 2024-07-18T16:06:36.504Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:4591295     czero:0          \n 2024-07-18T16:06:38.114Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7091294     czero:0          \n 2024-07-18T16:06:39.635Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T16:06:39.893Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:06:39.894Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T16:06:39.894Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T16:06:39.894Z INFO  diet_mac_and_cheese::backend     > nb addc:       9437184\n 2024-07-18T16:06:39.894Z INFO  diet_mac_and_cheese::backend     > nb add:       28311552\n 2024-07-18T16:06:39.894Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T16:06:39.894Z INFO  diet_mac_and_cheese::backend     > nb multc:     28311552\n 2024-07-18T16:06:39.894Z INFO  diet_mac_and_cheese::backend     > nb mult:       9437182\n 2024-07-18T16:06:39.894Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T16:06:39.894Z INFO  dietmc_ram                       > time ram exec: 24.786612877s\n 2024-07-18T16:06:39.894Z INFO  dietmc_ram                       > ram-size 524288\n 2024-07-18T16:06:39.894Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T16:06:39.894Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T16:06:39.894Z INFO  dietmc_ram                       > bytes sent: 229067792\n 2024-07-18T16:06:39.894Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T16:06:39.894Z INFO  dietmc_ram                       > bytes total: 234962528\n 2024-07-18T16:06:39.894Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.029 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.049 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4133ms\nrtt min/avg/max/mdev = 0.029/0.044/0.049/0.007 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 54164 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.45 GBytes  29.6 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  3.34 GBytes  28.7 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  3.52 GBytes  30.2 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  3.58 GBytes  30.7 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.46 GBytes  29.7 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  3.51 GBytes  30.1 Gbits/sec    0   1.19 MBytes       \n[  5]   6.00-7.00   sec  3.46 GBytes  29.7 Gbits/sec    0   1.62 MBytes       \n[  5]   7.00-8.00   sec  3.10 GBytes  26.7 Gbits/sec    0   1.62 MBytes       \n[  5]   8.00-9.00   sec  3.58 GBytes  30.7 Gbits/sec    0   1.62 MBytes       \n[  5]   9.00-10.00  sec  2.92 GBytes  25.1 Gbits/sec    0   1.62 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.3 GBytes  30.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.3 GBytes  30.3 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.055 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.050 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.052 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.048 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4127ms\nrtt min/avg/max/mdev = 0.038/0.048/0.055/0.005 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 51048 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  15.1 MBytes   127 Mbits/sec    0   1.56 MBytes       \n[  5]   1.00-2.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   2.00-3.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   3.00-4.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   4.00-5.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   5.00-6.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   6.00-7.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   7.00-8.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   8.00-9.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   9.00-10.00  sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   123 MBytes   103 Mbits/sec    0             sender\n[  5]   0.00-10.02  sec   119 MBytes  99.7 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 100
    }
}