{
    "meta": {
        "ram": true,
        "ram_size": 16384,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 4194304 --connection-addr '127.0.0.1:47361'`\n 2024-07-18T14:57:10.272Z INFO  dietmc_ram > verifier mode\n 2024-07-18T14:57:10.272Z INFO  dietmc_ram > addr: \"127.0.0.1:47361\"\n 2024-07-18T14:57:10.272Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T14:57:10.272Z INFO  dietmc_ram > time reading ins/wit/rel: 31ns\n 2024-07-18T14:57:10.560Z INFO  dietmc_ram > connection received\n 2024-07-18T14:57:17.686Z INFO  dietmc_ram > init time: 7.126324678s\n 2024-07-18T14:57:17.687Z INFO  dietmc_ram > run 0/1\n 2024-07-18T14:57:20.937Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.250125197s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T14:57:31.548Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T14:57:39.441Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.88102967s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T14:57:45.097Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T14:57:50.239Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T14:57:50.460Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.495Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.517Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.539Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.561Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.583Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.605Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.627Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.649Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.671Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:52.319Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:936221      czero:0          \n 2024-07-18T14:57:58.555Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.858883024s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T14:57:59.589Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:3436221     czero:0          \n 2024-07-18T14:58:03.271Z INFO  diet_mac_and_cheese::backend > inp:8404996     witn:4194304     mul:5936220     czero:0          \n 2024-07-18T14:58:07.273Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > nb inst:       8404996\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > nb addc:       8421376\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > nb add:       25264128\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > nb multc:     25264128\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > nb mult:       8421374\n 2024-07-18T14:58:07.501Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T14:58:07.501Z INFO  dietmc_ram                   > ram-size 16384\n 2024-07-18T14:58:07.501Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T14:58:07.501Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T14:58:07.501Z INFO  dietmc_ram                   > time ram exec: 49.814419188s\n 2024-07-18T14:58:07.501Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T14:58:07.501Z INFO  dietmc_ram                   > bytes recv: 208751632\n 2024-07-18T14:58:07.501Z INFO  dietmc_ram                   > bytes total: 214646368\n 2024-07-18T14:58:07.501Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 16384 --ram-steps 4194304 --connection-addr '127.0.0.1:47361' --prover`\n 2024-07-18T14:57:10.260Z INFO  dietmc_ram > prover mode\n 2024-07-18T14:57:10.260Z INFO  dietmc_ram > addr: \"127.0.0.1:47361\"\n 2024-07-18T14:57:10.260Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T14:57:10.260Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T14:57:17.792Z INFO  dietmc_ram > init time: 7.331944574s\n 2024-07-18T14:57:17.792Z INFO  dietmc_ram > run 0/1\n 2024-07-18T14:57:50.136Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T14:57:50.136Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 16384\n 2024-07-18T14:57:50.547Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.601Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.631Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.662Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.693Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.725Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.755Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.786Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.817Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.847Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T14:57:50.920Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:138719      czero:0          \n 2024-07-18T14:57:54.503Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2638719     czero:0          \n 2024-07-18T14:58:01.421Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5138718     czero:0          \n 2024-07-18T14:58:05.590Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7638718     czero:0          \n 2024-07-18T14:58:06.983Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > nb addc:       8421376\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > nb add:       25264128\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > nb multc:     25264128\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > nb mult:       8421374\n 2024-07-18T14:58:07.373Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T14:58:07.373Z INFO  dietmc_ram                       > time ram exec: 49.581338853s\n 2024-07-18T14:58:07.373Z INFO  dietmc_ram                       > ram-size 16384\n 2024-07-18T14:58:07.373Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T14:58:07.373Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T14:58:07.373Z INFO  dietmc_ram                       > bytes sent: 208751632\n 2024-07-18T14:58:07.373Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T14:58:07.373Z INFO  dietmc_ram                       > bytes total: 214646368\n 2024-07-18T14:58:07.373Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.029 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.057 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.057 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.055 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4122ms\nrtt min/avg/max/mdev = 0.029/0.049/0.057/0.010 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 55968 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.63 GBytes  31.2 Gbits/sec    0   1.06 MBytes       \n[  5]   1.00-2.00   sec  3.68 GBytes  31.6 Gbits/sec    0   1.06 MBytes       \n[  5]   2.00-3.00   sec  3.75 GBytes  32.2 Gbits/sec    0   1.06 MBytes       \n[  5]   3.00-4.00   sec  3.72 GBytes  32.0 Gbits/sec    0   1.06 MBytes       \n[  5]   4.00-5.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   5.00-6.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   6.00-7.00   sec  3.71 GBytes  31.9 Gbits/sec    0   1.69 MBytes       \n[  5]   7.00-8.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.69 MBytes       \n[  5]   8.00-9.00   sec  3.55 GBytes  30.5 Gbits/sec    0   2.50 MBytes       \n[  5]   9.00-10.00  sec  3.84 GBytes  33.0 Gbits/sec    0   2.50 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.6 GBytes  32.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.6 GBytes  32.3 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4006ms\nrtt min/avg/max/mdev = 200.179/200.221/200.265/0.029 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 36846 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  2.62 MBytes  22.0 Mbits/sec    0   5.06 MBytes       \n[  5]   2.00-3.00   sec  6.88 MBytes  57.7 Mbits/sec    0   5.18 MBytes       \n[  5]   3.00-4.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   4.00-5.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   5.00-6.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   6.00-7.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   7.00-8.00   sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n[  5]   8.00-9.00   sec  6.75 MBytes  56.6 Mbits/sec    0   5.18 MBytes       \n[  5]   9.00-10.00  sec  3.38 MBytes  28.3 Mbits/sec    0   5.18 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  47.0 MBytes  39.4 Mbits/sec    0             sender\n[  5]   0.00-10.41  sec  47.0 MBytes  37.9 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 100,
        "mbits": 50
    }
}