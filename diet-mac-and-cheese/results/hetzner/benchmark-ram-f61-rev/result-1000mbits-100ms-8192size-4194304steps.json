{
    "meta": {
        "ram": true,
        "ram_size": 8192,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 8192 --ram-steps 4194304 --connection-addr '127.0.0.1:45822'`\n 2024-07-18T18:15:02.557Z INFO  dietmc_ram > verifier mode\n 2024-07-18T18:15:02.557Z INFO  dietmc_ram > addr: \"127.0.0.1:45822\"\n 2024-07-18T18:15:02.557Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T18:15:02.557Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T18:15:02.845Z INFO  dietmc_ram > connection received\n 2024-07-18T18:15:12.099Z INFO  dietmc_ram > init time: 9.253645245s\n 2024-07-18T18:15:12.099Z INFO  dietmc_ram > run 0/1\n 2024-07-18T18:15:15.145Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.046380098s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T18:15:19.120Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T18:15:23.475Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.680122727s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T18:15:25.842Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T18:15:27.360Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T18:15:27.473Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.488Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.502Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.516Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.531Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.545Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.559Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.573Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.588Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.602Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:28.234Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:989469      czero:0          \n 2024-07-18T18:15:32.023Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.649732868s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T18:15:33.046Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:3489469     czero:0          \n 2024-07-18T18:15:34.104Z INFO  diet_mac_and_cheese::backend > inp:8396804     witn:4194304     mul:5989468     czero:0          \n 2024-07-18T18:15:35.151Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > nb inst:       8396804\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > nb addc:       8404992\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > nb add:       25214976\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > nb multc:     25214976\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > nb mult:       8404990\n 2024-07-18T18:15:35.380Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T18:15:35.380Z INFO  dietmc_ram                   > ram-size 8192\n 2024-07-18T18:15:35.380Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T18:15:35.380Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T18:15:35.380Z INFO  dietmc_ram                   > time ram exec: 23.280993848s\n 2024-07-18T18:15:35.380Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T18:15:35.380Z INFO  dietmc_ram                   > bytes recv: 208423952\n 2024-07-18T18:15:35.380Z INFO  dietmc_ram                   > bytes total: 214318688\n 2024-07-18T18:15:35.380Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 8192 --ram-steps 4194304 --connection-addr '127.0.0.1:45822' --prover`\n 2024-07-18T18:15:02.545Z INFO  dietmc_ram > prover mode\n 2024-07-18T18:15:02.545Z INFO  dietmc_ram > addr: \"127.0.0.1:45822\"\n 2024-07-18T18:15:02.545Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T18:15:02.545Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T18:15:12.204Z INFO  dietmc_ram > init time: 9.459223298s\n 2024-07-18T18:15:12.204Z INFO  dietmc_ram > run 0/1\n 2024-07-18T18:15:27.258Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T18:15:27.258Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 8192\n 2024-07-18T18:15:27.576Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.625Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.649Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.673Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.697Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.722Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.746Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.770Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.794Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.818Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T18:15:27.890Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:187871      czero:0          \n 2024-07-18T18:15:28.951Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2687871     czero:0          \n 2024-07-18T18:15:33.590Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5187870     czero:0          \n 2024-07-18T18:15:34.645Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7687870     czero:0          \n 2024-07-18T18:15:34.890Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > nb addc:       8404992\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > nb add:       25214976\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > nb multc:     25214976\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > nb mult:       8404990\n 2024-07-18T18:15:35.251Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T18:15:35.251Z INFO  dietmc_ram                       > time ram exec: 23.04715557s\n 2024-07-18T18:15:35.251Z INFO  dietmc_ram                       > ram-size 8192\n 2024-07-18T18:15:35.251Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T18:15:35.251Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T18:15:35.251Z INFO  dietmc_ram                       > bytes sent: 208423952\n 2024-07-18T18:15:35.251Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T18:15:35.251Z INFO  dietmc_ram                       > bytes total: 214318688\n 2024-07-18T18:15:35.251Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.028 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.039 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4098ms\nrtt min/avg/max/mdev = 0.028/0.041/0.048/0.007 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 44544 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  1.48 GBytes  12.7 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  2.22 GBytes  19.1 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  1.50 GBytes  12.9 Gbits/sec    0   1.06 MBytes       \n[  5]   3.00-4.00   sec   810 MBytes  6.80 Gbits/sec    0   1.06 MBytes       \n[  5]   4.00-5.00   sec  1.34 GBytes  11.5 Gbits/sec    0   1.06 MBytes       \n[  5]   5.00-6.00   sec  3.70 GBytes  31.8 Gbits/sec    0   1.06 MBytes       \n[  5]   6.00-7.00   sec  3.77 GBytes  32.4 Gbits/sec    0   1.06 MBytes       \n[  5]   7.00-8.00   sec  3.38 GBytes  29.1 Gbits/sec    0   1.06 MBytes       \n[  5]   8.00-9.00   sec  2.36 GBytes  20.3 Gbits/sec    0   1.69 MBytes       \n[  5]   9.00-10.00  sec  1.77 GBytes  15.2 Gbits/sec    0   1.69 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  25.0 GBytes  21.5 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  25.0 GBytes  21.5 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 200.241/200.268/200.299/0.021 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 40850 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  2.38 MBytes  19.9 Mbits/sec    0    162 KBytes       \n[  5]   1.00-2.00   sec  5.38 MBytes  45.1 Mbits/sec    0   11.0 MBytes       \n[  5]   2.00-3.00   sec  13.9 MBytes   116 Mbits/sec    0   12.3 MBytes       \n[  5]   3.00-4.00   sec  14.0 MBytes   117 Mbits/sec    0   12.3 MBytes       \n[  5]   4.00-5.00   sec  13.9 MBytes   116 Mbits/sec    0   12.3 MBytes       \n[  5]   5.00-6.00   sec  13.9 MBytes   116 Mbits/sec    0   12.3 MBytes       \n[  5]   6.00-7.00   sec  13.9 MBytes   116 Mbits/sec    0   12.3 MBytes       \n[  5]   7.00-8.00   sec  14.0 MBytes   117 Mbits/sec    0   12.3 MBytes       \n[  5]   8.00-9.00   sec  13.9 MBytes   116 Mbits/sec    0   12.3 MBytes       \n[  5]   9.00-10.00  sec  13.9 MBytes   116 Mbits/sec    0   12.3 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   119 MBytes  99.8 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec   119 MBytes  97.8 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 100,
        "mbits": 1000
    }
}