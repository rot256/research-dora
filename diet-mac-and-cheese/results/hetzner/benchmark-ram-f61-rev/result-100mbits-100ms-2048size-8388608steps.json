{
    "meta": {
        "ram": true,
        "ram_size": 2048,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.15s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 2048 --ram-steps 8388608 --connection-addr '127.0.0.1:26153'`\n 2024-07-18T16:49:35.073Z INFO  dietmc_ram > verifier mode\n 2024-07-18T16:49:35.073Z INFO  dietmc_ram > addr: \"127.0.0.1:26153\"\n 2024-07-18T16:49:35.073Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:49:35.073Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T16:49:35.354Z INFO  dietmc_ram > connection received\n 2024-07-18T16:49:44.050Z INFO  dietmc_ram > init time: 8.696217534s\n 2024-07-18T16:49:44.050Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:49:47.168Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.117575671s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:49:53.586Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T16:49:59.289Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.744484723s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:50:02.856Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T16:50:08.494Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T16:50:11.294Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.717433474s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:50:17.674Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T16:50:23.371Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.722847949s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:50:26.924Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T16:50:27.065Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T16:50:27.165Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.184Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.198Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.213Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.227Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.242Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.256Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.270Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.285Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.299Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.314Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.328Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.342Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.357Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.371Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.386Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.400Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.414Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.429Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.444Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:29.658Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:2072125     czero:0          \n 2024-07-18T16:50:31.962Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:4572125     czero:0          \n 2024-07-18T16:50:36.302Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.726030235s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:50:37.506Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:7072125     czero:0          \n 2024-07-18T16:50:39.710Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:9572124     czero:0          \n 2024-07-18T16:50:41.915Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:12072124    czero:0          \n 2024-07-18T16:50:44.124Z INFO  diet_mac_and_cheese::backend > inp:16779268    witn:8388608     mul:14572124    czero:0          \n 2024-07-18T16:50:48.564Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.722511761s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:50:49.658Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > nb inst:      16779268\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > nb addc:      16781312\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > nb add:       50343936\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > nb multc:     50343936\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > nb mult:      16781310\n 2024-07-18T16:50:49.886Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T16:50:49.886Z INFO  dietmc_ram                   > ram-size 2048\n 2024-07-18T16:50:49.886Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T16:50:49.886Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T16:50:49.886Z INFO  dietmc_ram                   > time ram exec: 65.835458443s\n 2024-07-18T16:50:49.886Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T16:50:49.886Z INFO  dietmc_ram                   > bytes recv: 412253864\n 2024-07-18T16:50:49.886Z INFO  dietmc_ram                   > bytes total: 423511112\n 2024-07-18T16:50:49.886Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 2048 --ram-steps 8388608 --connection-addr '127.0.0.1:26153' --prover`\n 2024-07-18T16:49:35.053Z INFO  dietmc_ram > prover mode\n 2024-07-18T16:49:35.053Z INFO  dietmc_ram > addr: \"127.0.0.1:26153\"\n 2024-07-18T16:49:35.053Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:49:35.053Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T16:49:44.155Z INFO  dietmc_ram > init time: 8.901642588s\n 2024-07-18T16:49:44.155Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:50:08.389Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T16:50:26.846Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T16:50:26.846Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 2048\n 2024-07-18T16:50:27.256Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.298Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.321Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.345Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.368Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.391Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.415Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.438Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.462Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.487Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.511Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.535Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.559Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.583Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.607Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.631Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.655Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.678Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.702Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.726Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:50:27.834Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:461759      czero:0          \n 2024-07-18T16:50:30.104Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2961759     czero:0          \n 2024-07-18T16:50:32.574Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5461759     czero:0          \n 2024-07-18T16:50:38.031Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7961759     czero:0          \n 2024-07-18T16:50:40.212Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10461758    czero:0          \n 2024-07-18T16:50:42.392Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12961758    czero:0          \n 2024-07-18T16:50:44.895Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15461758    czero:0          \n 2024-07-18T16:50:49.110Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T16:50:49.758Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:50:49.759Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T16:50:49.759Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T16:50:49.759Z INFO  diet_mac_and_cheese::backend     > nb addc:      16781312\n 2024-07-18T16:50:49.759Z INFO  diet_mac_and_cheese::backend     > nb add:       50343936\n 2024-07-18T16:50:49.759Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T16:50:49.759Z INFO  diet_mac_and_cheese::backend     > nb multc:     50343936\n 2024-07-18T16:50:49.759Z INFO  diet_mac_and_cheese::backend     > nb mult:      16781310\n 2024-07-18T16:50:49.759Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T16:50:49.759Z INFO  dietmc_ram                       > time ram exec: 65.603183102s\n 2024-07-18T16:50:49.759Z INFO  dietmc_ram                       > ram-size 2048\n 2024-07-18T16:50:49.759Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T16:50:49.759Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T16:50:49.759Z INFO  dietmc_ram                       > bytes sent: 412253864\n 2024-07-18T16:50:49.759Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T16:50:49.759Z INFO  dietmc_ram                       > bytes total: 423511112\n 2024-07-18T16:50:49.759Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.028 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.049 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.050 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.052 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4104ms\nrtt min/avg/max/mdev = 0.028/0.045/0.052/0.008 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 44020 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.74 GBytes  32.1 Gbits/sec    0    959 KBytes       \n[  5]   1.00-2.00   sec  3.81 GBytes  32.7 Gbits/sec    0   1.56 MBytes       \n[  5]   2.00-3.00   sec  3.81 GBytes  32.7 Gbits/sec    0   1.56 MBytes       \n[  5]   3.00-4.00   sec  3.74 GBytes  32.1 Gbits/sec    0   1.56 MBytes       \n[  5]   4.00-5.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.56 MBytes       \n[  5]   5.00-6.00   sec  3.78 GBytes  32.5 Gbits/sec    0   1.56 MBytes       \n[  5]   6.00-7.00   sec  3.77 GBytes  32.4 Gbits/sec    0   1.56 MBytes       \n[  5]   7.00-8.00   sec  3.79 GBytes  32.6 Gbits/sec    0   1.62 MBytes       \n[  5]   8.00-9.00   sec  3.83 GBytes  32.9 Gbits/sec    0   1.62 MBytes       \n[  5]   9.00-10.00  sec  3.79 GBytes  32.5 Gbits/sec    0   1.62 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.9 GBytes  32.6 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.9 GBytes  32.6 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 200.181/200.211/200.262/0.029 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 60986 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  5.50 MBytes  46.1 Mbits/sec    0   8.99 MBytes       \n[  5]   2.00-3.00   sec  8.50 MBytes  71.3 Mbits/sec    0   8.99 MBytes       \n[  5]   3.00-4.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   4.00-5.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   5.00-6.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   6.00-7.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   7.00-8.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   8.00-9.00   sec  5.75 MBytes  48.2 Mbits/sec    0   8.99 MBytes       \n[  5]   9.00-10.00  sec  8.62 MBytes  72.3 Mbits/sec    0   8.99 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  75.2 MBytes  63.1 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec  75.2 MBytes  61.9 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 100,
        "mbits": 100
    }
}