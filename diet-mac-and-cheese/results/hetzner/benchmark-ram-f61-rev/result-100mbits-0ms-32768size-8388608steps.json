{
    "meta": {
        "ram": true,
        "ram_size": 32768,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.15s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 8388608 --connection-addr '127.0.0.1:48132'`\n 2024-07-18T15:55:36.663Z INFO  dietmc_ram > verifier mode\n 2024-07-18T15:55:36.663Z INFO  dietmc_ram > addr: \"127.0.0.1:48132\"\n 2024-07-18T15:55:36.663Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T15:55:36.663Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T15:55:36.664Z INFO  dietmc_ram > connection received\n 2024-07-18T15:55:37.199Z INFO  dietmc_ram > init time: 535.228119ms\n 2024-07-18T15:55:37.199Z INFO  dietmc_ram > run 0/1\n 2024-07-18T15:55:39.076Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:1.877133254s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:55:43.761Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T15:55:47.690Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.788024562s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:55:50.160Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T15:55:54.432Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T15:55:56.178Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.736777585s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:56:00.837Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T15:56:04.729Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.745370225s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:56:07.225Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T15:56:07.366Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T15:56:07.465Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.482Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.500Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.518Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.536Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.554Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.572Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.590Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.607Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.625Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.643Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.661Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.679Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.697Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.715Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.733Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.751Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.769Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.787Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.805Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:09.287Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:1872445     czero:0          \n 2024-07-18T15:56:10.893Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:4372445     czero:0          \n 2024-07-18T15:56:13.951Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.78303689s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:56:14.658Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:6872445     czero:0          \n 2024-07-18T15:56:16.258Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:9372444     czero:0          \n 2024-07-18T15:56:17.863Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:11872444    czero:0          \n 2024-07-18T15:56:19.463Z INFO  diet_mac_and_cheese::backend > inp:16809988    witn:8388608     mul:14372444    czero:0          \n 2024-07-18T15:56:22.521Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.771799184s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > nb inst:      16809988\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > nb addc:      16842752\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > nb add:       50528256\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > nb multc:     50528256\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > nb mult:      16842750\n 2024-07-18T15:56:23.257Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T15:56:23.257Z INFO  dietmc_ram                   > ram-size 32768\n 2024-07-18T15:56:23.257Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T15:56:23.257Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T15:56:23.257Z INFO  dietmc_ram                   > time ram exec: 46.058244219s\n 2024-07-18T15:56:23.257Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T15:56:23.257Z INFO  dietmc_ram                   > bytes recv: 413482664\n 2024-07-18T15:56:23.257Z INFO  dietmc_ram                   > bytes total: 424739912\n 2024-07-18T15:56:23.257Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 32768 --ram-steps 8388608 --connection-addr '127.0.0.1:48132' --prover`\n 2024-07-18T15:55:36.651Z INFO  dietmc_ram > prover mode\n 2024-07-18T15:55:36.651Z INFO  dietmc_ram > addr: \"127.0.0.1:48132\"\n 2024-07-18T15:55:36.651Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T15:55:36.651Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T15:55:37.201Z INFO  dietmc_ram > init time: 537.430364ms\n 2024-07-18T15:55:37.201Z INFO  dietmc_ram > run 0/1\n 2024-07-18T15:55:54.156Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T15:56:07.087Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T15:56:07.087Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 32768\n 2024-07-18T15:56:07.453Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.498Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.525Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.552Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.579Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.606Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.633Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.660Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.686Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.714Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.740Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.767Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.795Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.822Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.850Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.878Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.906Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.933Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.961Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:07.988Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T15:56:08.097Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:277439      czero:0          \n 2024-07-18T15:56:09.559Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2777439     czero:0          \n 2024-07-18T15:56:11.179Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:5277439     czero:0          \n 2024-07-18T15:56:14.958Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7777439     czero:0          \n 2024-07-18T15:56:16.573Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:10277438    czero:0          \n 2024-07-18T15:56:18.178Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12777438    czero:0          \n 2024-07-18T15:56:19.802Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:15277438    czero:0          \n 2024-07-18T15:56:22.939Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > nb addc:      16842752\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > nb add:       50528256\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > nb multc:     50528256\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > nb mult:      16842750\n 2024-07-18T15:56:23.230Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                       > time ram exec: 46.028993826s\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                       > ram-size 32768\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                       > bytes sent: 413482664\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                       > bytes total: 424739912\n 2024-07-18T15:56:23.230Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.029 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.049 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4133ms\nrtt min/avg/max/mdev = 0.029/0.044/0.049/0.007 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 54164 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.45 GBytes  29.6 Gbits/sec    0   1023 KBytes       \n[  5]   1.00-2.00   sec  3.34 GBytes  28.7 Gbits/sec    0   1023 KBytes       \n[  5]   2.00-3.00   sec  3.52 GBytes  30.2 Gbits/sec    0   1023 KBytes       \n[  5]   3.00-4.00   sec  3.58 GBytes  30.7 Gbits/sec    0   1023 KBytes       \n[  5]   4.00-5.00   sec  3.46 GBytes  29.7 Gbits/sec    0   1023 KBytes       \n[  5]   5.00-6.00   sec  3.51 GBytes  30.1 Gbits/sec    0   1.19 MBytes       \n[  5]   6.00-7.00   sec  3.46 GBytes  29.7 Gbits/sec    0   1.62 MBytes       \n[  5]   7.00-8.00   sec  3.10 GBytes  26.7 Gbits/sec    0   1.62 MBytes       \n[  5]   8.00-9.00   sec  3.58 GBytes  30.7 Gbits/sec    0   1.62 MBytes       \n[  5]   9.00-10.00  sec  2.92 GBytes  25.1 Gbits/sec    0   1.62 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  35.3 GBytes  30.3 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  35.3 GBytes  30.3 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.038 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.055 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.050 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.052 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.048 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4127ms\nrtt min/avg/max/mdev = 0.038/0.048/0.055/0.005 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 51048 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  15.1 MBytes   127 Mbits/sec    0   1.56 MBytes       \n[  5]   1.00-2.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   2.00-3.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   3.00-4.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   4.00-5.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   5.00-6.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   6.00-7.00   sec  11.4 MBytes  95.4 Mbits/sec    0   1.56 MBytes       \n[  5]   7.00-8.00   sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n[  5]   8.00-9.00   sec  11.2 MBytes  94.4 Mbits/sec    0   1.56 MBytes       \n[  5]   9.00-10.00  sec  12.8 MBytes   107 Mbits/sec    0   1.56 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   123 MBytes   103 Mbits/sec    0             sender\n[  5]   0.00-10.02  sec   119 MBytes  99.7 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 100
    }
}