{
    "meta": {
        "ram": true,
        "ram_size": 131072,
        "ram_steps": 8388608,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 8388608 --connection-addr '127.0.0.1:43373'`\n 2024-07-18T16:32:47.005Z INFO  dietmc_ram > verifier mode\n 2024-07-18T16:32:47.005Z INFO  dietmc_ram > addr: \"127.0.0.1:43373\"\n 2024-07-18T16:32:47.005Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:32:47.005Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T16:32:47.048Z INFO  dietmc_ram > connection received\n 2024-07-18T16:32:48.226Z INFO  dietmc_ram > init time: 1.17802042s\n 2024-07-18T16:32:48.226Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:32:50.181Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:1.954875281s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:32:55.033Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T16:32:59.093Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.833761229s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:33:01.698Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T16:33:06.145Z INFO  diet_mac_and_cheese::backend > inp:9999999     witn:5000000     mul:0           czero:0          \n 2024-07-18T16:33:07.940Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.788778358s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:33:12.782Z INFO  diet_mac_and_cheese::backend > inp:13333332    witn:6666667     mul:0           czero:0          \n 2024-07-18T16:33:16.846Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.834405021s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:33:19.433Z INFO  diet_mac_and_cheese::backend > inp:16666666    witn:8333333     mul:0           czero:0          \n 2024-07-18T16:33:19.576Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T16:33:19.880Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:19.900Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:19.921Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:19.941Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:19.962Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:19.982Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.003Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.023Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.044Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.064Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.084Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.104Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.125Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.145Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.165Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.186Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.206Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.227Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.247Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.268Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:21.371Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:1233469     czero:0          \n 2024-07-18T16:33:23.027Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:3733469     czero:0          \n 2024-07-18T16:33:26.403Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.830925303s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:33:26.948Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:6233469     czero:0          \n 2024-07-18T16:33:28.618Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:8733468     czero:0          \n 2024-07-18T16:33:30.266Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:11233468    czero:0          \n 2024-07-18T16:33:31.919Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:13733468    czero:0          \n 2024-07-18T16:33:35.340Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.842612254s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:33:35.870Z INFO  diet_mac_and_cheese::backend > inp:16908292    witn:8388608     mul:16233468    czero:0          \n 2024-07-18T16:33:36.440Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > nb inst:      16908292\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > nb witn:       8388608\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > nb addc:      17039360\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > nb add:       51118080\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > nb multc:     51118080\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > nb mult:      17039358\n 2024-07-18T16:33:36.486Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T16:33:36.486Z INFO  dietmc_ram                   > ram-size 131072\n 2024-07-18T16:33:36.486Z INFO  dietmc_ram                   > ram-steps 8388608\n 2024-07-18T16:33:36.486Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T16:33:36.486Z INFO  dietmc_ram                   > time ram exec: 48.259632031s\n 2024-07-18T16:33:36.486Z INFO  dietmc_ram                   > bytes sent: 11257248\n 2024-07-18T16:33:36.486Z INFO  dietmc_ram                   > bytes recv: 417414824\n 2024-07-18T16:33:36.486Z INFO  dietmc_ram                   > bytes total: 428672072\n 2024-07-18T16:33:36.486Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.15s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 131072 --ram-steps 8388608 --connection-addr '127.0.0.1:43373' --prover`\n 2024-07-18T16:32:47.018Z INFO  dietmc_ram > prover mode\n 2024-07-18T16:32:47.018Z INFO  dietmc_ram > addr: \"127.0.0.1:43373\"\n 2024-07-18T16:32:47.018Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:32:47.018Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T16:32:48.240Z INFO  dietmc_ram > init time: 1.201711441s\n 2024-07-18T16:32:48.240Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:33:06.050Z INFO  diet_mac_and_cheese::backend > inp:0           witn:4999999     mul:0           czero:0          \n 2024-07-18T16:33:19.447Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T16:33:19.447Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 8388608 operation, memory-size: 131072\n 2024-07-18T16:33:19.871Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:19.916Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:19.945Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:19.974Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.003Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.033Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.062Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.091Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.120Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.150Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.178Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.207Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.237Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.266Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.297Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.327Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.357Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.387Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.417Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.447Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:20.476Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:0           czero:0          \n 2024-07-18T16:33:21.921Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:2187615     czero:0          \n 2024-07-18T16:33:23.622Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:4687615     czero:0          \n 2024-07-18T16:33:27.567Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:7187615     czero:0          \n 2024-07-18T16:33:28.960Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:9687614     czero:0          \n 2024-07-18T16:33:30.666Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:12187614    czero:0          \n 2024-07-18T16:33:32.368Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:8388608     mul:14687614    czero:0          \n 2024-07-18T16:33:36.194Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T16:33:36.450Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:33:36.451Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T16:33:36.451Z INFO  diet_mac_and_cheese::backend     > nb witn:       8388608\n 2024-07-18T16:33:36.451Z INFO  diet_mac_and_cheese::backend     > nb addc:      17039360\n 2024-07-18T16:33:36.451Z INFO  diet_mac_and_cheese::backend     > nb add:       51118080\n 2024-07-18T16:33:36.451Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T16:33:36.451Z INFO  diet_mac_and_cheese::backend     > nb multc:     51118080\n 2024-07-18T16:33:36.451Z INFO  diet_mac_and_cheese::backend     > nb mult:      17039358\n 2024-07-18T16:33:36.451Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T16:33:36.451Z INFO  dietmc_ram                       > time ram exec: 48.210481487s\n 2024-07-18T16:33:36.451Z INFO  dietmc_ram                       > ram-size 131072\n 2024-07-18T16:33:36.451Z INFO  dietmc_ram                       > ram-steps 8388608\n 2024-07-18T16:33:36.451Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T16:33:36.451Z INFO  dietmc_ram                       > bytes sent: 417414824\n 2024-07-18T16:33:36.451Z INFO  dietmc_ram                       > bytes recv: 11257248\n 2024-07-18T16:33:36.451Z INFO  dietmc_ram                       > bytes total: 428672072\n 2024-07-18T16:33:36.451Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.027 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.045 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.042 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.043 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.041 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4121ms\nrtt min/avg/max/mdev = 0.027/0.039/0.045/0.006 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 42104 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.64 GBytes  31.3 Gbits/sec    0   1.44 MBytes       \n[  5]   1.00-2.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.44 MBytes       \n[  5]   2.00-3.00   sec  3.76 GBytes  32.3 Gbits/sec    0   1.44 MBytes       \n[  5]   3.00-4.00   sec  3.72 GBytes  32.0 Gbits/sec    0   1.44 MBytes       \n[  5]   4.00-5.00   sec  3.02 GBytes  26.0 Gbits/sec    0   1.44 MBytes       \n[  5]   5.00-6.00   sec  3.71 GBytes  31.9 Gbits/sec    0   1.44 MBytes       \n[  5]   6.00-7.00   sec  3.65 GBytes  31.4 Gbits/sec    0   1.44 MBytes       \n[  5]   7.00-8.00   sec  3.76 GBytes  32.3 Gbits/sec    0   1.44 MBytes       \n[  5]   8.00-9.00   sec  3.76 GBytes  32.3 Gbits/sec    0   1.44 MBytes       \n[  5]   9.00-10.00  sec  3.34 GBytes  28.6 Gbits/sec    0   1.44 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.5 GBytes  32.2 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.5 GBytes  32.2 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=20.1 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=20.2 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=20.2 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 20.052/20.137/20.190/0.051 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 47346 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  12.9 MBytes   108 Mbits/sec    0   2.25 MBytes       \n[  5]   1.00-2.00   sec  12.4 MBytes   104 Mbits/sec    0   2.87 MBytes       \n[  5]   2.00-3.00   sec  12.2 MBytes   103 Mbits/sec    0   3.43 MBytes       \n[  5]   3.00-4.00   sec  10.8 MBytes  90.2 Mbits/sec    0   4.00 MBytes       \n[  5]   4.00-5.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   5.00-6.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   6.00-7.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   7.00-8.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   8.00-9.00   sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n[  5]   9.00-10.00  sec  11.6 MBytes  97.5 Mbits/sec    0   4.37 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec   118 MBytes  99.0 Mbits/sec    0             sender\n[  5]   0.00-10.27  sec   118 MBytes  96.4 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 10,
        "mbits": 100
    }
}