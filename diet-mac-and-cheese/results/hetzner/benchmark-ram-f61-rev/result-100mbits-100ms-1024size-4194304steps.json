{
    "meta": {
        "ram": true,
        "ram_size": 1024,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:32035'`\n 2024-07-18T16:44:37.204Z INFO  dietmc_ram > verifier mode\n 2024-07-18T16:44:37.204Z INFO  dietmc_ram > addr: \"127.0.0.1:32035\"\n 2024-07-18T16:44:37.204Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:44:37.204Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T16:44:37.491Z INFO  dietmc_ram > connection received\n 2024-07-18T16:44:46.361Z INFO  dietmc_ram > init time: 8.869875782s\n 2024-07-18T16:44:46.361Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:44:49.499Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:3.137785255s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:44:55.884Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T16:45:01.617Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.786940713s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:45:05.153Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T16:45:08.065Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T16:45:08.073Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.091Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.108Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.125Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.143Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.160Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.178Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.195Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.212Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.230Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:09.444Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:1036061     czero:0          \n 2024-07-18T16:45:14.088Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:2.735333415s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T16:45:15.101Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:3536061     czero:0          \n 2024-07-18T16:45:17.305Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:6036060     czero:0          \n 2024-07-18T16:45:19.526Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > nb inst:       8389636\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > nb addc:       8390656\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > nb add:       25171968\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > nb multc:     25171968\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > nb mult:       8390654\n 2024-07-18T16:45:19.754Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T16:45:19.754Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-18T16:45:19.754Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T16:45:19.754Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T16:45:19.754Z INFO  dietmc_ram                   > time ram exec: 33.39291317s\n 2024-07-18T16:45:19.754Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T16:45:19.754Z INFO  dietmc_ram                   > bytes recv: 208137232\n 2024-07-18T16:45:19.754Z INFO  dietmc_ram                   > bytes total: 214031968\n 2024-07-18T16:45:19.754Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:32035' --prover`\n 2024-07-18T16:44:37.191Z INFO  dietmc_ram > prover mode\n 2024-07-18T16:44:37.191Z INFO  dietmc_ram > addr: \"127.0.0.1:32035\"\n 2024-07-18T16:44:37.191Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T16:44:37.191Z INFO  dietmc_ram > time reading ins/wit/rel: 40ns\n 2024-07-18T16:44:46.465Z INFO  dietmc_ram > init time: 9.074503673s\n 2024-07-18T16:44:46.466Z INFO  dietmc_ram > run 0/1\n 2024-07-18T16:45:07.667Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T16:45:07.667Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 1024\n 2024-07-18T16:45:08.169Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.196Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.222Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.250Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.277Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.304Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.332Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.359Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.386Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.412Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T16:45:08.484Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:230879      czero:0          \n 2024-07-18T16:45:10.733Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2730879     czero:0          \n 2024-07-18T16:45:16.351Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5230878     czero:0          \n 2024-07-18T16:45:18.502Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7730878     czero:0          \n 2024-07-18T16:45:19.232Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > nb addc:       8390656\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > nb add:       25171968\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > nb multc:     25171968\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > nb mult:       8390654\n 2024-07-18T16:45:19.626Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T16:45:19.626Z INFO  dietmc_ram                       > time ram exec: 33.160832092s\n 2024-07-18T16:45:19.626Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-18T16:45:19.626Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T16:45:19.626Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T16:45:19.626Z INFO  dietmc_ram                       > bytes sent: 208137232\n 2024-07-18T16:45:19.626Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T16:45:19.626Z INFO  dietmc_ram                       > bytes total: 214031968\n 2024-07-18T16:45:19.626Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.028 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.049 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.050 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.052 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4104ms\nrtt min/avg/max/mdev = 0.028/0.045/0.052/0.008 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 44020 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.74 GBytes  32.1 Gbits/sec    0    959 KBytes       \n[  5]   1.00-2.00   sec  3.81 GBytes  32.7 Gbits/sec    0   1.56 MBytes       \n[  5]   2.00-3.00   sec  3.81 GBytes  32.7 Gbits/sec    0   1.56 MBytes       \n[  5]   3.00-4.00   sec  3.74 GBytes  32.1 Gbits/sec    0   1.56 MBytes       \n[  5]   4.00-5.00   sec  3.73 GBytes  32.0 Gbits/sec    0   1.56 MBytes       \n[  5]   5.00-6.00   sec  3.78 GBytes  32.5 Gbits/sec    0   1.56 MBytes       \n[  5]   6.00-7.00   sec  3.77 GBytes  32.4 Gbits/sec    0   1.56 MBytes       \n[  5]   7.00-8.00   sec  3.79 GBytes  32.6 Gbits/sec    0   1.62 MBytes       \n[  5]   8.00-9.00   sec  3.83 GBytes  32.9 Gbits/sec    0   1.62 MBytes       \n[  5]   9.00-10.00  sec  3.79 GBytes  32.5 Gbits/sec    0   1.62 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  37.9 GBytes  32.6 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  37.9 GBytes  32.6 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=200 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=200 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 200.181/200.211/200.262/0.029 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 60986 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.75 MBytes  31.4 Mbits/sec    0   1.37 MBytes       \n[  5]   1.00-2.00   sec  5.50 MBytes  46.1 Mbits/sec    0   8.99 MBytes       \n[  5]   2.00-3.00   sec  8.50 MBytes  71.3 Mbits/sec    0   8.99 MBytes       \n[  5]   3.00-4.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   4.00-5.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   5.00-6.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   6.00-7.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   7.00-8.00   sec  8.62 MBytes  72.4 Mbits/sec    0   8.99 MBytes       \n[  5]   8.00-9.00   sec  5.75 MBytes  48.2 Mbits/sec    0   8.99 MBytes       \n[  5]   9.00-10.00  sec  8.62 MBytes  72.3 Mbits/sec    0   8.99 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  75.2 MBytes  63.1 Mbits/sec    0             sender\n[  5]   0.00-10.20  sec  75.2 MBytes  61.9 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 100,
        "mbits": 100
    }
}