{
    "meta": {
        "ram": true,
        "ram_size": 1024,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 48.97s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:12504'`\n 2024-07-18T12:45:38.517Z INFO  dietmc_ram > verifier mode\n 2024-07-18T12:45:38.517Z INFO  dietmc_ram > addr: \"127.0.0.1:12504\"\n 2024-07-18T12:45:38.517Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T12:45:38.517Z INFO  dietmc_ram > time reading ins/wit/rel: 70ns\n 2024-07-18T12:45:38.517Z INFO  dietmc_ram > connection received\n 2024-07-18T12:45:39.430Z INFO  dietmc_ram > init time: 913.347467ms\n 2024-07-18T12:45:39.431Z INFO  dietmc_ram > run 0/1\n 2024-07-18T12:45:41.494Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.063092597s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:45:50.470Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T12:45:56.697Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.945985537s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:46:01.332Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T12:46:05.748Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T12:46:05.766Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.787Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.801Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.815Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.830Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.844Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.858Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.873Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.887Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.901Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:07.381Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:1036061     czero:0          \n 2024-07-18T12:46:12.114Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.92132608s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:46:12.919Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:3536061     czero:0          \n 2024-07-18T12:46:16.122Z INFO  diet_mac_and_cheese::backend > inp:8389636     witn:4194304     mul:6036060     czero:0          \n 2024-07-18T12:46:19.156Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > nb inst:       8389636\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > nb addc:       8390656\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > nb add:       25171968\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > nb multc:     25171968\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > nb mult:       8390654\n 2024-07-18T12:46:19.184Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T12:46:19.184Z INFO  dietmc_ram                   > ram-size 1024\n 2024-07-18T12:46:19.184Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T12:46:19.184Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T12:46:19.184Z INFO  dietmc_ram                   > time ram exec: 39.753778275s\n 2024-07-18T12:46:19.184Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T12:46:19.184Z INFO  dietmc_ram                   > bytes recv: 208137232\n 2024-07-18T12:46:19.184Z INFO  dietmc_ram                   > bytes total: 214031968\n 2024-07-18T12:46:19.184Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling autocfg v1.1.0\n   Compiling typenum v1.16.0\n   Compiling version_check v0.9.4\n   Compiling proc-macro2 v1.0.66\n   Compiling unicode-ident v1.0.11\n   Compiling cfg-if v1.0.0\n   Compiling libc v0.2.147\n   Compiling subtle v2.5.0\n   Compiling rustix v0.38.7\n   Compiling bitflags v2.3.3\n   Compiling linux-raw-sys v0.4.5\n   Compiling fastrand v2.0.0\n   Compiling semver v1.0.18\n   Compiling serde v1.0.183\n   Compiling syn v1.0.109\n   Compiling ppv-lite86 v0.2.17\n   Compiling memchr v2.5.0\n   Compiling radium v0.7.0\n   Compiling arrayvec v0.7.4\n   Compiling constant_time_eq v0.3.0\n   Compiling platforms v3.0.2\n   Compiling arrayref v0.3.7\n   Compiling cpufeatures v0.2.9\n   Compiling tap v1.0.1\n   Compiling funty v2.0.0\n   Compiling rawpointer v0.2.1\n   Compiling crossbeam-utils v0.8.16\n   Compiling vectoreyes v0.5.0 (/root/dora/vectoreyes)\n   Compiling futures-core v0.3.28\n   Compiling wyz v0.5.1\n   Compiling byteorder v1.4.3\n   Compiling regex-syntax v0.7.4\n   Compiling crossbeam-queue v0.3.8\n   Compiling lazy_static v1.4.0\n   Compiling utf8parse v0.2.1\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v1.3.2\n   Compiling anstyle-parse v0.2.1\n   Compiling colorchoice v1.0.0\n   Compiling anstyle-query v1.0.0\n   Compiling once_cell v1.18.0\n   Compiling eyre v0.6.8\n   Compiling zeroize v1.6.0\n   Compiling anstyle v1.0.1\n   Compiling bumpalo v3.13.0\n   Compiling indenter v0.3.3\n   Compiling humantime v2.1.0\n   Compiling futures-sink v0.3.28\n   Compiling strsim v0.10.0\n   Compiling heck v0.4.1\n   Compiling num-traits v0.2.16\n   Compiling num-integer v0.1.45\n   Compiling num-bigint v0.3.3\n   Compiling generic-array v0.14.7\n   Compiling num-bigint v0.4.3\n   Compiling matrixmultiply v0.3.7\n   Compiling lock_api v0.4.10\n   Compiling memoffset v0.7.1\n   Compiling termcolor v1.2.0\n   Compiling clap_lex v0.5.0\n   Compiling bitvec v1.0.1\n   Compiling smallvec v1.11.0\n   Compiling rustc_version v0.4.0\n   Compiling log v0.4.19\n   Compiling pin-utils v0.1.0\n   Compiling static_assertions v1.1.0\n   Compiling rustc-hash v1.1.0\n   Compiling quote v1.0.32\n   Compiling aho-corasick v1.0.2\n   Compiling curve25519-dalek v4.0.0\n   Compiling flatbuffers v23.5.26\n   Compiling keyed_arena v0.5.0 (/root/dora/keyed_arena)\n   Compiling syn v2.0.28\n   Compiling spin v0.9.8\n   Compiling cc v1.0.82\n   Compiling num_cpus v1.16.0\n   Compiling is-terminal v0.4.9\n   Compiling anstream v0.3.2\n   Compiling clap_builder v4.3.21\n   Compiling regex-automata v0.3.6\n   Compiling getrandom v0.2.10\n   Compiling nix v0.26.2\n   Compiling blake3 v1.4.1\n   Compiling ocelot v0.5.0 (/root/dora/ocelot)\n   Compiling rand_core v0.6.4\n   Compiling nanorand v0.7.0\n   Compiling crypto-common v0.1.6\n   Compiling swanky-generic-array v0.5.0 (/root/dora/crates/generic-array)\n   Compiling inout v0.1.3\n   Compiling block-buffer v0.10.4\n   Compiling num-complex v0.4.3\n   Compiling cipher v0.4.4\n   Compiling digest v0.10.7\n   Compiling rand_chacha v0.3.1\n   Compiling crypto-bigint v0.5.2\n   Compiling tempfile v3.7.1\n   Compiling sha2 v0.10.7\n   Compiling aes v0.8.3\n   Compiling rand v0.8.5\n   Compiling ndarray v0.15.6\n   Compiling swanky-flatbuffer-build v0.5.0 (/root/dora/crates/flatbuffer-build)\n   Compiling mac-n-cheese-sieve-parser v0.5.0 (/root/dora/mac-n-cheese/sieve-parser)\n   Compiling diet-mac-and-cheese v0.5.0 (/root/dora/diet-mac-and-cheese)\n   Compiling swanky-serialization v0.5.0 (/root/dora/crates/serialization)\n   Compiling swanky-field v0.5.0 (/root/dora/crates/field)\n   Compiling addchain v0.2.0\n   Compiling ff_codegen v0.12.0 (https://github.com/GaloisInc/ff?rev=1a4c6138e2e76e13f8d54fae81857e2cea3cbc4d#1a4c6138)\n   Compiling swanky-field-fft v0.5.0 (/root/dora/crates/field-fft)\n   Compiling regex v1.9.3\n   Compiling env_logger v0.10.0\n   Compiling bytemuck_derive v1.4.1\n   Compiling curve25519-dalek-derive v0.1.0\n   Compiling pin-project-internal v1.1.3\n   Compiling clap_derive v4.3.12\n   Compiling swanky-field-ff-primes v0.5.0 (/root/dora/crates/field-ff-primes)\n   Compiling ff_derive v0.12.0 (https://github.com/GaloisInc/ff?rev=1a4c6138e2e76e13f8d54fae81857e2cea3cbc4d#1a4c6138)\n   Compiling pretty_env_logger v0.5.0\n   Compiling ff v0.12.0 (https://github.com/GaloisInc/ff?rev=1a4c6138e2e76e13f8d54fae81857e2cea3cbc4d#1a4c6138)\n   Compiling bytemuck v1.13.1\n   Compiling swanky-field-f61p v0.5.0 (/root/dora/crates/field-f61p)\n   Compiling pin-project v1.1.3\n   Compiling flume v0.10.14\n   Compiling clap v4.3.21\n   Compiling swanky-field-binary v0.5.0 (/root/dora/crates/field-binary)\n   Compiling scuttlebutt v0.5.0 (/root/dora/scuttlebutt)\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 48.94s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 1024 --ram-steps 4194304 --connection-addr '127.0.0.1:12504' --prover`\n 2024-07-18T12:45:38.484Z INFO  dietmc_ram > prover mode\n 2024-07-18T12:45:38.484Z INFO  dietmc_ram > addr: \"127.0.0.1:12504\"\n 2024-07-18T12:45:38.484Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T12:45:38.484Z INFO  dietmc_ram > time reading ins/wit/rel: 71ns\n 2024-07-18T12:45:39.433Z INFO  dietmc_ram > init time: 916.189612ms\n 2024-07-18T12:45:39.433Z INFO  dietmc_ram > run 0/1\n 2024-07-18T12:46:05.293Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T12:46:05.293Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 1024\n 2024-07-18T12:46:05.763Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.809Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.832Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.855Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.878Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.902Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.925Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.949Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.973Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:05.996Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:46:06.063Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:230879      czero:0          \n 2024-07-18T12:46:09.053Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2730879     czero:0          \n 2024-07-18T12:46:14.543Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5230878     czero:0          \n 2024-07-18T12:46:17.814Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7730878     czero:0          \n 2024-07-18T12:46:18.580Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > nb addc:       8390656\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > nb add:       25171968\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > nb multc:     25171968\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > nb mult:       8390654\n 2024-07-18T12:46:19.157Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T12:46:19.157Z INFO  dietmc_ram                       > time ram exec: 39.723935063s\n 2024-07-18T12:46:19.157Z INFO  dietmc_ram                       > ram-size 1024\n 2024-07-18T12:46:19.157Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T12:46:19.157Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T12:46:19.157Z INFO  dietmc_ram                       > bytes sent: 208137232\n 2024-07-18T12:46:19.157Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T12:46:19.157Z INFO  dietmc_ram                       > bytes total: 214031968\n 2024-07-18T12:46:19.157Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.027 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.043 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4114ms\nrtt min/avg/max/mdev = 0.027/0.042/0.048/0.007 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 45470 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.35 GBytes  28.8 Gbits/sec    0   1.12 MBytes       \n[  5]   1.00-2.00   sec  3.68 GBytes  31.6 Gbits/sec    0   1.12 MBytes       \n[  5]   2.00-3.00   sec  3.66 GBytes  31.5 Gbits/sec    0   1.12 MBytes       \n[  5]   3.00-4.00   sec  3.64 GBytes  31.2 Gbits/sec    0   1.12 MBytes       \n[  5]   4.00-5.00   sec  3.71 GBytes  31.8 Gbits/sec    0   2.62 MBytes       \n[  5]   5.00-6.00   sec  3.73 GBytes  32.0 Gbits/sec    0   2.62 MBytes       \n[  5]   6.00-7.00   sec  2.07 GBytes  17.8 Gbits/sec    0   2.62 MBytes       \n[  5]   7.00-8.00   sec  2.25 GBytes  19.3 Gbits/sec    0   2.62 MBytes       \n[  5]   8.00-9.00   sec  3.33 GBytes  28.6 Gbits/sec    0   2.62 MBytes       \n[  5]   9.00-10.00  sec  3.75 GBytes  32.2 Gbits/sec    0   2.62 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  33.5 GBytes  28.8 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  33.5 GBytes  28.8 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.033 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.058 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.054 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.053 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.058 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4123ms\nrtt min/avg/max/mdev = 0.033/0.051/0.058/0.009 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 59606 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  9.38 MBytes  78.6 Mbits/sec    1   1.50 MBytes       \n[  5]   1.00-2.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   2.00-3.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   3.00-4.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   4.00-5.00   sec  7.12 MBytes  59.8 Mbits/sec    0   1.50 MBytes       \n[  5]   5.00-6.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   6.00-7.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   7.00-8.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   8.00-9.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   9.00-10.00  sec  7.12 MBytes  59.7 Mbits/sec    0   1.50 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  63.2 MBytes  53.0 Mbits/sec    1             sender\n[  5]   0.00-10.03  sec  59.5 MBytes  49.8 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 50
    }
}