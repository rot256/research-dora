{
    "meta": {
        "ram": true,
        "ram_size": 4096,
        "ram_steps": 4194304,
        "field": {
            "name": "f61",
            "size": 2305843009213693951
        }
    },
    "outputs": {
        "verifier": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on build directory\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 4194304 --connection-addr '127.0.0.1:25992'`\n 2024-07-18T12:54:58.557Z INFO  dietmc_ram > verifier mode\n 2024-07-18T12:54:58.557Z INFO  dietmc_ram > addr: \"127.0.0.1:25992\"\n 2024-07-18T12:54:58.557Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T12:54:58.557Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T12:54:58.557Z INFO  dietmc_ram > connection received\n 2024-07-18T12:54:59.453Z INFO  dietmc_ram > init time: 895.707671ms\n 2024-07-18T12:54:59.453Z INFO  dietmc_ram > run 0/1\n 2024-07-18T12:55:01.530Z INFO  diet_mac_and_cheese::homcom > SVOLE<time:2.077757083s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:55:10.521Z INFO  diet_mac_and_cheese::backend > inp:3333332     witn:1666667     mul:0           czero:0          \n 2024-07-18T12:55:16.753Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.950794161s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:55:21.386Z INFO  diet_mac_and_cheese::backend > inp:6666666     witn:3333333     mul:0           czero:0          \n 2024-07-18T12:55:25.803Z INFO  dietmc_ram                   > finalizing ram\n 2024-07-18T12:55:25.834Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.857Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.874Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.893Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.911Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.928Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.945Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.962Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.978Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.995Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:27.462Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:1016093     czero:0          \n 2024-07-18T12:55:32.211Z INFO  diet_mac_and_cheese::homcom  > SVOLE<time:1.925982515s field:[254, 255, 255, 255, 255, 255, 255, 31]>\n 2024-07-18T12:55:32.991Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:3516093     czero:0          \n 2024-07-18T12:55:36.201Z INFO  diet_mac_and_cheese::backend > inp:8392708     witn:4194304     mul:6016092     czero:0          \n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                   > finalizing verifier\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > nb inst:       8392708\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > nb witn:       4194304\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > nb addc:       8396800\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > nb add:       25190400\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > nb sub:              1\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > nb multc:     25190400\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > nb mult:       8396798\n 2024-07-18T12:55:39.292Z INFO  diet_mac_and_cheese::backend > nb czero:            1\n 2024-07-18T12:55:39.292Z INFO  dietmc_ram                   > ram-size 4096\n 2024-07-18T12:55:39.292Z INFO  dietmc_ram                   > ram-steps 4194304\n 2024-07-18T12:55:39.292Z INFO  dietmc_ram                   > ram-runs 1\n 2024-07-18T12:55:39.292Z INFO  dietmc_ram                   > time ram exec: 39.83937373s\n 2024-07-18T12:55:39.292Z INFO  dietmc_ram                   > bytes sent: 5894736\n 2024-07-18T12:55:39.292Z INFO  dietmc_ram                   > bytes recv: 208260112\n 2024-07-18T12:55:39.292Z INFO  dietmc_ram                   > bytes total: 214154848\n 2024-07-18T12:55:39.292Z INFO  dietmc_ram                   > VERIFIER DONE!\n",
        "prover": "    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\nwarning: unused imports: `Arc`, `Mutex`\n  --> scuttlebutt/src/channel.rs:21:12\n   |\n21 |     sync::{Arc, Mutex},\n   |            ^^^  ^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: `scuttlebutt` (lib) generated 1 warning (run `cargo fix --lib -p scuttlebutt` to apply 1 suggestion)\nwarning: unused import: `HashMap`\n --> diet-mac-and-cheese/src/ram/prover.rs:4:36\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                                    ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `AesRng`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:71\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                                                                       ^^^^^^\n\nwarning: unused import: `FComProver`\n  --> diet-mac-and-cheese/src/ram/prover.rs:16:14\n   |\n16 |     homcom::{FComProver, MacProver},\n   |              ^^^^^^^^^^\n\nwarning: unused import: `generic_array::typenum::Unsigned`\n  --> diet-mac-and-cheese/src/ram/prover.rs:21:5\n   |\n21 | use generic_array::typenum::Unsigned;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `BufReader`, `BufWriter`, `os::unix::net::UnixStream`\n --> diet-mac-and-cheese/src/ram/tests.rs:2:10\n  |\n2 |     io::{BufReader, BufWriter},\n  |          ^^^^^^^^^  ^^^^^^^^^\n3 |     os::unix::net::UnixStream,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `LPN_EXTEND_MEDIUM`, `LPN_EXTEND_SMALL`, `LPN_SETUP_MEDIUM`, `LPN_SETUP_SMALL`\n --> diet-mac-and-cheese/src/ram/tests.rs:6:21\n  |\n6 | use ocelot::svole::{LPN_EXTEND_MEDIUM, LPN_EXTEND_SMALL, LPN_SETUP_MEDIUM, LPN_SETUP_SMALL};\n  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Rng`, `SeedableRng`\n --> diet-mac-and-cheese/src/ram/tests.rs:7:12\n  |\n7 | use rand::{Rng, SeedableRng};\n  |            ^^^  ^^^^^^^^^^^\n\nwarning: unused imports: `AesRng`, `Channel`\n --> diet-mac-and-cheese/src/ram/tests.rs:8:19\n  |\n8 | use scuttlebutt::{AesRng, Channel};\n  |                   ^^^^^^  ^^^^^^^\n\nwarning: unused import: `swanky_field_f61p::F61p`\n --> diet-mac-and-cheese/src/ram/tests.rs:9:5\n  |\n9 | use swanky_field_f61p::F61p;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `Bounded`, `DietMacAndCheeseProver`, `DietMacAndCheeseVerifier`, `backend_trait::BackendT`, `prover::Prover`\n  --> diet-mac-and-cheese/src/ram/tests.rs:12:5\n   |\n12 |     backend_trait::BackendT,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n13 |     ram::{prover::Prover, Bounded},\n   |           ^^^^^^^^^^^^^^  ^^^^^^^\n14 |     DietMacAndCheeseProver, DietMacAndCheeseVerifier,\n   |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `RAM_SIZE`, `RAM_STEPS`, `verifier::Verifier`\n  --> diet-mac-and-cheese/src/ram/tests.rs:17:13\n   |\n17 | use super::{verifier::Verifier, RAM_SIZE, RAM_STEPS};\n   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^\n\nwarning: unused imports: `HashMap`, `hash_map::Entry`\n --> diet-mac-and-cheese/src/ram/verifier.rs:4:19\n  |\n4 |     collections::{hash_map::Entry, HashMap},\n  |                   ^^^^^^^^^^^^^^^  ^^^^^^^\n\nwarning: unused import: `serialization::SequenceSerializer`\n  --> diet-mac-and-cheese/src/ram/prover.rs:10:19\n   |\n10 | use scuttlebutt::{serialization::SequenceSerializer, AbstractChannel, AesRng};\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:127:28\n    |\n127 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:29\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:131:48\n    |\n131 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:144:28\n    |\n144 |     fn ram_read(&mut self, addr: &Self::Wire) -> Result<Self::Wire> {\n    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `addr`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:29\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n\nwarning: unused variable: `val`\n   --> diet-mac-and-cheese/src/backend_multifield.rs:148:48\n    |\n148 |     fn ram_write(&mut self, addr: &Self::Wire, val: &Self::Wire) -> Result<()> {\n    |                                                ^^^ help: if this is intentional, prefix it with an underscore: `_val`\n\nwarning: unused variable: `prover`\n   --> diet-mac-and-cheese/src/ram/prover.rs:126:9\n    |\n126 |         prover: &mut DietMacAndCheeseProver<V, F, C>,\n    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_prover`\n\nwarning: unused variable: `cnt`\n  --> diet-mac-and-cheese/src/plugins/ram.rs:48:19\n   |\n48 |         for (typ, cnt) in input_counts.into_iter().copied() {\n   |                   ^^^ help: if this is intentional, prefix it with an underscore: `_cnt`\n\nwarning: `diet-mac-and-cheese` (lib) generated 21 warnings (run `cargo fix --lib -p diet-mac-and-cheese` to apply 20 suggestions)\n    Finished release [optimized + debuginfo] target(s) in 0.13s\n     Running `/root/dora/target/release/dietmc_ram --lpn medium --ram-size 4096 --ram-steps 4194304 --connection-addr '127.0.0.1:25992' --prover`\n 2024-07-18T12:54:58.544Z INFO  dietmc_ram > prover mode\n 2024-07-18T12:54:58.544Z INFO  dietmc_ram > addr: \"127.0.0.1:25992\"\n 2024-07-18T12:54:58.544Z INFO  dietmc_ram > lpn: Medium\n 2024-07-18T12:54:58.544Z INFO  dietmc_ram > time reading ins/wit/rel: 30ns\n 2024-07-18T12:54:59.454Z INFO  dietmc_ram > init time: 897.125412ms\n 2024-07-18T12:54:59.454Z INFO  dietmc_ram > run 0/1\n 2024-07-18T12:55:25.373Z INFO  dietmc_ram > finalizing ram\n 2024-07-18T12:55:25.373Z INFO  diet_mac_and_cheese::ram::prover > finalizing ram: 4194304 operation, memory-size: 4096\n 2024-07-18T12:55:25.830Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.883Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.911Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.937Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.963Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:25.989Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:26.015Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:26.042Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:26.068Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:26.094Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:0           czero:0          \n 2024-07-18T12:55:26.164Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:212447      czero:0          \n 2024-07-18T12:55:29.134Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:2712447     czero:0          \n 2024-07-18T12:55:34.593Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:5212446     czero:0          \n 2024-07-18T12:55:37.864Z INFO  diet_mac_and_cheese::backend     > inp:0           witn:4194304     mul:7712446     czero:0          \n 2024-07-18T12:55:38.645Z INFO  dietmc_ram                       > finalizing prover\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > field largest value: [254, 255, 255, 255, 255, 255, 255, 31]\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > nb inst:             0\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > nb witn:       4194304\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > nb addc:       8396800\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > nb add:       25190400\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > nb sub:              1\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > nb multc:     25190400\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > nb mult:       8396798\n 2024-07-18T12:55:39.265Z INFO  diet_mac_and_cheese::backend     > nb czero:            1\n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                       > time ram exec: 39.810899473s\n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                       > ram-size 4096\n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                       > ram-steps 4194304\n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                       > ram-runs 1\n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                       > bytes sent: 208260112\n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                       > bytes recv: 5894736\n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                       > bytes total: 214154848\n 2024-07-18T12:55:39.265Z INFO  dietmc_ram                       > PROVER DONE!\n"
    },
    "network": {
        "before": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.027 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.047 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.048 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.046 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.043 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4114ms\nrtt min/avg/max/mdev = 0.027/0.042/0.048/0.007 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 45470 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  3.35 GBytes  28.8 Gbits/sec    0   1.12 MBytes       \n[  5]   1.00-2.00   sec  3.68 GBytes  31.6 Gbits/sec    0   1.12 MBytes       \n[  5]   2.00-3.00   sec  3.66 GBytes  31.5 Gbits/sec    0   1.12 MBytes       \n[  5]   3.00-4.00   sec  3.64 GBytes  31.2 Gbits/sec    0   1.12 MBytes       \n[  5]   4.00-5.00   sec  3.71 GBytes  31.8 Gbits/sec    0   2.62 MBytes       \n[  5]   5.00-6.00   sec  3.73 GBytes  32.0 Gbits/sec    0   2.62 MBytes       \n[  5]   6.00-7.00   sec  2.07 GBytes  17.8 Gbits/sec    0   2.62 MBytes       \n[  5]   7.00-8.00   sec  2.25 GBytes  19.3 Gbits/sec    0   2.62 MBytes       \n[  5]   8.00-9.00   sec  3.33 GBytes  28.6 Gbits/sec    0   2.62 MBytes       \n[  5]   9.00-10.00  sec  3.75 GBytes  32.2 Gbits/sec    0   2.62 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  33.5 GBytes  28.8 Gbits/sec    0             sender\n[  5]   0.00-10.00  sec  33.5 GBytes  28.8 Gbits/sec                  receiver\n\niperf Done.\n"
        },
        "after": {
            "ping": "PING localhost (::1) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.033 ms\n64 bytes from localhost (::1): icmp_seq=2 ttl=64 time=0.058 ms\n64 bytes from localhost (::1): icmp_seq=3 ttl=64 time=0.054 ms\n64 bytes from localhost (::1): icmp_seq=4 ttl=64 time=0.053 ms\n64 bytes from localhost (::1): icmp_seq=5 ttl=64 time=0.058 ms\n\n--- localhost ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4123ms\nrtt min/avg/max/mdev = 0.033/0.051/0.058/0.009 ms\n",
            "iperf": "Connecting to host localhost, port 5001\n[  5] local ::1 port 59606 connected to ::1 port 5001\n[ ID] Interval           Transfer     Bitrate         Retr  Cwnd\n[  5]   0.00-1.00   sec  9.38 MBytes  78.6 Mbits/sec    1   1.50 MBytes       \n[  5]   1.00-2.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   2.00-3.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   3.00-4.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   4.00-5.00   sec  7.12 MBytes  59.8 Mbits/sec    0   1.50 MBytes       \n[  5]   5.00-6.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   6.00-7.00   sec  5.75 MBytes  48.2 Mbits/sec    0   1.50 MBytes       \n[  5]   7.00-8.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   8.00-9.00   sec  5.62 MBytes  47.2 Mbits/sec    0   1.50 MBytes       \n[  5]   9.00-10.00  sec  7.12 MBytes  59.7 Mbits/sec    0   1.50 MBytes       \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Retr\n[  5]   0.00-10.00  sec  63.2 MBytes  53.0 Mbits/sec    1             sender\n[  5]   0.00-10.03  sec  59.5 MBytes  49.8 Mbits/sec                  receiver\n\niperf Done.\n"
        },
        "delay": 0,
        "mbits": 50
    }
}